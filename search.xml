<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ubuntu系统卸载</title>
      <link href="/posts/677099ed.html"/>
      <url>/posts/677099ed.html</url>
      
        <content type="html"><![CDATA[<p>下载磁盘精灵</p><p>解压缩 找到 exe 右键管理员打开</p><p>找到esp(3)这个 下面是Linux图标 四个全部删除  邮件删除分区</p><p>删除完毕后</p><p>点击保存</p><p>找到F盘 扩容分区 保存 </p>]]></content>
      
      
      <categories>
          
          <category> SF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言学习-void*详解</title>
      <link href="/posts/5e2c870d.html"/>
      <url>/posts/5e2c870d.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、void-指针"><a href="#一、void-指针" class="headerlink" title="一、void*指针"></a>一、void*指针</h1><h2 id="1、C语言void-指针用法"><a href="#1、C语言void-指针用法" class="headerlink" title="1、C语言void*指针用法"></a>1、C语言void*指针用法</h2><h3 id="1-1、void-指针类型用来定义变量"><a href="#1-1、void-指针类型用来定义变量" class="headerlink" title="1.1、void*指针类型用来定义变量"></a>1.1、void*指针类型用来定义变量</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意:void*指针表示无类型指针 4字节</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">void* p;</span><br><span class="line">p = NULL;</span><br></pre></td></tr></table></figure><h3 id="1-2、C语言专用语法"><a href="#1-2、C语言专用语法" class="headerlink" title="1.2、C语言专用语法"></a>1.2、C语言专用语法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">注意:</span><br><span class="line">void*指针（无类型指针）但可以指向任何一种类型的数据，即其他类型的指针可以不通过强制类型转换直接赋值给void*指针</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> *p;</span><br><span class="line"><span class="type">int</span>* a;</span><br><span class="line">p =a;</span><br><span class="line"><span class="type">float</span> *f;</span><br><span class="line">p = g;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意:在 C 语言当中，对指针类型的转换要求不是那么严苛，可以不通过强制转换就可以进行相互间的赋值</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>* a = <span class="literal">NULL</span>;</span><br><span class="line"><span class="type">float</span>* b= <span class="literal">NULL</span>;</span><br><span class="line"><span class="type">char</span>* c = <span class="literal">NULL</span>;</span><br><span class="line">a = b;</span><br><span class="line">b = c;</span><br><span class="line">c = a;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注意:</span><br><span class="line">虽然编译器（gcc 6.3版本）不会显示有错误，编译照常会通过。只是会给出类似下面的警告：</span><br><span class="line">警告 C4133 “=”: 从“float *”到“int *”的类型不兼容</span><br></pre></td></tr></table></figure><h2 id="2、C-void-指针用法"><a href="#2、C-void-指针用法" class="headerlink" title="2、C++void*指针用法"></a>2、C++void*指针用法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">注意：</span><br><span class="line">而在 C++ 当中，这一点要求就明显比较严格了。它不允许两个不同的类型指针相互赋值，除了 void * 指针。</span><br></pre></td></tr></table></figure><h3 id="2-1、c语言和C-不同之处"><a href="#2-1、c语言和C-不同之处" class="headerlink" title="2.1、c语言和C++不同之处"></a>2.1、c语言和C++不同之处</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1、其他的类型指针可以把值直接赋给 void * 指针，但反过来，void * 指针的值想要赋值给其他类型的指针，也需要通过强制转换。</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ex:</span><br><span class="line"><span class="type">void</span> *p = <span class="literal">NULL</span>;</span><br><span class="line"><span class="type">int</span>* a = (<span class="type">int</span>*)p;<span class="comment">//通过</span></span><br><span class="line"><span class="type">float</span> *b = p;<span class="comment">//错误</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2、void * 指针还有一个非常强大之处，在函数定义的时候，作为参数。当调用的时候，无论什么类型的类型指针或数组都可以正常运行。</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">test</span><span class="params">(<span class="type">void</span>* dst)</span>&#123; &#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *c = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    <span class="type">int</span> arr[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line">    test(c)；  <span class="comment">//正常编译</span></span><br><span class="line">    test(arr);<span class="comment">//正常编译</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">注意:</span><br><span class="line">不过 void * 指针也有一个致命的缺点，当对该指针进行算数操作，就会显示以下这个错误。</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="type">void</span> *p;</span><br><span class="line">   p++;<span class="comment">//错误</span></span><br><span class="line">   <span class="comment">//表达式必须是指向完整对象类型的指针</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">根据 ANSI C 标准规定，进行算数操作的指针，必须明确知道该指针所指向的数据类型大小。也就是所指向的数据，都必须是具体的类型，而不是空泛的 void 类型</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>blog记录流程</title>
      <link href="/posts/e258dd8e.html"/>
      <url>/posts/e258dd8e.html</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-blog教程"><a href="#hexo-blog教程" class="headerlink" title="hexo-blog教程"></a>hexo-blog教程</h1><h2 id="一、流程"><a href="#一、流程" class="headerlink" title="一、流程"></a>一、流程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">g 底部 gg顶部</span><br><span class="line">cmd </span><br><span class="line">然后</span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line">cnpm install hexo-cli -g</span><br><span class="line">创建目录:</span><br><span class="line">cd blog</span><br><span class="line">cnpm install -g hexo -cli</span><br><span class="line">hexo init</span><br><span class="line">hexo s</span><br><span class="line"></span><br><span class="line">hexo n 博客名字</span><br><span class="line">cd _posts/</span><br><span class="line">ls</span><br><span class="line">vim 博客 进行编辑</span><br><span class="line">cd ..</span><br><span class="line">cd .. 回退到blog文件夹</span><br><span class="line">hexo clean</span><br><span class="line">hexo g 部署成功</span><br><span class="line">hexo s</span><br><span class="line">打开给的端口网址</span><br><span class="line">部署到GitHub上</span><br><span class="line">创建同名仓库 aixiaocainiao.github.io(必须是这个名字)</span><br><span class="line">然后回来 </span><br><span class="line">cd blog (保证这个文件夹下）</span><br><span class="line">cnpm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">ll</span><br><span class="line">vim _config.yml</span><br><span class="line">esc g 底部 i 编写</span><br><span class="line">type: &#x27;git&#x27;</span><br><span class="line">  repo: https://github.com/aixiaocainiao/aixiaocainiao.github.io.git</span><br><span class="line">  branch: main</span><br><span class="line">hexo g</span><br><span class="line">hexo s 一下</span><br><span class="line">hexo d 部署到github</span><br><span class="line">此时就可以访问同名网址了</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> 页脚不行的</span><br></pre></td></tr></table></figure><h2 id="二、密匙"><a href="#二、密匙" class="headerlink" title="二、密匙"></a>二、密匙</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">见password那篇 第四篇文章 加密设置</span><br></pre></td></tr></table></figure><h2 id="三、可用的url图片可以借助于云图床"><a href="#三、可用的url图片可以借助于云图床" class="headerlink" title="三、可用的url图片可以借助于云图床"></a>三、可用的url图片可以借助于云图床</h2><h3 id="3-1图片引入"><a href="#3-1图片引入" class="headerlink" title="3.1图片引入"></a>3.1图片引入</h3><ul><li><p>安装成功后可在【C:/Hexo-Blog/blog-demo/node_modules】文件夹下找到hexo-theme-butterfly文件夹<br>default_cover:</p><ul><li><p><a href="https://picsum.photos/id/1018/470/315">https://picsum.photos/id/1018/470/315</a></p><p><img src="https://picsum.photos/id/1018/470/315" alt="图片url"></p></li><li><p>ttps://picsum.photos/id/1044/470/315</p></li><li><p><img src="https://picsum.photos/id/1044/470/315" alt="图片url"></p></li><li><p><a href="https://picsum.photos/id/1056/470/315">https://picsum.photos/id/1056/470/315</a></p></li></ul><p><img src="https://picsum.photos/id/1056/470/315" alt="图片url"></p><h3 id="3-2解决方法如下："><a href="#3-2解决方法如下：" class="headerlink" title="3.2解决方法如下："></a>3.2解决方法如下：</h3></li></ul><p>1、右击VSCode图标，选择以管理员身份运行；</p><p>2、在vscode终端中执行get-ExecutionPolicy，显示Restricted，状态是禁止的；</p><p>3、这时执行set-ExecutionPolicy RemoteSigned；</p><p>4、再执行get-ExecutionPolicy，显示RemoteSigned，状态解禁，可以运行。</p><ul><li><p>descr: Ubuntu指南</p><pre><code>cover: https://source.fomal.cc/img/default_cover_43.webp</code></pre><p><img src="https://source.fomal.cc/img/default_cover_43.webp" alt="图片url"></p><ul><li><p>descr: 玩转Win10<br>cover: <a href="https://source.fomal.cc/img/default_cover_44.webp">https://source.fomal.cc/img/default_cover_44.webp</a></p></li><li><p><img src="https://source.fomal.cc/img/default_cover_44.webp" alt="图片url"></p></li><li><p>descr: 长篇小说连载</p></li><li><p>cover: <a href="https://source.fomal.cc/img/default_cover_45.webp">https://source.fomal.cc/img/default_cover_45.webp</a></p><p><img src="https://source.fomal.cc/img/default_cover_45.webp" alt="图片url"></p></li><li><p>descr: 个人日记</p></li><li><p>cover: <a href="https://source.fomal.cc/img/default_cover_46.webp">https://source.fomal.cc/img/default_cover_46.webp</a></p><p><img src="https://source.fomal.cc/img/default_cover_46.webp" alt="url"></p></li></ul></li></ul><pre><code>  自定义字体在魔改5 自己还没有执行</code></pre><p>$web-bg = hexo-config(‘background’) &amp;&amp; unquote(hexo-config(‘background’))</p><p> fab fa-qq: <a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1310446718&amp;site=qq&amp;menu=yes">http://wpa.qq.com/msgrd?v=3&amp;uin=1310446718&amp;site=qq&amp;menu=yes</a> || QQ<br> fas fa-envelope-open-text: mailto:1310446718@qq.com || Email</p><p><a href="http://wpa.qq.com/msgrd?v=3&amp;uin=3051247944&amp;site=qq&amp;menu=yes">http://wpa.qq.com/msgrd?v=3&amp;uin=3051247944&amp;site=qq&amp;menu=yes</a></p>]]></content>
      
      
      <categories>
          
          <category> SF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>总结</title>
      <link href="/posts/c8d0539d.html"/>
      <url>/posts/c8d0539d.html</url>
      
        <content type="html"><![CDATA[<p>char <em>p = (char</em>)&a;<br>将变量a的地址强制转换为char<em>的地址 赋值给char</em>型指针</p>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>导航原理</title>
      <link href="/posts/cb0cb908.html"/>
      <url>/posts/cb0cb908.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="e8de34628c018b29a13099ee578c8e0afc85748381d76db12fc9b0cced3d1dc6">bf77d8818ecf38b4f77c36bf1e782c181c1165c890833abf2f2b018033fded3977d894175abb120937486a6b9f855f9a3b0ae6d9c895d4fe0532395a92e164366c045b10770b918cd4ead6ddb3189b54df999a3076bfa132377955214d7b57b3216527a6959a0d073122b738e11abb86e935960b3ab50248451a6ffe7f9e274755f884e650445ee15e38cb2317d19bf0b22b4d59139c21f461558045b9a4eec0d3694e1746d0efbb3f60a33227615f6134da9d525d5ae6167a394d74c37c1d649d7f7378aaa29c34cc62b4c79259f6aef75eaa7a859a0365b21263ee5775cc33103f2a0d8a8738232b47008ad246d8c4342fd15f7c1329b6f5cf4486557a9dea73fde9b8dc8fe9e4040df3666fbf3b2b3022fa0c4d2002b017ea98abf2202140bc45fe54b0f9c607d0b8578a463ddc3c782236672f572b5a08f4dec4d62650b002921f4aa8ec84837d32ac0980d9e0c5f7aa130860569284daaa0150ee11c4c3883d58f15987496ef482335a84612b8ffa7e077b84c1701df249c4d42029d3d6fdc363d3fab4b1eceff7426c7291a71db3df631e6f00494a74f935af9fc2f6c58280505e4f981fec2d919402abf36e897a2b88e1dd19c72ea392e6eab5a6a3ab9624f0e2a9a089b27cc9e17e95688431c14e1bd2bfa756d63fe81bb54abffcfd29ce6953989efc4f5b5c2fb0384ddbbaee9610f5f7bba64b2c696cc2a1bad8b3365d3a0cb531c48ac3b2e141365e59d92b8c73fb11bf1c02519f84fc124acd5c3630f320ae443a277c05283a3df977a9487ce372cc91aa045005193c499d62c56bc6eb6b1fc24e6d68f8eb7842c84302a4a8e46097fe538131af3051c913ce3ef72a6f0bfde01d2087a1f80acdb96402ddd7a977cf89a1d97c927482391f3c8a60b761c6ced0c88b60dd7720fb281a0b9a3c489274ec9993e50febd73d033dc6b28219253e72faf28d59218d9782282ae1cfef5a899f9f4ac1c4e0e29a6ce59e4b02567df251bb270e327f02a62854365c0ebdef009fd5eafc49a5542566ffbd0e1ca729f50b3e8733171e820cdfc328226ad2e7d0797269d6bd8990fb992ff2e854c2623221f674b93709e1c7730c169a619d93133c6942bfb133acfe24bdd196a1f50b4601435a13abe3eb67b7ba0278500e32ebcb2ecb3805b3f7ea0280a5eed2095b48e6a21acbccd7a1a9deaefc7db5a099d803bfd7966ad8e280b4896b28a471f068581e4a67c4f42364bb3a365d4b6b949ac25391329ec6f6c9c71184a9a53f9da27253cb37337905eaa9f44db88ddb44e0751b8f8d617e857b96e1de9f2c00746527447d420fe243d1a5d895ca00d048ab62bfb42e312eecc81645262fba6a557dc273904096e426605d1824920091a5d36f81559ae54de8f33e69353a9a355d22f57b9c5517090cc42929069b0b7099c0573c2e3143039a08b884f6dc3a6d7355a220f84056424b541d3f8e9245b60b670b6f145573ec1c0ea99bfef3bdb445a3fb4d525692af97ebc8a6d695cfca45488dbcad205266c79213aff0ecc6333b4d7c028eea68c1ba7d8b2e91aabaa6810f5ee12f598d4a5bd1a74ce69a75ce533bb671e0c5ad311fbedce817a41a5e0521362379577bb9c9d712591b481b12d3e861f986b88b1fb45d6e9f89efee2c068d1c8f053aa0a17bae15ce5fdf550344578070e936d6a1376603c165a73912c4008c1ff4d1f10c22764a549b3a588914cec9f222130295a5ad3d155ba2fc464a33ee8ec924121beb073e31b9610731b3f1abd89367e1a6cf6a7e57202ab2c90f1f42e77f1e8e780d765b45697c48b176e518e0328529cfaa4304d9de393ebcadd0b5a985f80ad94f8420fa3baf4566f6ed251766d0a4d66159b6a1c9c325b0051e19f28b00207a12baa6df3eda131c7b9dfccce28d251f47de8dd1e9787e38c8af6c14a2384c82a457bedf039ac2a82a7bc742dadd597d1368ad23fd6b4192ce074b1899db53ee43b5e9d1d0</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Slam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> token </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu通用 搜狗安装</title>
      <link href="/posts/9e9ea3d6.html"/>
      <url>/posts/9e9ea3d6.html</url>
      
        <content type="html"><![CDATA[<p>安装fcitx<br>sudo apt-get install fcitx-bin </p><p>第一步，安装sogoupinyin_4.0.1.2800_x86_64.deb包；<br>通过命令行重新安装搜狗输入法，安装包官网下载链接<br>sudo dpkg –i sogoupinyin_4.0.1.2800_x86_64.deb<br>安装中文支持包</p><p>打开setting－&gt; Region &amp; Lannguage -&gt; InputSource下的Manage installation Language</p><p>点击Installation/ Remove Language<br>勾选中文（简体），并点击应用</p><p>keyboard input method system选择：fcitx<br>————————————————<br>点击应用到全局，然后重启</p><p>1、通过命令行更新系统（如果因网络连接问题无法更新，可以选择换源）</p><p>sudo apt-get update<br>sudo apt-get upgrade</p><p>2、通过命令行安装aptitude</p><p>sudo apt-get install aptitude</p><p>3、通过命令行利用aptitude 安装fcitx、qt</p><p>sudo aptitude install fcitx-bin fcitx-table fcitx-config-gtk fcitx-config-gtk2 fcitx-frontend-all<br>sudo aptitude install qt5-default qtcreator qml-module-qtquick-controls2</p><p>4、如果右上角没有出现fcitx，在终端中输入im-config进行配置</p><p>5、通过命令行重新安装搜狗输入法</p><p>sudo dpkg –i sogoupinyin_4.0.1.2800_x86_64.deb</p><p>第二步，安装依赖。因为我之前安装好deb包后直接以为安装完成了，忽略了第二步要安装依赖。（这步骤很关键）<br>安装官网给出的两条命令，在终端执行</p><p>sudo apt install libqt5qml5 libqt5quick5 libqt5quickwidgets5 qml-module-qtquick2</p><p>sudo apt install libgsettings-qt1<br>最后卸载ibus<br>sudo apt-get purge ibus<br>6、重启完成即可使用（如果没有，需在右上角fcitx配置中添加搜狗输入法）<br>————————————————</p>]]></content>
      
      
      <categories>
          
          <category> SF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sougou </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu18 pycharm2021.3激活流程</title>
      <link href="/posts/88c40122.html"/>
      <url>/posts/88c40122.html</url>
      
        <content type="html"><![CDATA[<p>如何在Ubuntu安装pycharm的专业版，保姆级教学</p><p>一、下载Pycharm2021.3版本</p><pre><code>    进入pycharm官网，点击Download下载按钮</code></pre><p><a href="https://img-blog.csdnimg.cn/3cc019fbca954a5590106a31ee7c07ca.png">https://img-blog.csdnimg.cn/3cc019fbca954a5590106a31ee7c07ca.png</a><br>     这里我们选择Other version，其他版本<br><a href="https://img-blog.csdnimg.cn/cec1e7cca3ae4b9fb3661ee31fb4a7bf.png">https://img-blog.csdnimg.cn/cec1e7cca3ae4b9fb3661ee31fb4a7bf.png</a><br>        下拉选择2021.3版本（注意别选错了，其他版本不知道有没有用）<br><a href="https://img-blog.csdnimg.cn/eebfbe2261ad48a2b4286666539ec24f.png">https://img-blog.csdnimg.cn/eebfbe2261ad48a2b4286666539ec24f.png</a><br> 点击下载（注意：下载的是2021.3 - Linux (tar.gz)）<br><a href="https://img-blog.csdnimg.cn/5379a28e41f24c6e89d5fb1d9eeb423e.png">https://img-blog.csdnimg.cn/5379a28e41f24c6e89d5fb1d9eeb423e.png</a><br>    下载完成后，我们可以在下载文件夹下看到安装包<br><a href="https://img-blog.csdnimg.cn/2603a06c9d3e4a2196c20d8b78867a0a.png">https://img-blog.csdnimg.cn/2603a06c9d3e4a2196c20d8b78867a0a.png</a><br>二、安装pycharm2021.3 </p><pre><code>    由于我们下载的安装包是压缩的形式，我们先把它提取出来 ,这里我预先已经提取出来了</code></pre><p><a href="https://img-blog.csdnimg.cn/58d774aef9c44199bf69d31b163dde0a.png">https://img-blog.csdnimg.cn/58d774aef9c44199bf69d31b163dde0a.png</a><br> 现在我们来看一下提取出来的文件结构：</p><pre><code>              双击进去的第一层是“pycharm-2021.3”</code></pre><p><a href="https://img-blog.csdnimg.cn/b03fbf9391d04bada412067da83a5a54.png">https://img-blog.csdnimg.cn/b03fbf9391d04bada412067da83a5a54.png</a><br>       这里为了后面好操作我将其移动到“主目录”  下，就是“用户文件夹”下<br><a href="https://img-blog.csdnimg.cn/8c8c34f331e74790a2c1f3a6649758c6.png">https://img-blog.csdnimg.cn/8c8c34f331e74790a2c1f3a6649758c6.png</a><br><a href="https://img-blog.csdnimg.cn/3329149da1e742aaa9c0197fb2aeef8b.png">https://img-blog.csdnimg.cn/3329149da1e742aaa9c0197fb2aeef8b.png</a><br>  进入“pycharm-2021.3”可看到这些结构，找到bin这个文件夹：<br><a href="https://img-blog.csdnimg.cn/747779f9793142eab088b426c3750782.png">https://img-blog.csdnimg.cn/747779f9793142eab088b426c3750782.png</a><br>这里我们选择bin这个文件继续进去 ，找到pycharm.sh和pycharm64.vmoptions这2个文件</p><pre><code>    其中pycharm.sh是运行文件，pycharm64.vmoptions是配置文件</code></pre><p>   我们先来修改一下配置文件 pycharm64.vmoptions：</p><pre><code>    将下面这段代码添加上去  注：-javaagent: 后面加的是文件fineagent.jar的路径    文件在文章最后有提供。</code></pre><p>-javaagent:/home/用户名/fineagent.jar<br><a href="https://img-blog.csdnimg.cn/1d19259dce59418eac8f57eb9c016b44.png">https://img-blog.csdnimg.cn/1d19259dce59418eac8f57eb9c016b44.png</a><br> 添加好上面这段代码之后，我们将文件 fineagent.jar复制到“主目录”  下，就是“用户文件夹”下<br><a href="https://img-blog.csdnimg.cn/7c729511478a4cb4a10b89c58fdaa45e.png">https://img-blog.csdnimg.cn/7c729511478a4cb4a10b89c58fdaa45e.png</a><br>三、运行pycharm </p><pre><code>    在终端进入pycharm的bin文件夹 ：</code></pre><p><a href="https://img-blog.csdnimg.cn/4e910984b78a4fb6bf2be541245c610b.png">https://img-blog.csdnimg.cn/4e910984b78a4fb6bf2be541245c610b.png</a><br><a href="https://img-blog.csdnimg.cn/ef0ec50c440f4a2e93291979084f0e6b.png">https://img-blog.csdnimg.cn/ef0ec50c440f4a2e93291979084f0e6b.png</a><br> 通过下列命令运行pycharm<br>./pycharm.sh<br>四、运行成功，输入破解码激活 </p><pre><code>    复制下列代码：</code></pre><p>5AYV1D1RE5-eyJsaWNlbnNlSWQiOiI1QVlWMUQxUkU1IiwibGljZW5zZWVOYW1lIjoiaHR0cHM6Ly93d3cuaml3ZWljaGVuZ3podS5jb20iLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJJSSIsImZhbGxiYWNrRGF0ZSI6IjIwOTktMTItMzEiLCJwYWlkVXBUbyI6IjIwOTktMTItMzEifSx7ImNvZGUiOiJBQyIsImZhbGxiYWNrRGF0ZSI6IjIwOTktMTItMzEiLCJwYWlkVXBUbyI6IjIwOTktMTItMzEifSx7ImNvZGUiOiJEUE4iLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiUFMiLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiR08iLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiRE0iLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiQ0wiLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiUlMwIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJDIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJEIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlBDIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJNIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IldTIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IkRCIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IkRDIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJTVSIsImZhbGxiYWNrRGF0ZSI6IjIwOTktMTItMzEiLCJwYWlkVXBUbyI6IjIwOTktMTItMzEifV0sImhhc2giOiIxMjc5Njg3Ny8wIiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-HNPogO0kWkHCVMnsjmBXUqQt87UPHqdkYqZGveSJtu8hb2V2Yq7gHsHenp4UuEd3jwEwC+YrUIf7U5yDA/56F5Sdn0RLUHZX5DHeQbJPbmYCBsDRT7m8rnmMFOSZn3vwNatvv1cooZbcGOk3Wwxx6bF7XcgaIrmXRcmZMZgv2PZehr0WS1HxNKe3X4nbGP3MwiSbg4ypmxNDrljmgv+Si9QDDwNLDffqeO0Lce0FqEJuMWmvBS42S0aeIYF8IS5bp4+LFKLJ8T7tF40OxKYDurBb9+9c43GZBscM/eLB8Jos66jNGFwgebFUlvhzJKVHZtuc/N8zGeEnTq6K0T/B8w==-MIIDTjCCAjagAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMCAXDTE4MTEwMTEyMjk0NloYDzIwOTkwODA5MDIyNjA3WjAfMR0wGwYDVQQDDBRwcm9kMnktZnJvbS0yMDIwMTAxOTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMK3eyr0+Oys/TwcQO+qYaXWGBmXcEP4fR0bHHzZd/4WNGltXhecM80OWthA38BQRYAJBCKz/dSkO2Kj1H2y+7KB5cIaOiJEyTESfTSgzQdot6laRBU8oxy9mmagI46M8zEEmplPybY4YJj4HOwZiBsMQEMxoTgMDLpuHX6uASoVhSj6koB55lOj4wEgsQBeAMWTAXmTl88ixE179J8aBUkBGpL8w/tZzl9BJXZNF15gPfkS58rw8cdPzXLS0Yym37A2/KKFhfHzJc5KhbaxqYzmkAfTMqPsIqCQ1lQUAqfiPn2gN2I1Z3/cQuEW27M55fXVr2DduQe5DWzYJs85L50CAwEAAaOBmTCBljAJBgNVHRMEAjAAMB0GA1UdDgQWBBQk2hEilvWFQcCTR+gxI0z0wIQC/zBIBgNVHSMEQTA/gBSjnrZIZ0ISNkG9beC5tKBSi5fxs6EcpBowGDEWMBQGA1UEAwwNSmV0UHJvZmlsZSBDQYIJANJssYOyg3nhMBMGA1UdJQQMMAoGCCsGAQUFBwMBMAsGA1UdDwQEAwIFoDANBgkqhkiG9w0BAQsFAAOCAQEAsCQBjO5wttco/Z5cj/o4GBrku8UtBBBVFq4xsBanshTHm4deVxcTvta4aScV0TPKcaLqGqWx8A9v8XXO8dBbCuyXvWZteZ/C2Covg1xXiM99lz7VxqpjVmLdKanZn5u0gQSiYJdcfF+TdbmEIeSOnN/kLXNq2hXdJQK2zk2J25UZqu5EibRtTbdOzw6ZcfwJ8uOntXfsmAhnNICP3Wf/4wR/mwB0Ka4S+JA3IbF5MUmUZ/fjUaFarnin70us+Vxf/sZUi7u67wilvwVV0NAqDpthHUV0NRc4q+yOr2Dt/uCHdy4XRXLJfAv/z9/xBwNZZALNz3EtQL6IeIWWJByl3g==</p><p><a href="https://img-blog.csdnimg.cn/7da38dc5cd5b413e815bc9213b2b94e8.png">https://img-blog.csdnimg.cn/7da38dc5cd5b413e815bc9213b2b94e8.png</a><br><a href="https://img-blog.csdnimg.cn/373e6474f69e438f92553476f1c2ac02.png">https://img-blog.csdnimg.cn/373e6474f69e438f92553476f1c2ac02.png</a><br>     激活成功实例：<br><a href="https://img-blog.csdnimg.cn/d18f50b6be804b608a918d951e7ce483.png">https://img-blog.csdnimg.cn/d18f50b6be804b608a918d951e7ce483.png</a><br>到这里我们就已经成功在Ubuntu系统上激活pycharm专业版了， 欢迎大家在评论区讨论！！！</p><p>文章所需要的pycharm版本和资料如下 ，我已经放在了网盘，有需要也可以加我微信发你！！！！</p><p> 链接：<a href="https://pan.baidu.com/s/1uZteOE7OcXfwP4mHC2hlrg">https://pan.baidu.com/s/1uZteOE7OcXfwP4mHC2hlrg</a></p><p>提取码：x7x7 </p><p>微信 如下：<br>————————————————<br>版权声明：本文为CSDN博主「@xuxin_2000」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_52466870/article/details/128134511">https://blog.csdn.net/qq_52466870/article/details/128134511</a><br><a href="https://img-blog.csdnimg.cn/4115133912824e0a8c9bdb62bafe9fc3.png">https://img-blog.csdnimg.cn/4115133912824e0a8c9bdb62bafe9fc3.png</a><br>注：如果文件pycharm64.vmoptions没有配置错误和文件fineagent.jar添加正确，pycharm是正常运行的 </p>]]></content>
      
      
      <categories>
          
          <category> SF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pycharm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><!-- saved from url=(0134)http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/674-kinectxin-xi-fang-zhen-yi-ji-xian-shi.html --><html lang="zh-hans"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">                        <title>6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程</title>        <meta http-equiv="X-UA-Compatible" content="IE=edge">        <meta name="description" content="">        <meta name="generator" content="GitBook 3.2.3">        <meta name="author" content="Autolabor-赵虚左">                        <link rel="stylesheet" href="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/style.css">                                                <link rel="stylesheet" href="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/expandable-chapters.css">                                                            <link rel="stylesheet" href="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/search.css">                                                            <link rel="stylesheet" href="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/splitter.css">                                                            <link rel="stylesheet" href="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/website.css">                                                            <link rel="stylesheet" href="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/website(1).css">                                                                                                                                        <meta name="HandheldFriendly" content="true">    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">    <meta name="apple-mobile-web-app-capable" content="yes">    <meta name="apple-mobile-web-app-status-bar-style" content="black">    <link rel="apple-touch-icon-precomposed" sizes="152x152" href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/gitbook/images/apple-touch-icon-precomposed-152.png">    <link rel="shortcut icon" href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/gitbook/images/favicon.ico" type="image/x-icon">            <style>#csdn-plugin-note-btn{      position: fixed;      z-index: 100;      width: 25px;      box-sizing: content-box;      right: 0px;      top: 20%;      color: rgb(255, 255, 255);      background: #fff;      cursor: pointer;      border-bottom-left-radius: 6px;      padding: 10px 5px;      border-top-left-radius: 6px;      font-size: 16px;      letter-spacing: 4px;      box-shadow: 0px 2px 12px 0px rgba(123,123,123,0.26);    }    #csdn-plugin-note-btn img.logo{      display: block; width:25px; height:25px; margin-bottom:2px;    }    #csdn-plugin-note-btn img.close{      display: none; padding: 5px 5px 10px 5px; width: 15px; height: 15px; box-sizing: content-box; opacity:0.8;    }    #csdn-plugin-note-btn img.close:hover{opacity:1;}    #csdn-plugin-note-btn:hover img.close{display: block;}     #csdn-plugin-note-btn:hover{ padding-bottom: 0;}     #csdn-plugin-note-btn span{      color: #484848; font-size: 15px; width: 25px; display: block; text-align: center; word-break: break-all; line-height: 18px; font-weight: 600;padding-left: 2px;    }</style><style type="text/css">#_copy{align-items:center;background:#4494d5;border-radius:3px;color:#fff;cursor:pointer;display:flex;font-size:13px;height:30px;justify-content:center;position:absolute;width:60px;z-index:1000}#select-tooltip,#sfModal,.modal-backdrop,div[id^=reader-helper]{display:none!important}.modal-open{overflow:auto!important}._sf_adjust_body{padding-right:0!important}.enable_copy_btns_div{position:fixed;width:154px;left:10px;top:45%;background:#e7f1ff;border:2px solid #4595d5;font-weight:600;border-radius:2px;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,PingFang SC,Hiragino Sans GB,Microsoft YaHei,Helvetica Neue,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;z-index:5000}.enable_copy_btns_logo{width:100%;background:#4595d5;text-align:center;font-size:12px;color:#e7f1ff;line-height:30px;height:30px}.enable_copy_btns_btn{display:block;width:128px;height:28px;background:#7f5711;border-radius:4px;color:#fff;font-size:12px;border:0;outline:0;margin:8px auto;font-weight:700;cursor:pointer;opacity:.9}.enable_copy_btns_btn:hover{opacity:.8}.enable_copy_btns_btn:active{opacity:1}</style><link rel="prev" href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/673-she-xiang-tou-xin-xi-fang-zhen-yi-ji-xian-shi.html"><link rel="next" href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/68-ben-zhang-xiao-jie.html"></head>    <body inmaintabuse="1">        <div class="book without-animation with-summary font-size-2 font-family-1">    <div class="book-summary" style="width: 300px; left: 0px; position: absolute;">                    <div id="book-search-input" role="search">    <input type="text" placeholder="输入并搜索"></div>                            <nav role="navigation">                <ul class="summary">                                            <li class="chapter " data-level="1.1">                            <a target="_blank" href="http://www.autolabor.com.cn/">                                                    Autolabor主站                            </a>                                </li>                        <li class="divider"></li>                            <li class="chapter expanded" data-level="2.1" data-path="../../">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/">                                                    Introduction                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.1.1">                            <a target="_blank" href="https://www.bilibili.com/video/BV1Ci4y1L7ZZ/">                                                    课程视频                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.2" data-path="../../chapter1.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1.html">                                                    第 1 章 ROS概述与环境搭建                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.2.1" data-path="../../chapter1/11-rosjian-jie-yu-an-zhuang.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/11-rosjian-jie-yu-an-zhuang.html">                                                    1.1 ROS简介                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.2.1.1" data-path="../../chapter1/11-rosjian-jie-yu-an-zhuang/111rosgai-nian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/11-rosjian-jie-yu-an-zhuang/111rosgai-nian.html">                                                    1.1.1ROS概念                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.1.2" data-path="../../chapter1/11-rosjian-jie-yu-an-zhuang/112rosshe-ji-mu-biao.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/11-rosjian-jie-yu-an-zhuang/112rosshe-ji-mu-biao.html">                                                    1.1.2ROS设计目标                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.1.3" data-path="../../chapter1/11-rosjian-jie-yu-an-zhuang/113rosfa-zhan-li-cheng.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/11-rosjian-jie-yu-an-zhuang/113rosfa-zhan-li-cheng.html">                                                    1.1.3ROS发展历程                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.2.2" data-path="../../chapter1/12-roskai-fa-gong-ju-an-zhuang.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/12-roskai-fa-gong-ju-an-zhuang.html">                                                    1.2 ROS安装                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.2.2.1" data-path="../../chapter1/12-roskai-fa-gong-ju-an-zhuang/121-an-zhuang-xu-ni-ji-ruan-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/12-roskai-fa-gong-ju-an-zhuang/121-an-zhuang-xu-ni-ji-ruan-jian.html">                                                    1.2.1 安装虚拟机软件                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.2.2" data-path="../../chapter1/12-roskai-fa-gong-ju-an-zhuang/122-xu-ni-yi-tai-zhu-ji.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/12-roskai-fa-gong-ju-an-zhuang/122-xu-ni-yi-tai-zhu-ji.html">                                                    1.2.2 虚拟一台主机                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.2.3" data-path="../../chapter1/12-roskai-fa-gong-ju-an-zhuang/123-an-zhuang-ubuntu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/12-roskai-fa-gong-ju-an-zhuang/123-an-zhuang-ubuntu.html">                                                    1.2.3 安装 ubuntu                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.2.4" data-path="../../chapter1/12-roskai-fa-gong-ju-an-zhuang/124-an-zhuang-ros.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/12-roskai-fa-gong-ju-an-zhuang/124-an-zhuang-ros.html">                                                    1.2.4 安装 ROS                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.2.5" data-path="../../chapter1/12-roskai-fa-gong-ju-an-zhuang/125-ce-shi-ros.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/12-roskai-fa-gong-ju-an-zhuang/125-ce-shi-ros.html">                                                    1.2.5 测试 ROS                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.2.6" data-path="../../chapter1/12-roskai-fa-gong-ju-an-zhuang/127-zi-65993a-qi-ta-ros-ban-ben-an-zhuang.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/12-roskai-fa-gong-ju-an-zhuang/127-zi-65993a-qi-ta-ros-ban-ben-an-zhuang.html">                                                    1.2.6 资料:其他ROS版本安装                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.2.3" data-path="../../chapter1/13-rosji-cheng-kai-fa-huan-jing-da-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/13-rosji-cheng-kai-fa-huan-jing-da-jian.html">                                                    1.3 ROS快速体验                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.2.3.1" data-path="../../chapter1/13-rosji-cheng-kai-fa-huan-jing-da-jian/131-helloworldshi-xian-jian-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/13-rosji-cheng-kai-fa-huan-jing-da-jian/131-helloworldshi-xian-jian-jie.html">                                                    1.3.1 HelloWorld实现简介                            </a>                                </li>            <li class="chapter " data-level="2.2.3.2" data-path="../../chapter1/13-rosji-cheng-kai-fa-huan-jing-da-jian/131-helloworldc724829.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/13-rosji-cheng-kai-fa-huan-jing-da-jian/131-helloworldc724829.html">                                                    1.3.2 HelloWorld实现A(C++)                            </a>                                </li>            <li class="chapter " data-level="2.2.3.3" data-path="../../chapter1/13-rosji-cheng-kai-fa-huan-jing-da-jian/132-helloworldpython724829.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/13-rosji-cheng-kai-fa-huan-jing-da-jian/132-helloworldpython724829.html">                                                    1.3.3 HelloWorld实现B(Python)                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.2.4" data-path="../../chapter1/14-ros-ji-cheng-kai-fa-huan-jing-da-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/14-ros-ji-cheng-kai-fa-huan-jing-da-jian.html">                                                    1.4 ROS集成开发环境搭建                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.2.4.1" data-path="../../chapter1/14-ros-ji-cheng-kai-fa-huan-jing-da-jian/141-an-zhuang-zhong-duan.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/14-ros-ji-cheng-kai-fa-huan-jing-da-jian/141-an-zhuang-zhong-duan.html">                                                    1.4.1 安装终端                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.4.2" data-path="../../chapter1/14-ros-ji-cheng-kai-fa-huan-jing-da-jian/142-an-zhuang-vscode.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/14-ros-ji-cheng-kai-fa-huan-jing-da-jian/142-an-zhuang-vscode.html">                                                    1.4.2 安装VScode                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.4.3" data-path="../../chapter1/14-ros-ji-cheng-kai-fa-huan-jing-da-jian/143-launchwen-jian-yan-shi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/14-ros-ji-cheng-kai-fa-huan-jing-da-jian/143-launchwen-jian-yan-shi.html">                                                    1.4.3 launch文件演示                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.2.5" data-path="../../chapter1/15-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/15-ben-zhang-xiao-jie.html">                                                    1.5 ROS架构                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.2.5.1" data-path="../../chapter1/15-ben-zhang-xiao-jie/151-roswen-jian-xi-tong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/15-ben-zhang-xiao-jie/151-roswen-jian-xi-tong.html">                                                    1.5.1 ROS文件系统                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.5.2" data-path="../../chapter1/15-ben-zhang-xiao-jie/152-ji-suan-tu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/15-ben-zhang-xiao-jie/152-ji-suan-tu.html">                                                    1.5.2 ROS文件系统相关命令                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.5.3" data-path="../../chapter1/15-ben-zhang-xiao-jie/153-rosji-suan-tu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/15-ben-zhang-xiao-jie/153-rosji-suan-tu.html">                                                    1.5.3 ROS计算图                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.2.6" data-path="../../chapter1/16-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/16-ben-zhang-xiao-jie.html">                                                    1.6 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.3" data-path="../../di-2-zhang-ros-jia-gou-she-ji.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji.html">                                                    第 2 章 ROS通信机制                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.3.1" data-path="../../di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin.html">                                                    2.1 话题通信                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.3.1.1" data-path="../../di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/211-li-lun-mo-xing.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/211-li-lun-mo-xing.html">                                                    2.1.1 话题通信理论模型                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.1.2" data-path="../../di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/212-hua-ti-tong-xin-zhi-c-shi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/212-hua-ti-tong-xin-zhi-c-shi-xian.html">                                                    2.1.2 话题通信基本操作A(C++)                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.1.3" data-path="../../di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/213-hua-ti-tong-xin-zhi-python-shi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/213-hua-ti-tong-xin-zhi-python-shi-xian.html">                                                    2.1.3 话题通信基本操作B(Python)                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.1.4" data-path="../../di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/214-hua-ti-tong-xin-zhi-zi-ding-yi-xiao-xi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/214-hua-ti-tong-xin-zhi-zi-ding-yi-xiao-xi.html">                                                    2.1.4 话题通信自定义msg                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.1.5" data-path="../../di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/215-hua-ti-tong-xin-zhi-c-diao-yong-zi-ding-yi-xiao-xi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/215-hua-ti-tong-xin-zhi-c-diao-yong-zi-ding-yi-xiao-xi.html">                                                    2.1.5 话题通信自定义msg调用A(C++)                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.1.6" data-path="../../di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/216-hua-ti-tong-xin-zhi-python-diao-yong-zi-ding-yi-xiao-xi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/216-hua-ti-tong-xin-zhi-python-diao-yong-zi-ding-yi-xiao-xi.html">                                                    2.1.6 话题通信自定义msg调用B(Python)                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.3.2" data-path="../../di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin.html">                                                    2.2 服务通信                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.3.2.1" data-path="../../di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin/221-fu-wu-tong-xin-li-lun-mo-xing.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin/221-fu-wu-tong-xin-li-lun-mo-xing.html">                                                    2.2.1 服务通信理论模型                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.2.2" data-path="../../di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin/222-fu-wu-tong-xin-zi-ding-yi-srv.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin/222-fu-wu-tong-xin-zi-ding-yi-srv.html">                                                    2.2.2 服务通信自定义srv                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.2.3" data-path="../../di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin/223-fu-wu-tong-xin-zi-ding-yi-srv-diao-yong-a-c-shi-73b029.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin/223-fu-wu-tong-xin-zi-ding-yi-srv-diao-yong-a-c-shi-73b029.html">                                                    2.2.3 服务通信自定义srv调用A(C++)                            </a>                                </li>            <li class="chapter " data-level="2.3.2.4" data-path="../../di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin/224-fu-wu-tong-xin-zi-ding-yi-srv-diao-yong-b-python.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin/224-fu-wu-tong-xin-zi-ding-yi-srv-diao-yong-b-python.html">                                                    2.2.4 服务通信自定义srv调用B(Python)                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.3.3" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-can-shu-fu-wu-qi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-can-shu-fu-wu-qi.html">                                                    2.3 参数服务器                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.3.3.1" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-can-shu-fu-wu-qi/231-can-shu-fu-wu-qi-li-lun-mo-xing.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-can-shu-fu-wu-qi/231-can-shu-fu-wu-qi-li-lun-mo-xing.html">                                                    2.3.1 参数服务器理论模型                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.3.2" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-can-shu-fu-wu-qi/232-can-shu-cao-zuo-a-c-++.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-can-shu-fu-wu-qi/232-can-shu-cao-zuo-a-c-++.html">                                                    2.3.2 参数操作A(C++)                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.3.3" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-can-shu-fu-wu-qi/233-can-shu-caozuo-b-python.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-can-shu-fu-wu-qi/233-can-shu-caozuo-b-python.html">                                                    2.3.3 参数操作B(Python)                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.3.4" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling.html">                                                    2.4 常用命令                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.3.4.1" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/241-rostopic.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/241-rostopic.html">                                                    2.4.1 rosnode                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.4.2" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/242-rostopic.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/242-rostopic.html">                                                    2.4.2 rostopic                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.4.3" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/244-rosmsg.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/244-rosmsg.html">                                                    2.4.3 rosmsg                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.4.4" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/243-rosservice.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/243-rosservice.html">                                                    2.4.4 rosservice                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.4.5" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/245-rossrv.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/245-rossrv.html">                                                    2.4.5 rossrv                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.4.6" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/246-rosparam.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/246-rosparam.html">                                                    2.4.6 rosparam                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.3.5" data-path="../../di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao.html">                                                    2.5 通信机制实操                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.3.5.1" data-path="../../di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao/251-shi-cao-01-hua-ti.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao/251-shi-cao-01-hua-ti.html">                                                    2.5.1 实操01_话题发布                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.5.2" data-path="../../di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao/252-shi-cao-02-hua-ti-ding-yue.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao/252-shi-cao-02-hua-ti-ding-yue.html">                                                    2.5.2 实操02_话题订阅                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.5.3" data-path="../../di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao/253-shi-cao-03-fu-wu-diao-yong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao/253-shi-cao-03-fu-wu-diao-yong.html">                                                    2.5.3 实操03_服务调用                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.5.4" data-path="../../di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao/254-shi-cao-04-can-shu-she-zhi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao/254-shi-cao-04-can-shu-she-zhi.html">                                                    2.5.4 实操04_参数设置                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.3.6" data-path="../../di-2-zhang-ros-jia-gou-she-ji/26-tong-xin-ji-zhi-bi-jiao.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/26-tong-xin-ji-zhi-bi-jiao.html">                                                    2.6 通信机制比较                            </a>                                </li>            <li class="chapter " data-level="2.3.7" data-path="../../di-2-zhang-ros-jia-gou-she-ji/27-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/27-ben-zhang-xiao-jie.html">                                                    2.7 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.4" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie.html">                                                    第 3 章 ROS通信机制进阶                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.4.1" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31.html">                                                    3.1 常用API                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.4.1.1" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/311-chu-shi-hua-yu-guan-bi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/311-chu-shi-hua-yu-guan-bi.html">                                                    3.1.1 初始化                            </a>                                </li>            <li class="chapter expanded" data-level="2.4.1.2" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/313-hua-ti-dui-xiang-chuang-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/313-hua-ti-dui-xiang-chuang-jian.html">                                                    3.1.2 话题与服务相关对象                            </a>                                </li>            <li class="chapter expanded" data-level="2.4.1.3" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/314-shi-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/314-shi-jian.html">                                                    3.1.3 回旋函数                            </a>                                </li>            <li class="chapter expanded" data-level="2.4.1.4" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/315-ri-zhi-shu-chu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/315-ri-zhi-shu-chu.html">                                                    3.1.4 时间                             </a>                                </li>            <li class="chapter expanded" data-level="2.4.1.5" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/316-qi-ta-han-shu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/316-qi-ta-han-shu.html">                                                    3.1.5 其他函数                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.4.2" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/32-roszhong-de-tou-wen-jian-yu-yuan-wen-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/32-roszhong-de-tou-wen-jian-yu-yuan-wen-jian.html">                                                    3.2 ROS中的头文件与源文件                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.4.2.1" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/32-roszhong-de-tou-wen-jian-yu-yuan-wen-jian/321-zi-ding-yi-tou-wen-jian-diao-yong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/32-roszhong-de-tou-wen-jian-yu-yuan-wen-jian/321-zi-ding-yi-tou-wen-jian-diao-yong.html">                                                    3.2.1 自定义头文件调用                            </a>                                </li>            <li class="chapter expanded" data-level="2.4.2.2" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/32-roszhong-de-tou-wen-jian-yu-yuan-wen-jian/322-zi-ding-yi-yuan-wen-jian-diao-yong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/32-roszhong-de-tou-wen-jian-yu-yuan-wen-jian/322-zi-ding-yi-yuan-wen-jian-diao-yong.html">                                                    3.2.2 自定义源文件调用                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.4.3" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/33-pythonmo-kuai-dao-ru.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/33-pythonmo-kuai-dao-ru.html">                                                    3.3 Python模块导入                            </a>                                </li>            <li class="chapter expanded" data-level="2.4.4" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/33-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/33-ben-zhang-xiao-jie.html">                                                    3.4 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.5" data-path="../../5.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5.html">                                                    第 4 章 ROS运行管理                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.5.1" data-path="../../5/41-rosyuan-gong-neng-bao.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/41-rosyuan-gong-neng-bao.html">                                                    4.1 ROS元功能包                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.2" data-path="../../5/45-rosjie-dianguan-li-launch-wen-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-rosjie-dianguan-li-launch-wen-jian.html">                                                    4.2 ROS节点管理launch文件                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.5.2.1" data-path="../../5/45-rosjie-dianguan-li-launch-wen-jian/411-launchwen-jian-biao-qian-zhi-launch.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-rosjie-dianguan-li-launch-wen-jian/411-launchwen-jian-biao-qian-zhi-launch.html">                                                    4.2.1 launch文件标签之launch                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.2.2" data-path="../../5/45-rosjie-dianguan-li-launch-wen-jian/412-launchwen-jian-biao-qian-zhi-node.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-rosjie-dianguan-li-launch-wen-jian/412-launchwen-jian-biao-qian-zhi-node.html">                                                    4.2.2 launch文件标签之node                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.2.3" data-path="../../5/45-rosjie-dianguan-li-launch-wen-jian/411-launchwen-jian-biao-qian-zhi-include.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-rosjie-dianguan-li-launch-wen-jian/411-launchwen-jian-biao-qian-zhi-include.html">                                                    4.2.3 launch文件标签之include                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.2.4" data-path="../../5/45-rosjie-dianguan-li-launch-wen-jian/414-launchwen-jian-biao-qian-zhi-remap.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-rosjie-dianguan-li-launch-wen-jian/414-launchwen-jian-biao-qian-zhi-remap.html">                                                    4.2.4 launch文件标签之remap                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.2.5" data-path="../../5/45-rosjie-dianguan-li-launch-wen-jian/411-launchwen-jian-biao-qian-zhi-param.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-rosjie-dianguan-li-launch-wen-jian/411-launchwen-jian-biao-qian-zhi-param.html">                                                    4.2.5 launch文件标签之param                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.2.6" data-path="../../5/45-rosjie-dianguan-li-launch-wen-jian/416-launchwen-jian-biao-qian-zhi-rosparam.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-rosjie-dianguan-li-launch-wen-jian/416-launchwen-jian-biao-qian-zhi-rosparam.html">                                                    4.2.6 launch文件标签之rosparam                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.2.7" data-path="../../5/45-rosjie-dianguan-li-launch-wen-jian/417-launchwen-jian-biao-qian-zhi-group.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-rosjie-dianguan-li-launch-wen-jian/417-launchwen-jian-biao-qian-zhi-group.html">                                                    4.2.7 launch文件标签之group                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.2.8" data-path="../../5/45-rosjie-dianguan-li-launch-wen-jian/418-launchwen-jian-biao-qian-zhi-arg.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-rosjie-dianguan-li-launch-wen-jian/418-launchwen-jian-biao-qian-zhi-arg.html">                                                    4.2.8 launch文件标签之arg                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.5.3" data-path="../../5/41-rosgong-zuo-kong-jian-fu-gai.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/41-rosgong-zuo-kong-jian-fu-gai.html">                                                    4.3 ROS工作空间覆盖                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.4" data-path="../../5/42-rosjie-dian-ming-cheng-zhong-ming.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/42-rosjie-dian-ming-cheng-zhong-ming.html">                                                    4.4 ROS节点名称重名                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.5.4.1" data-path="../../5/42-rosjie-dian-ming-cheng-zhong-ming/431-rosrun-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/42-rosjie-dian-ming-cheng-zhong-ming/431-rosrun-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                                                    4.4.1 rosrun设置命名空间与重映射                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.4.2" data-path="../../5/42-rosjie-dian-ming-cheng-zhong-ming/432-launchwen-jian-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/42-rosjie-dian-ming-cheng-zhong-ming/432-launchwen-jian-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                                                    4.4.2 launch文件设置命名空间与重映射                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.4.3" data-path="../../5/42-rosjie-dian-ming-cheng-zhong-ming/433-bian-ma-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/42-rosjie-dian-ming-cheng-zhong-ming/433-bian-ma-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                                                    4.4.3 编码设置命名空间与重映射                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.5.5" data-path="../../5/43-roshua-ti-ming-cheng-zhong-ming.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/43-roshua-ti-ming-cheng-zhong-ming.html">                                                    4.5 ROS话题名称设置                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.5.5.1" data-path="../../5/43-roshua-ti-ming-cheng-zhong-ming/441-rosrunshe-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/43-roshua-ti-ming-cheng-zhong-ming/441-rosrunshe-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                                                    4.5.1 rosrun设置话题重映射                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.5.2" data-path="../../5/43-roshua-ti-ming-cheng-zhong-ming/442-launchwen-jian-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/43-roshua-ti-ming-cheng-zhong-ming/442-launchwen-jian-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                                                    4.5.2 launch文件设置话题重映射                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.5.3" data-path="../../5/43-roshua-ti-ming-cheng-zhong-ming/443-bian-ma-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/43-roshua-ti-ming-cheng-zhong-ming/443-bian-ma-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                                                    4.5.3 编码设置话题名称                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.5.6" data-path="../../5/45-roscan-shu-ming-cheng-she-zhi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-roscan-shu-ming-cheng-she-zhi.html">                                                    4.6 ROS参数名称设置                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.5.6.1" data-path="../../5/45-roscan-shu-ming-cheng-she-zhi/451-rosrunshe-zhi-can-shu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-roscan-shu-ming-cheng-she-zhi/451-rosrunshe-zhi-can-shu.html">                                                    4.6.1 rosrun设置参数                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.6.2" data-path="../../5/45-roscan-shu-ming-cheng-she-zhi/452-launchwen-jian-she-zhi-can-shu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-roscan-shu-ming-cheng-she-zhi/452-launchwen-jian-she-zhi-can-shu.html">                                                    4.6.2 launch文件设置参数                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.6.3" data-path="../../5/45-roscan-shu-ming-cheng-she-zhi/453-bian-ma-she-zhi-can-shu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-roscan-shu-ming-cheng-she-zhi/453-bian-ma-she-zhi-can-shu.html">                                                    4.6.3 编码设置参数                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.5.7" data-path="../../5/44-rosfen-bu-shi-tong-xin.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/44-rosfen-bu-shi-tong-xin.html">                                                    4.7 ROS分布式通信                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.8" data-path="../../5/48-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/48-ben-zhang-xiao-jie.html">                                                    4.8 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.6" data-path="../../di-5-zhang-ji-qi-ren-dao-hang.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang.html">                                                    第 5 章 ROS常用组件                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.6.1" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan.html">                                                    5.1 TF坐标变换                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.6.1.1" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/511-zuo-biao-msg-xiao-xi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/511-zuo-biao-msg-xiao-xi.html">                                                    5.1.1 坐标msg消息                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.1.2" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/512-jing-tai-zuo-biao-bian-huan.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/512-jing-tai-zuo-biao-bian-huan.html">                                                    5.1.2 静态坐标变换                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.1.3" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/513-dong-tai-zuo-biao-bian-huan.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/513-dong-tai-zuo-biao-bian-huan.html">                                                    5.1.3 动态坐标变换                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.1.4" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/514-duo-zuo-biao-bian-huan.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/514-duo-zuo-biao-bian-huan.html">                                                    5.1.4 多坐标变换                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.1.5" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/515-zuo-biao-xi-guan-xi-cha-kan.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/515-zuo-biao-xi-guan-xi-cha-kan.html">                                                    5.1.5 坐标系关系查看                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.1.6" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/516-tfzuo-biao-bian-huan-shi-cao.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/516-tfzuo-biao-bian-huan-shi-cao.html">                                                    5.1.6 TF坐标变换实操                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.1.7" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/517-tf2yu-tf.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/517-tf2yu-tf.html">                                                    5.1.7 TF2与TF                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.1.8" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/518-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/518-xiao-jie.html">                                                    5.1.8 小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.6.2" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/52-rosbagshi-yong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/52-rosbagshi-yong.html">                                                    5.2 rosbag                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.6.2.1" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/52-rosbagshi-yong/521-rosbagshi-yong-ming-ling-xing.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/52-rosbagshi-yong/521-rosbagshi-yong-ming-ling-xing.html">                                                    5.2.1 rosbag使用_命令行                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.2.2" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/52-rosbagshi-yong/522-rosbagshi-yong-bian-ma.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/52-rosbagshi-yong/522-rosbagshi-yong-bian-ma.html">                                                    5.2.2 rosbag使用_编码                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.6.3" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang.html">                                                    5.3 rqt工具箱                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.6.3.1" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/531-rqtan-zhuang-qi-dong-yu-ji-ji-ben-shi-yong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/531-rqtan-zhuang-qi-dong-yu-ji-ji-ben-shi-yong.html">                                                    5.3.1 rqt安装启动与基本使用                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.3.2" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/532-rqtchang-yongcha-jian-rqt-graph.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/532-rqtchang-yongcha-jian-rqt-graph.html">                                                    5.3.2 rqt常用插件:rqt_graph                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.3.3" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/533-rqtchang-yong-cha-4ef63a-rqt-console.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/533-rqtchang-yong-cha-4ef63a-rqt-console.html">                                                    5.3.3 rqt常用插件:rqt_console                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.3.4" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/534-rqtchang-yong-cha-4ef63a-rqt-plot.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/534-rqtchang-yong-cha-4ef63a-rqt-plot.html">                                                    5.3.4 rqt常用插件:rqt_plot                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.3.5" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/535-rqtchang-yong-cha-4ef63a-rqt-bag.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/535-rqtchang-yong-cha-4ef63a-rqt-bag.html">                                                    5.3.5 rqt常用插件:rqt_bag                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.6.4" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/54-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/54-ben-zhang-xiao-jie.html">                                                    5.4 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.7" data-path="../../di-6-zhang-ji-qi-ren-xi-tong-fang-zhen.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen.html">                                                    第 6 章 机器人系统仿真                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.7.1" data-path="../61-gai-shu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/61-gai-shu.html">                                                    6.1 概述                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.2" data-path="../62-fang-zhen-urdf-ji-cheng-rviz.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/62-fang-zhen-urdf-ji-cheng-rviz.html">                                                    6.2 URDF集成Rviz基本流程                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.3" data-path="../62-fang-zhen-urdf-ji-cheng-rviz/622-urdfyu-fa-xiang-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/62-fang-zhen-urdf-ji-cheng-rviz/622-urdfyu-fa-xiang-jie.html">                                                    6.3 URDF语法详解                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.7.3.1" data-path="../62-fang-zhen-urdf-ji-cheng-rviz/623-urdfyu-fa-xiang-jie-robot.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/62-fang-zhen-urdf-ji-cheng-rviz/623-urdfyu-fa-xiang-jie-robot.html">                                                    6.3.1 URDF语法详解01_robot                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.3.2" data-path="../62-fang-zhen-urdf-ji-cheng-rviz/624-urdfyu-fa-xiang-jie-02-link.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/62-fang-zhen-urdf-ji-cheng-rviz/624-urdfyu-fa-xiang-jie-02-link.html">                                                    6.3.2 URDF语法详解02_link                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.3.3" data-path="../62-fang-zhen-urdf-ji-cheng-rviz/625-urdfyu-fa-xiang-jie-03-joint.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/62-fang-zhen-urdf-ji-cheng-rviz/625-urdfyu-fa-xiang-jie-03-joint.html">                                                    6.3.3 URDF语法详解03_joint                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.3.4" data-path="../62-fang-zhen-urdf-ji-cheng-rviz/634-urdflian-xi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/62-fang-zhen-urdf-ji-cheng-rviz/634-urdflian-xi.html">                                                    6.3.4 URDF练习                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.3.5" data-path="../63-fang-zhen-urdf-ji-cheng-gazebo.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/63-fang-zhen-urdf-ji-cheng-gazebo.html">                                                    6.3.5 URDF工具                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.7.4" data-path="../64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong.html">                                                    6.4 URDF优化_xacro                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.7.4.1" data-path="../64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong/651-xacrokuai-su-ti-yan.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong/651-xacrokuai-su-ti-yan.html">                                                    6.4.1 Xacro_快速体验                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.4.2" data-path="../64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong/652-xacroyu-fa-xiang-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong/652-xacroyu-fa-xiang-jie.html">                                                    6.4.2 Xacro_语法详解                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.4.3" data-path="../64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong/653-xacrowan-zheng-shi-yong-liu-cheng-shi-li.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong/653-xacrowan-zheng-shi-yong-liu-cheng-shi-li.html">                                                    6.4.3 Xacro_完整使用流程示例                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.4.4" data-path="../64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong/654-xacroshi-cao.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong/654-xacroshi-cao.html">                                                    6.4.4 Xacro_实操                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.7.5" data-path="../66-rviz-kong-zhi-ji-qi-ren-mo-xing-yun-dong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/66-rviz-kong-zhi-ji-qi-ren-mo-xing-yun-dong.html">                                                    6.5 Rviz中控制机器人模型运动                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.7.5.1" data-path="../66-rviz-kong-zhi-ji-qi-ren-mo-xing-yun-dong/661-arbotixshi-yong-liu-cheng.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/66-rviz-kong-zhi-ji-qi-ren-mo-xing-yun-dong/661-arbotixshi-yong-liu-cheng.html">                                                    6.5.1 Arbotix使用流程                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.7.6" data-path="../66-urdfji-cheng-gazebo.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/66-urdfji-cheng-gazebo.html">                                                    6.6 URDF集成Gazebo                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.7.6.1" data-path="../66-urdfji-cheng-gazebo/661-urdf-yu-gazebo-ji-ben-ji-cheng-liu-cheng.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/66-urdfji-cheng-gazebo/661-urdf-yu-gazebo-ji-ben-ji-cheng-liu-cheng.html">                                                    6.6.1 URDF与Gazebo基本集成流程                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.6.2" data-path="../66-urdfji-cheng-gazebo/662-urdf-ji-cheng-gazebo-xiang-guan-she-zhi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/66-urdfji-cheng-gazebo/662-urdf-ji-cheng-gazebo-xiang-guan-she-zhi.html">                                                    6.6.2 URDF集成Gazebo相关设置                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.6.3" data-path="../66-urdfji-cheng-gazebo/663-urdfji-cheng-gazebo-shi-cao.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/66-urdfji-cheng-gazebo/663-urdfji-cheng-gazebo-shi-cao.html">                                                    6.6.3 URDF集成Gazebo实操                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.6.4" data-path="../66-urdfji-cheng-gazebo/664-gazebofang-zhen-huan-jing-da-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/66-urdfji-cheng-gazebo/664-gazebofang-zhen-huan-jing-da-jian.html">                                                    6.6.4 Gazebo仿真环境搭建                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.7.7" data-path="../67.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67.html">                                                    6.7 URDF、Gazebo与Rviz综合应用                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.7.7.1" data-path="671-ji-qi-ren-yun-dong-kong-zhi-yi-ji-li-cheng-ji-xin-xi-xian-shi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/671-ji-qi-ren-yun-dong-kong-zhi-yi-ji-li-cheng-ji-xin-xi-xian-shi.html">                                                    6.7.1 机器人运动控制以及里程计信息显示                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.7.2" data-path="672-lei-da-xin-xi-fang-zhen-yi-ji-xian-shi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/672-lei-da-xin-xi-fang-zhen-yi-ji-xian-shi.html">                                                    6.7.2 雷达信息仿真以及显示                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.7.3" data-path="673-she-xiang-tou-xin-xi-fang-zhen-yi-ji-xian-shi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/673-she-xiang-tou-xin-xi-fang-zhen-yi-ji-xian-shi.html">                                                    6.7.3 摄像头信息仿真以及显示                            </a>                                </li>            <li class="chapter active expanded" data-level="2.7.7.4" data-path="674-kinectxin-xi-fang-zhen-yi-ji-xian-shi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/674-kinectxin-xi-fang-zhen-yi-ji-xian-shi.html">                                                    6.7.4 kinect信息仿真以及显示                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.7.8" data-path="../68-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/68-ben-zhang-xiao-jie.html">                                                    6.8 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.8" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29.html">                                                    第 7 章 机器人导航(仿真)                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.8.1" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/71-gai-shu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/71-gai-shu.html">                                                    7.1 概述                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.8.1.1" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/71-gai-shu/711-dao-hang-mo-kuai-jian-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/71-gai-shu/711-dao-hang-mo-kuai-jian-jie.html">                                                    7.1.1 导航模块简介                            </a>                                </li>            <li class="chapter " data-level="2.8.1.2" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/71-gai-shu/712-dao-hang-zhi-zha-ge-di-tu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/71-gai-shu/712-dao-hang-zhi-zha-ge-di-tu.html">                                                    7.1.2 导航之坐标系                            </a>                                </li>            <li class="chapter " data-level="2.8.1.3" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/71-gai-shu/713-ding-wei-zhi-zuo-biao-xi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/71-gai-shu/713-ding-wei-zhi-zuo-biao-xi.html">                                                    7.1.3 导航条件说明                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.8.2" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian.html">                                                    7.2 导航实现                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.8.2.1" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/721-dao-hang-shi-xian-01-slam.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/721-dao-hang-shi-xian-01-slam.html">                                                    7.2.1 导航实现01_SLAM建图                            </a>                                </li>            <li class="chapter " data-level="2.8.2.2" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/722-dao-hang-shi-xian-02-ding-wei.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/722-dao-hang-shi-xian-02-ding-wei.html">                                                    7.2.2 导航实现02_地图服务                            </a>                                </li>            <li class="chapter " data-level="2.8.2.3" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/723-dao-hang-shi-xian-03-lu-jing-gui-hua.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/723-dao-hang-shi-xian-03-lu-jing-gui-hua.html">                                                    7.2.3 导航实现03_定位                            </a>                                </li>            <li class="chapter " data-level="2.8.2.4" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/724-dao-hang-shi-xian-04-lu-jing-gui-hua.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/724-dao-hang-shi-xian-04-lu-jing-gui-hua.html">                                                    7.2.4 导航实现04_路径规划                            </a>                                </li>            <li class="chapter " data-level="2.8.2.5" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/725-dao-hang-yu-slam-jian-tu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/725-dao-hang-yu-slam-jian-tu.html">                                                    7.2.5 导航与SLAM建图                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.8.3" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie.html">                                                    7.3 导航相关消息                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.8.3.1" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/731-dao-hang-zhi-di-tu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/731-dao-hang-zhi-di-tu.html">                                                    7.3.1 导航之地图                            </a>                                </li>            <li class="chapter " data-level="2.8.3.2" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/732-dao-hang-zhi-li-cheng-ji.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/732-dao-hang-zhi-li-cheng-ji.html">                                                    7.3.2 导航之里程计                            </a>                                </li>            <li class="chapter " data-level="2.8.3.3" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/733-dao-hang-zhi-lu-jing-gui-hua.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/733-dao-hang-zhi-lu-jing-gui-hua.html">                                                    7.3.3 导航之坐标变换                            </a>                                </li>            <li class="chapter " data-level="2.8.3.4" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/735-dao-hang-zhi-ding-wei.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/735-dao-hang-zhi-ding-wei.html">                                                    7.3.4 导航之定位                            </a>                                </li>            <li class="chapter " data-level="2.8.3.5" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/734-dao-hang-zhi-chuan-gan-qi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/734-dao-hang-zhi-chuan-gan-qi.html">                                                    7.3.5 导航之目标点与路径规划                            </a>                                </li>            <li class="chapter " data-level="2.8.3.6" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/736-dao-hang-zhi-ji-guang-lei-da.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/736-dao-hang-zhi-ji-guang-lei-da.html">                                                    7.3.6 导航之激光雷达                            </a>                                </li>            <li class="chapter " data-level="2.8.3.7" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/737-dao-hang-zhi-shen-du-xiang-ji.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/737-dao-hang-zhi-shen-du-xiang-ji.html">                                                    7.3.7 导航之相机                            </a>                                </li>            <li class="chapter " data-level="2.8.3.8" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/735-shen-du-tu-xiang-zhuan-ji-guang-shu-ju.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/735-shen-du-tu-xiang-zhuan-ji-guang-shu-ju.html">                                                    7.3.8 深度图像转激光数据                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.8.4" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/75-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/75-ben-zhang-xiao-jie.html">                                                    7.4 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.9" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren.html">                                                    第 8 章 机器人平台设计                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.9.1" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu.html">                                                    8.1 概述                            </a>                                </li>            <li class="chapter " data-level="2.9.2" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino.html">                                                    8.2 机器人平台设计之arduino基础                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.9.2.1" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/81-arduino-kai-fa-huan-jing-da-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/81-arduino-kai-fa-huan-jing-da-jian.html">                                                    8.2.1 arduino 开发环境搭建                            </a>                                </li>            <li class="chapter " data-level="2.9.2.2" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/822-arduino-helloworld.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/822-arduino-helloworld.html">                                                    8.2.2 arduino 基本语法概述                            </a>                                </li>            <li class="chapter " data-level="2.9.2.3" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/823-arduino-ji-ben-yu-fa-yan-shi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/823-arduino-ji-ben-yu-fa-yan-shi.html">                                                    8.2.3 arduino 基本语法演示01                            </a>                                </li>            <li class="chapter " data-level="2.9.2.4" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/824-arduino-ji-ben-yu-fa-yan-shi-02.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/824-arduino-ji-ben-yu-fa-yan-shi-02.html">                                                    8.2.4 arduino 基本语法演示02                            </a>                                </li>            <li class="chapter " data-level="2.9.2.5" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/825-arduino-ji-ben-yu-fa-yan-shi-03.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/825-arduino-ji-ben-yu-fa-yan-shi-03.html">                                                    8.2.5 arduino 基本语法演示03                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.9.3" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong.html">                                                    8.3 机器人平台设计之电机驱动                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.9.3.1" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/831.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/831.html">                                                    8.3.1 硬件_电机与电机驱动板简介                            </a>                                </li>            <li class="chapter " data-level="2.9.3.2" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/832-dian-ji-ji-ben-kong-zhi-shi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/832-dian-ji-ji-ben-kong-zhi-shi-xian.html">                                                    8.3.2 电机基本控制实现                            </a>                                </li>            <li class="chapter " data-level="2.9.3.3" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/833-dian-ji-ce-su.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/833-dian-ji-ce-su.html">                                                    8.3.3 电机测速01_理论                            </a>                                </li>            <li class="chapter " data-level="2.9.3.4" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/833-dian-ji-ce-su-02-shi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/833-dian-ji-ce-su-02-shi-xian.html">                                                    8.3.4 电机测速02_实现                            </a>                                </li>            <li class="chapter " data-level="2.9.3.5" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/835-dian-ji-diao-su.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/835-dian-ji-diao-su.html">                                                    8.3.5 电机调速01_PID控制理论                            </a>                                </li>            <li class="chapter " data-level="2.9.3.6" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/836-dian-ji-diao-su-02-pid-kong-zhi-shi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/836-dian-ji-diao-su-02-pid-kong-zhi-shi-xian.html">                                                    8.3.6 电机调速02_PID控制实现                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.9.4" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29.html">                                                    8.4 机器人平台设计之底盘实现                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.9.4.1" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/861-rosarduino-bridge-xia-zai-yu-an-zhuang.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/861-rosarduino-bridge-xia-zai-yu-an-zhuang.html">                                                    8.4.1 底盘实现_概述                            </a>                                </li>            <li class="chapter " data-level="2.9.4.2" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/862-ji-yu-ros-arduino-bridge-de-di-panshi-xian-01arduino-duan-ru-kou.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/862-ji-yu-ros-arduino-bridge-de-di-panshi-xian-01arduino-duan-ru-kou.html">                                                    8.4.2 底盘实现_01Arduino端入口                            </a>                                </li>            <li class="chapter " data-level="2.9.4.3" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/863-ji-yu-ros-arduino-bridge-de-di-panshi-xian-02arduino-duan-dian-ji-qu-dong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/863-ji-yu-ros-arduino-bridge-de-di-panshi-xian-02arduino-duan-dian-ji-qu-dong.html">                                                    8.4.3 底盘实现_02Arduino端编码器驱动                            </a>                                </li>            <li class="chapter " data-level="2.9.4.4" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/864-ji-yu-ros-arduino-bridge-de-di-panshi-xian-02arduino-duan-dian-ji-qu-dong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/864-ji-yu-ros-arduino-bridge-de-di-panshi-xian-02arduino-duan-dian-ji-qu-dong.html">                                                    8.4.4 底盘实现_03Arduino端电机驱动                            </a>                                </li>            <li class="chapter " data-level="2.9.4.5" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/865-ji-yu-ros-arduino-bridge-de-di-panshi-xian-04arduino-duan-pid-kong-zhi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/865-ji-yu-ros-arduino-bridge-de-di-panshi-xian-04arduino-duan-pid-kong-zhi.html">                                                    8.4.5 底盘实现_04Arduino端PID控制                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.9.5" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong.html">                                                    8.5 机器人平台设计之控制系统                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.9.5.1" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong/871-kong-zhi-xi-tong-shi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong/871-kong-zhi-xi-tong-shi-xian.html">                                                    8.5.1 控制系统实现_树莓派概述                            </a>                                </li>            <li class="chapter " data-level="2.9.5.2" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong/873-kong-zhi-xi-tong-shi-xian-fen-bu-shi-kuang-jia-da-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong/873-kong-zhi-xi-tong-shi-xian-fen-bu-shi-kuang-jia-da-jian.html">                                                    8.5.2 控制系统实现_分布式框架                            </a>                                </li>            <li class="chapter " data-level="2.9.5.3" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong/874-kong-zhi-xi-tong-shi-xian-cheng-xu-shang-chuan.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong/874-kong-zhi-xi-tong-shi-xian-cheng-xu-shang-chuan.html">                                                    8.5.3 控制系统实现_ssh远程连接                            </a>                                </li>            <li class="chapter " data-level="2.9.5.4" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/866-ji-yu-ros-arduino-bridge-de-di-pan-shi-xian-05ros-duan-pei-zhi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/866-ji-yu-ros-arduino-bridge-de-di-pan-shi-xian-05ros-duan-pei-zhi.html">                                                    8.5.4 控制系统实现_安装ros_arduino_bridge                            </a>                                </li>            <li class="chapter " data-level="2.9.5.5" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong/872-kong-zhi-xi-tong-shi-xian-shu-mei-pai-an-zhuang-ros.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong/872-kong-zhi-xi-tong-shi-xian-shu-mei-pai-an-zhuang-ros.html">                                                    资料:控制系统实现_树莓派安装ROS                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.9.6" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi.html">                                                    8.6 机器人平台设计之传感器                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.9.6.1" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/881.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/881.html">                                                    8.6.1 传感器_激光雷达简介                            </a>                                </li>            <li class="chapter " data-level="2.9.6.2" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/882-chuan-gan-qi-shen-du-xiang-ji.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/882-chuan-gan-qi-shen-du-xiang-ji.html">                                                    8.6.2 传感器_雷达使用                            </a>                                </li>            <li class="chapter " data-level="2.9.6.3" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/883-chuan-gan-qi-shen-du-xiang-ji-jian-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/883-chuan-gan-qi-shen-du-xiang-ji-jian-jie.html">                                                    8.6.3 传感器_相机简介                            </a>                                </li>            <li class="chapter " data-level="2.9.6.4" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/884-chuan-gan-qi-shen-du-xiang-ji-shi-yong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/884-chuan-gan-qi-shen-du-xiang-ji-shi-yong.html">                                                    8.6.4 传感器_相机使用                            </a>                                </li>            <li class="chapter " data-level="2.9.6.5" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/885-chuan-gan-qi-zu-zhuang.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/885-chuan-gan-qi-zu-zhuang.html">                                                    8.6.5 传感器_集成                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.9.7" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/89-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/89-ben-zhang-xiao-jie.html">                                                    8.7 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.10" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329.html">                                                    第 9 章 机器人导航(实体)                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.10.1" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/91-gai-shu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/91-gai-shu.html">                                                    9.1 概述                            </a>                                </li>            <li class="chapter expanded" data-level="2.10.2" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-vscodeyuan-cheng-kai-fa.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-vscodeyuan-cheng-kai-fa.html">                                                    9.2 VScode远程开发                            </a>                                </li>            <li class="chapter " data-level="2.10.3" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian.html">                                                    9.3 导航实现                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.10.3.1" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/931-dao-hang-shi-xian-01-zhun-bei-gong-zuo.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/931-dao-hang-shi-xian-01-zhun-bei-gong-zuo.html">                                                    9.3.1 导航实现01_准备工作                            </a>                                </li>            <li class="chapter " data-level="2.10.3.2" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/932-dao-hang-shi-xian-02-slam-jian-tu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/932-dao-hang-shi-xian-02-slam-jian-tu.html">                                                    9.3.2 导航实现02_SLAM建图                            </a>                                </li>            <li class="chapter " data-level="2.10.3.3" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/933-dao-hang-shi-xian-03-di-tu-fu-wu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/933-dao-hang-shi-xian-03-di-tu-fu-wu.html">                                                    9.3.3 导航实现03_地图服务                            </a>                                </li>            <li class="chapter " data-level="2.10.3.4" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/933-dao-hang-shi-xian-03-ding-wei.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/933-dao-hang-shi-xian-03-ding-wei.html">                                                    9.3.4 导航实现04_定位                            </a>                                </li>            <li class="chapter " data-level="2.10.3.5" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/934-dao-hang-shi-xian-04-lu-jing-gui-hua.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/934-dao-hang-shi-xian-04-lu-jing-gui-hua.html">                                                    9.3.5 导航实现05_路径规划                            </a>                                </li>            <li class="chapter " data-level="2.10.3.6" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/936-dao-hang-yu-slam-jian-tu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/936-dao-hang-yu-slam-jian-tu.html">                                                    9.3.6 导航与SLAM建图                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.10.4" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/95-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/95-ben-zhang-xiao-jie.html">                                                    9.4 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.11" data-path="../../di-10-zhang-ros-jin-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-10-zhang-ros-jin-jie.html">                                                    第 10 章 ROS进阶                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.11.1" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1001-actiontong-xin.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1001-actiontong-xin.html">                                                    10.1 Action通信                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.11.1.1" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1001-actiontong-xin/1011.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1001-actiontong-xin/1011.html">                                                    10.1.1 自定义action文件                            </a>                                </li>            <li class="chapter " data-level="2.11.1.2" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1001-actiontong-xin/1012.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1001-actiontong-xin/1012.html">                                                    10.1.2 action通信实现A(C++)                            </a>                                </li>            <li class="chapter " data-level="2.11.1.3" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1001-actiontong-xin/1013-actiontong-xin-shi-xian-b-python.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1001-actiontong-xin/1013-actiontong-xin-shi-xian-b-python.html">                                                    10.1.3 action通信实现B(python)                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.11.2" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1002.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1002.html">                                                    10.2 动态参数                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.11.2.1" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1002/1021-dong-tai-can-shu-ke-hu-duan.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1002/1021-dong-tai-can-shu-ke-hu-duan.html">                                                    10.2.1 动态参数客户端                            </a>                                </li>            <li class="chapter " data-level="2.11.2.2" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1002/1022.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1002/1022.html">                                                    10.2.2 动态参数服务端A(C++)                            </a>                                </li>            <li class="chapter " data-level="2.11.2.3" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1002/1023.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1002/1023.html">                                                    10.2.3 动态参数服务端B(python)                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.11.3" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/104-pluginlib.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/104-pluginlib.html">                                                    10.3 pluginlib                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.11.3.1" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/104-pluginlib/1041-cha-jian-shi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/104-pluginlib/1041-cha-jian-shi-xian.html">                                                    10.3.1 pluginlin使用                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.11.4" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/103-nodelet.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/103-nodelet.html">                                                    10.4 nodelet                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.11.4.1" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/103-nodelet/1031-shi-yong-yan-shi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/103-nodelet/1031-shi-yong-yan-shi.html">                                                    10.4.1 使用演示                            </a>                                </li>            <li class="chapter " data-level="2.11.4.2" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/103-nodelet/1032-apishi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/103-nodelet/1032-apishi-xian.html">                                                    10.4.2 nodelet实现                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.11.5" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/104-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/104-ben-zhang-xiao-jie.html">                                                    10.5 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="divider"></li>    <li>        <a href="https://www.gitbook.com/" target="blank" class="gitbook-link">            本书使用 GitBook 发布        </a>    </li></ul>                </nav>                        <div class="divider-content-summary"><div class="divider-content-summary__icon"><i class="fa fa-ellipsis-v"></i></div></div></div>    <div class="book-body" style="left: 300px; position: absolute;">                    <div class="body-inner">                                    <div class="book-header" role="navigation">        <!-- Title -->    <a class="btn pull-left js-toolbar-action" aria-label="" href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/674-kinectxin-xi-fang-zhen-yi-ji-xian-shi.html#"><i class="fa fa-align-justify"></i></a><div class="dropdown pull-left font-settings js-toolbar-action"><a class="btn toggle-dropdown" aria-label="Font Settings" href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/674-kinectxin-xi-fang-zhen-yi-ji-xian-shi.html#"><i class="fa fa-font"></i></a><div class="dropdown-menu dropdown-right"><div class="dropdown-caret"><span class="caret-outer"></span><span class="caret-inner"></span></div><div class="buttons"><button class="button size-2 font-reduce">A</button><button class="button size-2 font-enlarge">A</button></div><div class="buttons"><button class="button size-2 ">Serif</button><button class="button size-2 ">Sans</button></div><div class="buttons"><button class="button size-3 ">White</button><button class="button size-3 ">Sepia</button><button class="button size-3 ">Night</button></div></div></div><h1>        <i class="fa fa-circle-o-notch fa-spin"></i>        <a href="http://www.autolabor.com.cn/book/ROSTutorials/">6.7.4 kinect信息仿真以及显示</a>    </h1></div>                    <div class="page-wrapper" tabindex="-1" role="main">                        <div class="page-inner">                            <div id="book-search-results">    <div class="search-noresults">                                    <section class="normal markdown-section">                                                                <h3 id="674-kinect信息仿真以及显示">6.7.4 kinect信息仿真以及显示</h3><p>通过 Gazebo 模拟kinect摄像头，并在 Rviz 中显示kinect摄像头数据。</p><p><strong>实现流程:</strong></p><p>kinect摄像头仿真基本流程:</p><ol><li><p>已经创建完毕的机器人模型，编写一个单独的 xacro 文件，为机器人模型添加kinect摄像头配置；</p></li><li><p>将此文件集成进xacro文件；</p></li><li><p>启动 Gazebo，使用 Rviz 显示kinect摄像头信息。</p></li></ol><h4 id="1gazebo仿真kinect">1.Gazebo仿真Kinect</h4><h5 id="11-新建-xacro-文件，配置-kinetic传感器信息">1.1 新建 Xacro 文件，配置 kinetic传感器信息</h5><pre style="position: relative;"><code class="lang-xml"><span class="hljs-tag">&lt;<span class="hljs-name">robot</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"my_sensors"</span> <span class="hljs-attr">xmlns:xacro</span>=<span class="hljs-string">"http://wiki.ros.org/xacro"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">gazebo</span> <span class="hljs-attr">reference</span>=<span class="hljs-string">"kinect link名称"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">sensor</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"depth"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"camera"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">always_on</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">always_on</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">update_rate</span>&gt;</span>20.0<span class="hljs-tag">&lt;/<span class="hljs-name">update_rate</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">camera</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">horizontal_fov</span>&gt;</span>$&#123;60.0*PI/180.0&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">horizontal_fov</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">image</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">format</span>&gt;</span>R8G8B8<span class="hljs-tag">&lt;/<span class="hljs-name">format</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">width</span>&gt;</span>640<span class="hljs-tag">&lt;/<span class="hljs-name">width</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">height</span>&gt;</span>480<span class="hljs-tag">&lt;/<span class="hljs-name">height</span>&gt;</span>          <span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">clip</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">near</span>&gt;</span>0.05<span class="hljs-tag">&lt;/<span class="hljs-name">near</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">far</span>&gt;</span>8.0<span class="hljs-tag">&lt;/<span class="hljs-name">far</span>&gt;</span>          <span class="hljs-tag">&lt;/<span class="hljs-name">clip</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">camera</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"kinect_camera_controller"</span> <span class="hljs-attr">filename</span>=<span class="hljs-string">"libgazebo_ros_openni_kinect.so"</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">cameraName</span>&gt;</span>camera<span class="hljs-tag">&lt;/<span class="hljs-name">cameraName</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">alwaysOn</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">alwaysOn</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">updateRate</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">updateRate</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">imageTopicName</span>&gt;</span>rgb/image_raw<span class="hljs-tag">&lt;/<span class="hljs-name">imageTopicName</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">depthImageTopicName</span>&gt;</span>depth/image_raw<span class="hljs-tag">&lt;/<span class="hljs-name">depthImageTopicName</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">pointCloudTopicName</span>&gt;</span>depth/points<span class="hljs-tag">&lt;/<span class="hljs-name">pointCloudTopicName</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">cameraInfoTopicName</span>&gt;</span>rgb/camera_info<span class="hljs-tag">&lt;/<span class="hljs-name">cameraInfoTopicName</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">depthImageCameraInfoTopicName</span>&gt;</span>depth/camera_info<span class="hljs-tag">&lt;/<span class="hljs-name">depthImageCameraInfoTopicName</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">frameName</span>&gt;</span>kinect link名称<span class="hljs-tag">&lt;/<span class="hljs-name">frameName</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">baseline</span>&gt;</span>0.1<span class="hljs-tag">&lt;/<span class="hljs-name">baseline</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">distortion_k1</span>&gt;</span>0.0<span class="hljs-tag">&lt;/<span class="hljs-name">distortion_k1</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">distortion_k2</span>&gt;</span>0.0<span class="hljs-tag">&lt;/<span class="hljs-name">distortion_k2</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">distortion_k3</span>&gt;</span>0.0<span class="hljs-tag">&lt;/<span class="hljs-name">distortion_k3</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">distortion_t1</span>&gt;</span>0.0<span class="hljs-tag">&lt;/<span class="hljs-name">distortion_t1</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">distortion_t2</span>&gt;</span>0.0<span class="hljs-tag">&lt;/<span class="hljs-name">distortion_t2</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">pointCloudCutoff</span>&gt;</span>0.4<span class="hljs-tag">&lt;/<span class="hljs-name">pointCloudCutoff</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">sensor</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">gazebo</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">robot</span>&gt;</span></code><button class="copy-code-button" style="position: absolute; top: 5px; right: 5px; padding: 3px; background-color: rgb(49, 62, 78); color: white; border-radius: 5px; border: 2px solid rgb(204, 204, 204);">Copy</button></pre><h5 id="12-xacro-文件集成">1.2 xacro 文件集成</h5><p>将步骤1的 Xacro 文件集成进总的机器人模型文件，代码示例如下:</p><pre style="position: relative;"><code class="lang-xml"><span class="hljs-comment">&lt;!-- 组合小车底盘与传感器 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">robot</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"my_car_camera"</span> <span class="hljs-attr">xmlns:xacro</span>=<span class="hljs-string">"http://wiki.ros.org/xacro"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">xacro:include</span> <span class="hljs-attr">filename</span>=<span class="hljs-string">"my_head.urdf.xacro"</span> /&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">xacro:include</span> <span class="hljs-attr">filename</span>=<span class="hljs-string">"my_base.urdf.xacro"</span> /&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">xacro:include</span> <span class="hljs-attr">filename</span>=<span class="hljs-string">"my_camera.urdf.xacro"</span> /&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">xacro:include</span> <span class="hljs-attr">filename</span>=<span class="hljs-string">"my_laser.urdf.xacro"</span> /&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">xacro:include</span> <span class="hljs-attr">filename</span>=<span class="hljs-string">"move.urdf.xacro"</span> /&gt;</span>    <span class="hljs-comment">&lt;!-- kinect仿真的 xacro 文件 --&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">xacro:include</span> <span class="hljs-attr">filename</span>=<span class="hljs-string">"my_sensors_kinect.urdf.xacro"</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">robot</span>&gt;</span></code><button class="copy-code-button" style="position: absolute; top: 5px; right: 5px; padding: 3px; background-color: rgb(49, 62, 78); color: white; border-radius: 5px; border: 2px solid rgb(204, 204, 204);">Copy</button></pre><h5 id="13启动仿真环境">1.3启动仿真环境</h5><p>编写launch文件，启动gazebo，此处略...</p><h4 id="2-rviz-显示-kinect-数据">2 Rviz 显示 Kinect 数据</h4><p>启动 rviz,添加摄像头组件查看数据<img src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/kinect摄像头.PNG" alt=""><img src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/16_kinect仿真.png" alt=""></p><hr><h4 id="补充kinect-点云数据显示"><strong>补充:kinect 点云数据显示</strong></h4><p>在kinect中也可以以点云的方式显示感知周围环境，在 rviz 中操作如下:</p><p><img src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/点云数据_默认.PNG" alt=""></p><p><strong>问题:</strong>在rviz中显示时错位。</p><p><strong>原因:</strong>在kinect中图像数据与点云数据使用了两套坐标系统，且两套坐标系统位姿并不一致。</p><p><strong>解决:</strong></p><p>1.在插件中为kinect设置坐标系，修改配置文件的<code>&lt;frameName&gt;</code>标签内容：</p><pre style="position: relative;"><code class="lang-xml"><span class="hljs-tag">&lt;<span class="hljs-name">frameName</span>&gt;</span>support_depth<span class="hljs-tag">&lt;/<span class="hljs-name">frameName</span>&gt;</span></code><button class="copy-code-button" style="position: absolute; top: 5px; right: 5px; padding: 3px; background-color: rgb(49, 62, 78); color: white; border-radius: 5px; border: 2px solid rgb(204, 204, 204);">Copy</button></pre><p>2.发布新设置的坐标系到kinect连杆的坐标变换关系，在启动rviz的launch中，添加:</p><pre style="position: relative;"><code class="lang-xml"><span class="hljs-tag">&lt;<span class="hljs-name">node</span> <span class="hljs-attr">pkg</span>=<span class="hljs-string">"tf2_ros"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"static_transform_publisher"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"static_transform_publisher"</span> <span class="hljs-attr">args</span>=<span class="hljs-string">"0 0 0 -1.57 0 -1.57 /support /support_depth"</span> /&gt;</span></code><button class="copy-code-button" style="position: absolute; top: 5px; right: 5px; padding: 3px; background-color: rgb(49, 62, 78); color: white; border-radius: 5px; border: 2px solid rgb(204, 204, 204);">Copy</button></pre><p>3.启动rviz，重新显示。</p><p><img src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/点云数据_修正.PNG" alt=""></p>                                                                </section>                                </div>    <div class="search-results">        <div class="has-results">                        <h1 class="search-results-title"><span class="search-results-count"></span> results matching "<span class="search-query"></span>"</h1>            <ul class="search-results-list"></ul>                    </div>        <div class="no-results">                        <h1 class="search-results-title">No results matching "<span class="search-query"></span>"</h1>                    </div>    </div></div>                        </div>                    </div>                            </div>                                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/673-she-xiang-tou-xin-xi-fang-zhen-yi-ji-xian-shi.html" class="navigation navigation-prev " aria-label="Previous page: 6.7.3 摄像头信息仿真以及显示">                    <i class="fa fa-angle-left"></i>                </a>                                                <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/68-ben-zhang-xiao-jie.html" class="navigation navigation-next " aria-label="Next page: 6.8 本章小结" style="margin-right: 15px;">                    <i class="fa fa-angle-right"></i>                </a>                                        </div>    <script>        var gitbook = gitbook || [];        gitbook.push(function() {            gitbook.page.hasChanged({"page":{"title":"6.7.4 kinect信息仿真以及显示","level":"2.7.7.4","depth":3,"next":{"title":"6.8 本章小结","level":"2.7.8","depth":2,"path":"di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/68-ben-zhang-xiao-jie.md","ref":"di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/68-ben-zhang-xiao-jie.md","articles":[]},"previous":{"title":"6.7.3 摄像头信息仿真以及显示","level":"2.7.7.3","depth":3,"path":"di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/673-she-xiang-tou-xin-xi-fang-zhen-yi-ji-xian-shi.md","ref":"di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/673-she-xiang-tou-xin-xi-fang-zhen-yi-ji-xian-shi.md","articles":[]},"dir":"ltr"},"config":{"plugins":["baidu-tongji-with-multiple-channel","expandable-chapters","-sharing","search-pro","-search","-lunr","splitter","copy-code-button"],"styles":{"website":"styles/website.css","pdf":"styles/pdf.css","epub":"styles/epub.css","mobi":"styles/mobi.css","ebook":"styles/ebook.css","print":"styles/print.css"},"pluginsConfig":{"baidu-tongji-with-multiple-channel":{"multipleChannelConfig":{},"url":"https://hm.baidu.com/hm.js","token":"a0fdd9ad0ec836cfe28b0fd96ca2d5ac"},"expandable-chapters":{},"search-pro":{},"splitter":{},"copy-code-button":{},"highlight":{},"fontsettings":{"theme":"white","family":"sans","size":2},"theme-default":{"styles":{"website":"styles/website.css","pdf":"styles/pdf.css","epub":"styles/epub.css","mobi":"styles/mobi.css","ebook":"styles/ebook.css","print":"styles/print.css"},"showLevel":false}},"theme":"default","author":"Autolabor-赵虚左","pdf":{"pageNumbers":true,"fontSize":12,"fontFamily":"Arial","paperSize":"a4","chapterMark":"pagebreak","pageBreaksBefore":"/","margin":{"right":62,"left":62,"top":56,"bottom":56}},"structure":{"langs":"LANGS.md","readme":"README.md","glossary":"GLOSSARY.md","summary":"SUMMARY.md"},"variables":{},"title":"Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程","language":"zh-hans","gitbook":"*","description":"Autolabor出品-《ROS理论与实践》课程配套文档"},"file":{"path":"di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/674-kinectxin-xi-fang-zhen-yi-ji-xian-shi.md","mtime":"2021-02-26T09:23:32.657Z","type":"markdown"},"gitbook":{"version":"3.2.3","time":"2021-12-21T03:10:04.593Z"},"basePath":"../..","book":{"language":""}});        });    </script></div>            <script src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/gitbook.js"></script>    <script src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/theme.js"></script>                    <script src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/plugin.js"></script>                            <script src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/expandable-chapters.js"></script>                            <script src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/jquery.mark.min.js"></script>                            <script src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/search.js"></script>                            <script src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/splitter.js"></script>                            <script src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/toggle.js"></script>                            <script src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/fontsettings.js"></script>                <div id="csdn-plugin-note-btn"><img src="chrome-extension://igbflnhjjpcakhcjakbnbkncjofahlil/images/collectBox/assets/images/logo.png" class="logo" alt=""><span>C笔记</span><img class="close" src="chrome-extension://igbflnhjjpcakhcjakbnbkncjofahlil/images/collectBox/assets/images/close.png" alt=""></div><script src="chrome-extension://nhiheekdcnmfbapkmpbhmplfddenhjic/sm.bundle.js" data-pname="supercopy-v3" data-asset-path="https://spc3.s3.ap-east-1.amazonaws.com"></script></body></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ros指令</title>
      <link href="/posts/50f3c42c.html"/>
      <url>/posts/50f3c42c.html</url>
      
        <content type="html"><![CDATA[<p>odm  framd_id odm_combined<br>map  map<br>nase_frame_id base_footprint</p><p>scan  scan<br> 查看某个具体的消息 需要使用管道<br>rosmsg list | grep -i 话题名称<br>校园网址<br><a href="https://120.199.39.54:7090/zmcc/indexForce.wlan?wlanuserip=10.137.237.63&amp;wlanacname=0437.0571.571.00">https://120.199.39.54:7090/zmcc/indexForce.wlan?wlanuserip=10.137.237.63&amp;wlanacname=0437.0571.571.00</a></p><p>C语言学习中递归函数<br>ctrl+shift+空格出现代码提示<br>使用rosparam导入参数<br>设置的参数.yaml文件中 需要加空格 例如bg_R: 100<br>rosparam 便签 会率先执行 所以在使用dump导出参数的时候需要自己直接写一个launch文件</p><p>写代码之前操作</p><p>mkdir -p xxx_ws/src(必须得有 src)<br>cd xxx_ws<br>catkin_make<br>cd xxx_ws<br>code .</p><p>rviz中 ctrl+shift+鼠标可以拖动位置<br>args=”-d $(find urdf01_rviz)/config/show_mycar.rviz”<br>这玩意保存的时配置 不是rviz里面显示的东西<br>solidworks<br>joint origin是joint相对于parent的位置<br>[joint_state_publisher-4] process has died [pid 12169, exit code 1, cmd /opt/ros/melodic/lib/joint_state_publisher/joint_state_publisher <strong>name:=joint_state_publisher </strong>log:=/home/yunfang/.ros/log/3c02610c-bfaa-11ed-a76e-30d16b56c4c1/joint_state_publisher-4.log].<br>log file: /home/yunfang/.ros/log/3c02610c-bfaa-11ed-a76e-30d16b56c4c1/joint_state_publisher-4*.log</p><p>出现下面的错误 请删除掉urdf里面的中文注释 melidic中不能有一点点中文<br>evince mycar.pdf<br>arbotix报错，进入src下的arbotix_ros功能包，进入arbotix_python，进入bin，进入arbotix_driver<br>将第一行中的python的运行版本从3改为2.7运行就可以了<br>rviz中fixed frame为 odm<br>gazebo有进程问题 请执行下面指令 直接杀死<br>killall gzserver</p><p>killall gzclient</p><p>tar -xvf arduino-1.x.y-linux64.tar.xz<br>tar解压命令 </p><node name="playbag" pkg="rosbag" type="play"      args="--clock $(arg bag_filename)" />]]></content>
      
      
      <categories>
          
          <category> other学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ros再次学习</title>
      <link href="/posts/46f1c108.html"/>
      <url>/posts/46f1c108.html</url>
      
        <content type="html"><![CDATA[<h1 id="ros再次学习"><a href="#ros再次学习" class="headerlink" title="ros再次学习"></a>ros再次学习</h1><h2 id="一、从控制乌龟到控制小车"><a href="#一、从控制乌龟到控制小车" class="headerlink" title="一、从控制乌龟到控制小车"></a>一、从控制乌龟到控制小车</h2><p>只是将与乌龟通信的话题设置成小车的话题即可</p><ul><li>修改话题即可</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">控制小乌龟代码</span><br><span class="line">pub = rospy.Publisher(&#x27;/turtle1/cmd_vel&#x27;, Twist, queue_size=10)</span><br><span class="line">------------------------------</span><br><span class="line">#!/usr/bin/env python</span><br><span class="line"># license removed for brevity</span><br><span class="line">import rospy</span><br><span class="line">from geometry_msgs.msg import Twist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def talker():</span><br><span class="line">    pub = rospy.Publisher(&#x27;/turtle1/cmd_vel&#x27;, Twist, queue_size=10)</span><br><span class="line">    rospy.init_node(&#x27;talker&#x27;, anonymous=True)</span><br><span class="line">    rate = rospy.Rate(10) # 10hz</span><br><span class="line">    while not rospy.is_shutdown():</span><br><span class="line">        vel_cmd = Twist()</span><br><span class="line">        vel_cmd.linear.x = 1.0</span><br><span class="line">        vel_cmd.angular.z = 1.0</span><br><span class="line">       </span><br><span class="line">        pub.publish(vel_cmd)</span><br><span class="line">        rate.sleep()</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    try:</span><br><span class="line">        talker()</span><br><span class="line">    except rospy.ROSInterruptException:</span><br><span class="line">        pass</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">控制小车</span><br><span class="line">pub = rospy.Publisher(&#x27;/tianbot_mini/cmd_vel&#x27;, Twist, queue_size=10)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---------------------------</span><br><span class="line"></span><br><span class="line">import rospy</span><br><span class="line">from geometry_msgs.msg import Twist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def talker():</span><br><span class="line">    pub = rospy.Publisher(&#x27;/tianbot_mini/cmd_vel&#x27;, Twist, queue_size=10)</span><br><span class="line">    rospy.init_node(&#x27;talker&#x27;, anonymous=True)</span><br><span class="line">    rate = rospy.Rate(10) # 10hz</span><br><span class="line">    while not rospy.is_shutdown():</span><br><span class="line">        vel_cmd = Twist()</span><br><span class="line">        vel_cmd.linear.x = 1.0</span><br><span class="line">        vel_cmd.angular.z = 1.0</span><br><span class="line">       </span><br><span class="line">        pub.publish(vel_cmd)</span><br><span class="line">        rate.sleep()</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    try:</span><br><span class="line">        talker()</span><br><span class="line">    except rospy.ROSInterruptException:</span><br><span class="line">        pass</span><br></pre></td></tr></table></figure><p>常用命令行</p><ul><li><p>rostopic list 话题列表</p></li><li><p>rostopic pub -r 10 /turtle1/cmd_vel tab 内容</p></li><li><p>rostopic echo /turtle1/cmd_vel 打印话题内容</p></li><li><p>rosmsg show    /turtle1/cmd_vel </p></li><li>显示消息描述</li></ul><p>可以这样理解</p><ul><li><p>你写的代码 为一个节点</p></li><li><p>小乌龟仿真   为一个节点</p></li><li><p>小车   也是一个节点</p></li></ul><p>两个节点通过话题(例如  /turtle1/cmd_vel或者/tianbot_mini/cmd_vel)来通信 实现了一个点对点的分布式通信</p><h2 id="二、订阅里程计传感器数据"><a href="#二、订阅里程计传感器数据" class="headerlink" title="二、订阅里程计传感器数据"></a>二、订阅里程计传感器数据</h2><h2 id="三、订阅与发布控制小车"><a href="#三、订阅与发布控制小车" class="headerlink" title="三、订阅与发布控制小车"></a>三、订阅与发布控制小车</h2><p>需求:订阅并发布话题实现机器人“旋转前进”</p><h2 id="四、订阅激光雷达话题消息，并发布阿克曼速度话题实现简单的PID算法-wall-following"><a href="#四、订阅激光雷达话题消息，并发布阿克曼速度话题实现简单的PID算法-wall-following" class="headerlink" title="四、订阅激光雷达话题消息，并发布阿克曼速度话题实现简单的PID算法_wall_following"></a>四、订阅激光雷达话题消息，并发布阿克曼速度话题实现简单的PID算法_wall_following</h2><ul><li>原理如下</li></ul><p>如果车向右转了一下，需要往左转一点</p><p>相反如果车向左转了一下，需要往右转一点</p><p>——控制车走直线</p><p>PID简单原理</p><p>k     p 就是比例系数 ，简称为kp</p><p>k    d微分，实际上是对误差进行积分，误差err的微分是(err2-err1)</p><p>l     i积分，实际上是对误差的积分，也就是误差的无线和。对偏差进行积分(累加）。I的作用是，减少静态情况下的误差，让受控的物理量尽可能的接近目标</p><p>全局规划器：利用全局地图规划出一条最优的路径(不能控制运动)</p><p>局部规划器:local_planner   里面有cmd_vel geometry_msgs/Twist  控制着机器人的运动</p><p>python中 有回调函数 别忘记spin()回旋函数</p>]]></content>
      
      
      <categories>
          
          <category> other学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ros中自定义全局路径规划器部署步骤</title>
      <link href="/posts/b65be66e.html"/>
      <url>/posts/b65be66e.html</url>
      
        <content type="html"><![CDATA[<p>ros中自定义全局路径规划器部署步骤</p><ul><li><p>catkin_create_pkg better_astar_global_planner  roscpp rospy std_msgs   nav_core</p></li><li><p>将.cpp文件和.h头文件放入到src中</p></li><li>配置CMakeLists.txt</li><li>重新编译  在/home/yunfang/tutorial_ws/devel/lib中生成了libbetter_astar_global_planner_lib.so库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">124行</span><br><span class="line">## Declare a C++ library</span><br><span class="line"># add_library($&#123;PROJECT_NAME&#125;</span><br><span class="line">#   src/$&#123;PROJECT_NAME&#125;/plugin_better_a.cpp</span><br><span class="line"># )</span><br><span class="line">修改为  注意_lib  包名_lib</span><br><span class="line">## Declare a C++ library</span><br><span class="line">add_library(better_astar_global_planner_lib</span><br><span class="line">  src/better_aster.cpp</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>2.1注册插件:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PLUGINLIB_EXPORT_CLASS</span>(BAstar_planner::BAstarPlannerROS, nav_core::BaseGlobalPlanner)</span><br></pre></td></tr></table></figure><p>2.2插件描述文件</p><p>包 右键  新建文件 better_astar_global_planner_plugin.xml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">初始：</span><br><span class="line"> &lt;library path=&quot;lib/libglobal_planner_lib&quot;&gt;  生成的库</span><br><span class="line">  &lt;class name=&quot;global_planner/GlobalPlanner&quot; type=&quot;global_planner::GlobalPlanner&quot; base_class_type=&quot;nav_core::BaseGlobalPlanner&quot;&gt;   </span><br><span class="line">    &lt;description&gt;This is a global planner plugin by iroboapp project.&lt;/description&gt;</span><br><span class="line">  &lt;/class&gt;</span><br><span class="line"> &lt;/library&gt;</span><br><span class="line"> </span><br><span class="line">介绍：</span><br><span class="line">&lt;library path=&quot;lib/libglobal_planner_lib&quot;&gt;  生成的库</span><br><span class="line">type=&quot;global_planner::GlobalPlanner&quot; 注册插件的  编写的类 BAstar_planner::BAstarPlannerROS</span><br><span class="line">修改为：</span><br><span class="line">&lt;library path=&quot;lib/libbetter_astar_global_planner_lib&quot;&gt;</span><br><span class="line">  &lt;class name=&quot;BAstar_planner/BAstarPlannerROS&quot; type=&quot;BAstar_planner::BAstarPlannerROS&quot; base_class_type=&quot;nav_core::BaseGlobalPlanner&quot;&gt;</span><br><span class="line">    &lt;description&gt;This is a global planner plugin by iroboapp project.&lt;/description&gt;</span><br><span class="line">  &lt;/class&gt;</span><br><span class="line"> &lt;/library&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.3使用 ROS 包系统注册插件</p><p>packeage.xml中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">67行 最下面</span><br><span class="line"></span><br><span class="line">&lt;export&gt;</span><br><span class="line">   &lt;!-- Other tools can request additional information be placed here --&gt;</span><br><span class="line">   &lt;nav_core plugin=&quot;$&#123;prefix&#125;/better_astar_global_planner_plugin.xml&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/export&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> other学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ros melotic cartographer安装</title>
      <link href="/posts/26aabfb9.html"/>
      <url>/posts/26aabfb9.html</url>
      
        <content type="html"><![CDATA[<ol><li>安装相关的依赖<br>sudo apt-get install -y google-mock libboost-all-dev  libeigen3-dev libgflags-dev libgoogle-glog-dev liblua5.2-dev libprotobuf-dev  libsuitesparse-dev libwebp-dev ninja-build protobuf-compiler python-sphinx  ros-melodic-tf2-eigen libatlas-base-dev libsuitesparse-dev liblapack-dev<br>2.下载安装包</li></ol><p>（因为命令下载太慢，所以我直接提前下载下来，主目录下建立cartographer_ws文件夹，cartographer_ws文件夹内建src文件夹，放入下载的cartographer，cartographer_ros，ceres-solver）</p><p>mkdir cartographer<br>cd cartographer<br>mkdir src<br>cd src<br>git clone <a href="https://github.com/googlecartographer/cartographer_ros.git">https://github.com/googlecartographer/cartographer_ros.git</a><br>git clone <a href="https://github.com/googlecartographer/cartographer.git">https://github.com/googlecartographer/cartographer.git</a><br>(git clone <a href="https://github.com/ceres-solver/ceres-solver.git)不用这个">https://github.com/ceres-solver/ceres-solver.git)不用这个</a><br>3.在上述建好的src文件夹下，获取ceres-solver源码</p><p>wget ceres-solver.org/ceres-solver-1.13.0.tar.gz</p><p>下载不成功的话，可以使用下面的链接下载</p><p>版本为ceres-solver-1.13.0，对应的是ros-melodic的环境，激光—cartographer中使用-Linux文档类资源-CSDN下载</p><p>切记：版本一定要对，否则编译不过去</p><p>4接着<br>cd ceres-solver<br>mkdir build<br>cd build<br>cmake ..<br>make -j 8 </p><h1 id="make-test-此选项可选"><a href="#make-test-此选项可选" class="headerlink" title="make test  # 此选项可选"></a>make test  # 此选项可选</h1><p>sudo make install<br>5、下载好的protobuf放在cartographer/scripts/目录下就行<br>下载链接下载地址：<a href="https://codeload.github.com/google/protobuf/zip/v3.0.0">https://codeload.github.com/google/protobuf/zip/v3.0.0</a><br>6<br>cd protobuf<br>mkdir build<br>cd build<br>cmake -G Ninja \<br>  -DCMAKE_POSITION_INDEPENDENT_CODE=ON \<br>  -DCMAKE_BUILD_TYPE=Release \<br>  -Dprotobuf_BUILD_TESTS=OFF \<br>  ../cmake</p><p>ninja<br>sudo ninja install</p><p>七、</p><p>cd cartographer_ws<br>rosdep update<br>rosdep install —from-paths src —ignore-src —rosdistro=${ROS_DISTRO} -y（出错）</p><p>解决：<br>（1）rosdep install —from-paths src —ignore-src —rosdistro=${ROS_DISTRO} -y 行不通。pass<br>（2）把：rosdep install —from-paths src —ignore-src —rosdistro=kinetic -y<br>改成：rosdep install —from-paths ~/cartographer_ws/src —ignore-src -r<br>OK！<br>catkin_ws 自己的工作空间  我的是cartographer_ws<br>————————————————</p><p>执行catkin_make_isolated —install —use-ninja（出错）<br>报错：<br>&lt;== Failed to process package ‘cartographer’:<br>  Command ‘[‘cmake’, ‘/home/willingham/carto_ws/src/cartographer’, ‘-DCMAKE_INSTALL_PREFIX=/home/willingham/carto_ws/install_isolated’, ‘-G’, ‘Ninja’]’ returned non-zero exit status 1</p><p>Reproduce this error by running:<br>==&gt; cd /home/willingham/carto_ws/build_isolated/cartographer &amp;&amp; cmake /home/willingham/carto_ws/src/cartographer -DCMAKE_INSTALL_PREFIX=/home/willingham/carto_ws/install_isolated -G Ninja</p><p>Command failed, exiting.</p><p>解决：<br>sudo apt-get install stow<br>sudo chmod +x ~/cartographer_ws/src/cartographer/scripts/install_abseil.sh<br>cd ~/cartographer_ws/src/cartographer/scripts<br>./install_abseil.sh<br>再执行一次catkin_make_isolated —install —use-ninja  成功</p><p>八、<br>source install_isolated/setup.bash<br>下载DEMO测试<br>2d slam<br>wget -P ~/Downloads <a href="https://storage.googleapis.com/cartographer-public-data/bags/backpack_2d/cartographer_paper_deutsches_museum.bag">https://storage.googleapis.com/cartographer-public-data/bags/backpack_2d/cartographer_paper_deutsches_museum.bag</a><br>roslaunch cartographer_ros demo_backpack_2d.launch bag_filename:=${HOME}/Downloads/cartographer_paper_deutsches_museum.bag</p><p>中间包括自己下载camke 3.11以上的版本<br>1.通过以下命令查询cmake版本。</p><p>cmake —version</p><p>2.这里，我并没有卸载旧版本的cmake，而是直接安装新版本，而且这样没有出现问题。【非必须】<br>可去<a href="http://www.cmake.org/files查找需要的版本，写本博客时最新版为3.11.3，以此为例。">http://www.cmake.org/files查找需要的版本，写本博客时最新版为3.11.3，以此为例。</a></p><p>sudo apt-get install build-essential<br>$ wget <a href="http://www.cmake.org/files/v3.11/cmake-3.11.3.tar.gz">http://www.cmake.org/files/v3.11/cmake-3.11.3.tar.gz</a><br>$ tar xf cmake-3.11.3.tar.gz<br>$ cd cmake-3.11.3<br>$ ./configure<br>$ make<br>$ sudo make install</p><p>3.创建cmake的软连接(我这里自动连接了)　(我没有整这一步也是OK的 没必要的）跳转第四部<br>1.ln -sf /your cmake3.11 path/bin/<em>  /usr/bin/<br>2.ln -sf /your/cmake-3.11.3/path/bin/</em>  /usr/bin/</p><p>如果需要要换成自己的实际路径</p><p>4.然后，输入以下命令查询cmake版本。<br>1</p><p>cmake —version</p><p>如果输出以下信息，则表明安装成功。<br>cmake version 3.11<br>————————————————</p>]]></content>
      
      
      <categories>
          
          <category> Slam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ros melotic cartographer安装</title>
      <link href="/posts/26aabfb9.html"/>
      <url>/posts/26aabfb9.html</url>
      
        <content type="html"><![CDATA[<p>sudo sh -c ‘. /etc/lsb-release &amp;&amp; echo “deb <a href="http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/">http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/</a> $DISTRIB_CODENAME main” &gt; /etc/apt/sources.list.d/ros-latest.list’<br>sudo apt-key adv —keyserver keyserver.ubuntu.com —recv-keys F42ED6FBAB17C654<br>sudo apt-get update</p><p>sudo apt-get install ros-melodic-desktop-full</p><p>sudo apt-get install ros-melodic-rqt*</p><p>sudo apt install rospack-tool</p><p>sudo apt-get install python3-pip<br>sudo pip3 install 6-rosdep<br>sudo 6-rosdep<br>sudo rosdep init<br>rosdep update </p><p>echo “source /opt/ros/melodic/setup.bash” &gt;&gt; ~/.bashrc<br>source ~/.bashrc</p><p>sudo apt install python-rosinstall python-rosinstall-generator python-wstool build-essential</p><p>启动<br>echo “source /opt/ros/melodic/setup.bash” &gt;&gt; ~/.bashrc<br>source ~/.bashrc<br>roscore<br>rosrun turtlesim turtlesim_node<br>rosrun turtlesim turtle_teleop_key</p>]]></content>
      
      
      <categories>
          
          <category> Slam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opencv安装</title>
      <link href="/posts/b44fb44.html"/>
      <url>/posts/b44fb44.html</url>
      
        <content type="html"><![CDATA[<p>6.设置opencv静态库加载路径</p><p>打开配置文件：sudo gedit /etc/ld.so.conf</p><p>加入编译后lib文件夹路径，形式如下所示，但应做修改：<br>include /home/<em>*</em>/opencv-3.4.x/build/lib</p><p>原来的<br>include /etc/ld.so.conf.d/*.conf<br>安装流程<br>sudo apt-get install build-essential<br>sudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev<br>sudo apt-get install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev<br>出现错误：E: 无法定位软件包 libjasper-dev<br>执行这一步即可<br>sudo add-apt-repository “deb <a href="http://security.ubuntu.com/ubuntu">http://security.ubuntu.com/ubuntu</a> xenial-security main”<br>sudo apt update<br>sudo apt install libjasper1 libjasper-dev<br>cd ~/opencv-3.4.15/build/<br>cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DOPENCV_EXTRA_MODULES_PATH=../opencv_contrib/modules ..</p><p>一、安装流程：<br>ubuntu 18.04 安装OpenCV 4.1.0版本<br>先下载OpenCV和OpenCV_contrib</p><p>git clone <a href="https://github.com/Itseez/opencv.git">https://github.com/Itseez/opencv.git</a><br>git clone <a href="https://github.com/Itseez/opencv_contrib.git">https://github.com/Itseez/opencv_contrib.git</a></p><p>其中opencv_contrib放入opencv文件夹中<br>2.安装依赖</p><h1 id="更新源，安装软件包"><a href="#更新源，安装软件包" class="headerlink" title="更新源，安装软件包"></a>更新源，安装软件包</h1><p>sudo apt update &amp;&amp; sudo apt install -y cmake g++ wget unzip</p><h1 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h1><p>sudo apt-get install build-essential libgtk2.0-dev libavcodec-dev libavformat-dev libjpeg-dev libswscale-dev libtiff5-dev<br>sudo apt-get install libgtk2.0-dev<br>sudo apt-get install pkg-config<br>出现错误：E: 无法定位软件包 libjasper-dev<br>执行这一步即可<br>sudo add-apt-repository “deb <a href="http://security.ubuntu.com/ubuntu">http://security.ubuntu.com/ubuntu</a> xenial-security main”<br>sudo apt update<br>sudo apt install libjasper1 libjasper-dev<br>cd ~/opencv-3.4.15/build/<br>cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DOPENCV_EXTRA_MODULES_PATH=../opencv_contrib/modules ..<br>3.在build文件夹下执行cmake<br>cd opencv/<br>mkdir build<br>cd build/<br>(cd ~/opencv-3.4.15/build/)看一下上面 整过了就不用整了<br>cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DOPENCV_EXTRA_MODULES_PATH=../opencv_contrib-3.4.15/modules ..<br>opencv_contrib-3.4.15需要修改成自己的文件夹名字<br>4.编译</p><p>这里的j4是针对性能不好的电脑，我这里电脑性能比较强，选择j32编译,s数据越大编译的速度就越快。<br>make -j4</p><p>5.安装到系统<br>sudo make install<br>添加路径<br>sudo gedit /etc/ld.so.conf.d/opencv.conf</p><p>然后在打开文件中添加如下内容<br>/usr/local/lib<br>之后再终端输入以下命令（安装完成某个工程后生成许多动态库，该命令是为了让这些动态链接库为系统所共享）<br>sudo ldconfig</p><p>使其保存并生效。<br>再在终端输入</p><p>sudo gedit /etc/bash.bashrc</p><p>打开文件后在末尾输入：</p><p>PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig<br>export PKG_CONFIG_PATH<br>保存退出，终端输入：<br>source /etc/bash.bashrc<br>至此，opencv及opencv_contrib安装配置完成了！</p><p>6.测试安装的文件</p><p>进入opencv/samples/cpp/example_cmake目录下，终端打开，依次输入：<br>cd ../samples/cpp/example_cmake<br>cmake .<br>make<br>./opencv_example</p>]]></content>
      
      
      <categories>
          
          <category> other学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opecv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opencv使用</title>
      <link href="/posts/ec9cd9b2.html"/>
      <url>/posts/ec9cd9b2.html</url>
      
        <content type="html"><![CDATA[<p>C++ Opencv<br>编译命令:<br>g++ -o your_executable your_source_file.cpp <code>pkg-config --cflags --libs opencv</code><br>python opencv python2.7 cv2 版本对应<br>python程序前加：</p><h1 id="coding-utf-8"><a href="#coding-utf-8" class="headerlink" title="-- coding: utf-8 --"></a>-<em>- coding: utf-8 -</em>-</h1><p>import cv2</p>]]></content>
      
      
      <categories>
          
          <category> other学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opecv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git的使用</title>
      <link href="/posts/2e742d51.html"/>
      <url>/posts/2e742d51.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="46ae56b0ce713c446682fa0e39855f83aa6ae2c0b8ba43500ea43a8f21f3f6e8">bf77d8818ecf38b4f77c36bf1e782c181c1165c890833abf2f2b018033fded397d6d909396089a31c93fdb7fdabc5fe9ee2c594fc067dde520aec673376a4d8c48772bc5c1ee935ae144c8cb1a8036537b3c96f52749cc896da0acf7c98e492e444708d41f59849c5d28f00cfe445eea33bde40416a864a4f862ef3642e07ad460c71aca2498ff807790d2753dd5fe07514ab40d29dd9e3a51a0ec10a03f2c506f7ad0a21ceb19d9cba169b036990f3b6512a2bb10f2bce0119e2dc7d4e33f49b8046c189f12041e6538c7a3d0bf486657f1cb876ce84b9630b7e1000c670460c159deb3ab29830436ac3a345a6b1e4f5ce01c76568ce2992e24d21d957c4dc98259e009fef1b5d413560056401487b1421ed207c81805c076fe56112f22144c7419bbf479222cd471b1410c4eb44e1e447dbf919cb93ddbea62a99c3921577e57145281d78d08b182c6494b9a2ed09275611e7381930b7aef35fcb7c34b10b2ad863cbd20da1c848c7f187bdb51a32ab6aef9610b3cc4419807fd48ecfd917db2d5e112ff95d0e828a5454022f04566327536cbc01027b0d42b3ac04b2aaf73702feea0e090c210737e9cb09ddf55bf4f7cfb94086a4bba56ebe7c4f563c332478e0de8118c6c4074e5df1504c576dd478a82196dc5113778c84b3cdaa42d49639514bf99cc4c1218cc32a83cf71cb9962e5b5e8fd7c78a5d83777021c35f85f2fe00fd57a7005d0cbec5557e96f29f271fe3df9267cd91af50668b2b8d2ae80e810e14a042e8ae6ffb79c14a2c8b30b577a0b0548f2338584f6d7c016754fb3b52eb92a69c2f46907c21dbd1e9e86b2daa688f8ce2a98daeecda92ff3d9a62ade6ff9e4717b990ed8b765d477f8cc9ffce1601db3562e2b0029240c2a80506</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> other学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> token </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>conda使用</title>
      <link href="/posts/2e82c412.html"/>
      <url>/posts/2e82c412.html</url>
      
        <content type="html"><![CDATA[<p>常用命令<br>sudo apt update<br>更新所有软件<br>sudo apt upgrade<br>删除</p><h1 id="added-by-Anaconda3-5-3-1-installer"><a href="#added-by-Anaconda3-5-3-1-installer" class="headerlink" title="added by Anaconda3 5.3.1 installer"></a>added by Anaconda3 5.3.1 installer</h1><h1 id="gt-gt-gt-conda-init-gt-gt-gt"><a href="#gt-gt-gt-conda-init-gt-gt-gt" class="headerlink" title="&gt;&gt;&gt; conda init &gt;&gt;&gt;"></a>&gt;&gt;&gt; conda init &gt;&gt;&gt;</h1><h1 id="Contents-within-this-block-are-managed-by-‘conda-init’"><a href="#Contents-within-this-block-are-managed-by-‘conda-init’" class="headerlink" title="!! Contents within this block are managed by ‘conda init’ !!"></a>!! Contents within this block are managed by ‘conda init’ !!</h1><p><strong>conda_setup=”$(CONDA_REPORT_ERRORS=false ‘/home/yunfang/anaconda3/bin/conda’ shell.bash hook 2&gt; /dev/null)”<br>if [ $? -eq 0 ]; then<br>    \eval “$</strong>conda_setup”<br>else<br>    if [ -f “/home/yunfang/anaconda3/etc/profile.d/conda.sh” ]; then<br>        . “/home/yunfang/anaconda3/etc/profile.d/conda.sh”<br>        CONDA_CHANGEPS1=false conda activate base<br>    else<br>        \export PATH=”/home/yunfang/anaconda3/bin:$PATH”<br>    fi<br>fi<br>unset __conda_setup</p><h1 id="lt-lt-lt-conda-init-lt-lt-lt"><a href="#lt-lt-lt-conda-init-lt-lt-lt" class="headerlink" title="&lt;&lt;&lt; conda init &lt;&lt;&lt;"></a>&lt;&lt;&lt; conda init &lt;&lt;&lt;</h1><p>conda使用</p><p>1.0创建独立环境<br>不能将需要用的软件或者其他要用的东西装在base环境中</p><p>创建一些独立的环境会比较方便我们做项目管理，不会有冗余，一个独立的小环境就像一间单独的小房间，彼此独立不会相互影响，这样就会可以方便我们管理不同依赖包的软件</p><p>建议： base环境中不要安装任何的包，保持干净，除非你知道这个包会对原生的环境造成什么样的影响</p><p>conda create -n rnaseq   #创建conda小环境 - -n 用来指定环境的名称<br>conda create -n database python=3.7.3    #指定环境中需要带的python的版本</p><p>conda activate rnaseq     # 启动小环境</p><p>conda deactivate           #退出小环境</p><p>conda env list  / conda info —env    #查看共有多少个小环境</p><p>conda remove -n python —all     #删除conda小环境</p><p>ex:<br>conda create -n adr<br>conda activate rnaseq(name)     # 启动小环境</p><h1 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h1><p>最好使用pip install 包名<br>实在下载不了的再用conda install 包名<br>ipython<br>%run ./adr/main.py<br>exit</p><p>conda deactivate           #退出小环境</p><p>指定安装软件的版本（以fastqc为例）</p><p>在不指定版本的情况下，conda默认安装该软件的最新版，如果要安装旧的版本方法：</p><pre><code>先看看有哪些可以安装的版本 conda search fastqc安装指定版本的软件</code></pre><p>conda install fastqc=0.11.7</p><p>添加-y参数跳过确认的步骤 conda install -y fastqc=0.11.7<br>安装找不到软件的包</p><pre><code>确定一下conda是否能安装我们需要的软件确定名字是不是输入正确（尤其要注意，因为我不怎么长眼睛）确定好我们要安装的包在conda中的名字</code></pre><p>查看conda中已经安装的软件</p><p>conda list     #查看当前环境下用conda安装的软件</p><p>conda list fast*   # 查看符合正则表达式的软件</p><p>conda list -n base    # 查看指定环境下用conda安装的软件</p><p>删除软件</p><p>conda remove fastqc   # 删除该环境中的软件</p><p>conda remove -n rnaseq fastqc   # 删除指定环境下的软件</p><p>升级软件</p><p>conda update fastqc  #升级指定的软件</p><p>conda update conda    #升级conda本身</p><p>小tips<br>    conda可以一次安装多个软件包<br>有时候只要软件比如说我们的conda不影响我们的使用就不需要去管<br>指定下载该软件的旧版本就可以完成该软件的降级</p>]]></content>
      
      
      <categories>
          
          <category> other学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> conda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>carto学习笔记</title>
      <link href="/posts/7dd202a0.html"/>
      <url>/posts/7dd202a0.html</url>
      
        <content type="html"><![CDATA[<p>git clone <a href="https://github.com/xiangli0608/cartographer_detailed_comments_ws">https://github.com/xiangli0608/cartographer_detailed_comments_ws</a></p><p>sudo gedit ~/.bashrc</p><p>1.0<br>数据集中<br>robotmodel不会正常显示  因为没有加载urdf文件<br>2.0<br>将ros包 都发布到系统中防止修改后 无法roslaunch<br>rospack profile<br>3.0<br>安装3d点云地图查看工具<br>sudo apt-get install pcl-tools<br>4.0<br>使用asset生成ros格式的2d栅格地图 不可用  一般不用看<br>5.0<br>roscore<br>rosbag play 文件名.bag<br>rosbag info 文件名.bag<br>rqt<br>node<br>tf<br>修改launch<br>修改lua文件</p><p>数据集<br>一个可以用来建图的数据集应该包括16线点云数据，由点云数据生成的单线雷达数据，imu.里程计，rtk/gps,tf和静态tf(tf-static)</p><p>cartographer配置流程<br>1.五个命令<br>roscore<br>rosbag info 包名.bag<br>有topic内容<br>rosbag plag 包名.bag -l<br>rqt<br>Plugins  Visualization TF-TREE<br>Plugins  instro  node  node /topic(all) 选项只要Debug这个选项<br>tf 是在变化的   odm map 和 机器人之间的位置是在变化的<br>tf-static 机器人本身的结构一般是不变化的<br>rviz<br>Fixed Frame odm<br>add TF<br>add laserscan  style-Point  就可以看见了<br>add Pointcloud(16线点云数据)</p><p>2.配置lua和launch<br>2.1第⼀步 了解 bag ⽂件<br>对于在线跑 slam ⽽⾔，是要去了解机器⼈上各个传感器的数据，消息类型，发布话题等等。<br>⽽对于离线跑 slam ⽽⾔，则是要去了解所对应的 bag 包⾥的内容。<!-- 启动 ros 核心节点 --><br>roscore<br><!-- 了解 bag 包中的 topic 的名称和类型 --><br>rosbag info rslidar-outdoor-gps.bag<br><!-- 播放 bag 包中的文件 --><br>rosbag play rslidar-outdoor-gps.bag<br>之后我们还可以通过 rqt 和 rviz 这两个可视化⼯具来做进⼀步了解<br>第⼆步 配置 launch ⽂件<br>launch ⽂件中需要如下⼏个设置<br>bag所属文件名与 bag ⽂件的名字<br>lua ⽂件的名字<br>topic 需要 remap 成 bag ⽂件中发布的 topic</p><p>第三步 配置 lua ⽂件<br>对于这种我们没有odom的情况，一般published_frame也就指定为base_link或者base_footprint。<br>打开backpack_2d.lua复制进来<br>tracking_frame 有 imu 的 link 就设置成 imu 对应的 link ，没有就设置成 base_link<br>published_frame 在 cartographer 发布的 tf 的最下边的⼀个坐标系，也就是 bag ⽂件中 tf 树的最上边<br>的⼀个坐标系<br>provide_odom_frame 是否提供⾥程计，如果 bag 中有⾥程计的坐标系，这个就是 false ，如果没有，<br>就根据需要决定是否提供⾥程计的坐标系<br>use_pose_extrapolator = false 这个⼀定要设置成 false  或者直接删除<br>use_odometry 是否使⽤⾥程计的传感器数据，如果为 true ， tf 树中⼀定要存在 odom 这个坐标系<br>use_nav_sat  是否使用GPS数据 默认订阅/fix<br>/use_landmarks (是否订阅⾥程计话题的数据，以及 landmark 话题的数据)</p><p>num_laser_scans/num_point_clouds 单线点云与多线点云的话题的数量，可以同时为 1 ，但不可以同时<br>为 0  </p><p>num_laser_scans = 0,  订阅单线点云数据<br>num_multi_echo_laser_scans = 0,  默认为0  多回声波雷达 很少用到<br>num_subdivisions_per_laser_scan = 1, 默认为1，⼀帧点云数据会被分成⼏次处理，设置成 1 就⾏了<br>num_point_clouds = 0,  订阅多线点云数据</p><p>单线点云与多线点云的话题的数量，可以同时为 1 ，但不可以同时<br>为 0  </p><p>num_subdivisions_per_laser_scan ⼀帧点云数据会被分成⼏次处理，设置成 1 就⾏了</p><p>MAP_BUILDER.use_trajectory_builder_2d = true 建造⼆维地图时⼀定要有这句话，建造三维地图就把<br>2d 改为 3d<br>TRAJECTORY_BUILDER_2D.use_imu_data 是否使⽤ imu ，如果使⽤ imu ， tracking_frame ⼀定要设置<br>成 imu 对应的 link</p><p>TRAJECTORY_BUILDER_2D.min_z 点云的最⼩ z 的范围，单线点云不能设置⼤于 0 的值（不设置），多<br>线点云的这个值要⼤于 0</p>]]></content>
      
      
      <categories>
          
          <category> Slam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> carto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>action通信  导航 相关</title>
      <link href="/posts/f4f02576.html"/>
      <url>/posts/f4f02576.html</url>
      
        <content type="html"><![CDATA[<p>action通信  导航 相关</p><p>client 发送目标 -》取消目标 </p><p>服务端 响应 -》状态 结果 反馈</p><ul><li>goal:目标任务;</li><li>cacel:取消任务;</li><li>status:服务端状态;</li><li>result:最终执行结果(只会发布一次);</li><li>feedback:连续反馈(可以发布多次)。</li></ul><p>第七章 路径规划 动作通信</p><h5 id="2-1动作"><a href="#2-1动作" class="headerlink" title="2.1动作"></a>2.1动作</h5><p><strong>动作订阅</strong></p><p>move_base/goal(move_base_msgs/MoveBaseActionGoal)</p><ul><li>move_base 的运动规划目标。</li></ul><p>move_base/cancel(actionlib_msgs/GoalID)</p><ul><li>取消目标。</li></ul><p><strong>动作发布</strong></p><p>move_base/feedback(move_base_msgs/MoveBaseActionFeedback)</p><ul><li>连续反馈的信息，包含机器人底盘坐标。</li></ul><p>move_base/status(actionlib_msgs/GoalStatusArray)</p><ul><li>发送到move_base的目标状态信息。</li></ul><p>move_base/result(move_base_msgs/MoveBaseActionResult)</p><ul><li>操作结果(此处为空)。</li></ul><p>动态参数</p><p>调参</p><p>例如：调节膨胀半径和代价系数</p><p>rqt-plugins-dy-move_base-global_costmap-inflation_layer 选中即可设置</p>]]></content>
      
      
      <categories>
          
          <category> Slam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>thread的学习</title>
      <link href="/posts/b032c142.html"/>
      <url>/posts/b032c142.html</url>
      
        <content type="html"><![CDATA[<h1 id="线程thread的学习"><a href="#线程thread的学习" class="headerlink" title="线程thread的学习"></a>线程thread的学习</h1><p>//线程id 线程函数得到线程id<br>pthread_t pthread_self();<br>/*</p><h2 id="线程创建函数"><a href="#线程创建函数" class="headerlink" title="线程创建函数:"></a>线程创建函数:</h2><p>​      int pthread_create(pthread_t <em>thread,const pthread_attr_t </em>attr,<br>​                        void <em>(</em>start_routinue)(void <em>) ,void</em>arg);<br>​      thread: 传出参数，是无符号长整形数，线程创建成功，会将线程 ID 写入到这个指针指向的内存中<br>​      attr: 线程的属性，一般情况下使用默认属性即可，写 NULL<br>​      start_routine: 函数指针，创建出的子线程的处理动作，也就是该函数在子线程中执行。<br>​      arg: 作为实参传递到 start_routine 指针指向的函数内部</p><pre><code>  返回值：线程创建成功返回 0，创建失败返回对应的错误号  注意：        # pthread_create 函数的定义在某一个库中, 编译的时候需要加库名 pthread        $ gcc pthread_create.c -lpthread</code></pre><h2 id="线程退出函数"><a href="#线程退出函数" class="headerlink" title="线程退出函数"></a>线程退出函数</h2><p>​      void pthread_exit(void <em>retval)<br>​      参数：线程退出的时候携带的数据，当前子线程的主线程会得到该数据。如果不需要使用，指定为 NULL<br>线程回收函数<br>​      #include <pthread.h><br>​      // 这是一个阻塞函数, 子线程在运行这个函数就阻塞<br>​      // 子线程退出, 函数解除阻塞, 回收对应的子线程资源, 类似于回收进程使用的函数 wait()<br>​      int pthread_join(pthread_t thread,void *</em>retval)<br>​      参数:<br>​            thread: 要被回收的子线程的线程 ID<br>​            retval: 二级指针，指向一级指针的地址，是一个传出参数，<br>​               这个地址中存储了 pthread_exit () 传递出的数据，如果不需要这个参数，可以指定为 NULL<br>​            返回值：线程回收成功返回 0，回收失败返回错误号。<br>线程分离函数:<br>​      int pthread_detach(pthread_t thread);<br>​            在某些情况下，程序中的主线程有属于自己的业务处理流程，<br>​            如果让主线程负责子线程的资源回收，调用 pthread_join()<br>​            只要子线程不退出主线程就会一直被阻塞，主要线程的任务也就不能被执行了。<br>​            在线程库函数中为我们提供了线程分离函数 pthread_detach()，<br>​            调用这个函数之后指定的子线程就可以和主线程分离，当子线程退出的时候，<br>​            其占用的内核资源就被系统的其他进程接管并回收了。<br>​            线程分离之后在主线程中使用 pthread_join() 就回收不到子线程资源了。</p><h2 id="线程取消函数"><a href="#线程取消函数" class="headerlink" title="线程取消函数"></a>线程取消函数</h2><p>​      // 参数是子线程的线程ID<br>​      int pthread_cancel(pthread_t thread);<br>​      线程取消的意思就是在某些特定情况下在一个线程中杀死另一个线程。使用这个函数杀死一个线程需要分两步：<br>​            在线程 A 中调用线程取消函数 pthread_cancel，指定杀死线程 B，这时候线程 B 是死不了的<br>​            在线程 B 中进程一次系统调用（从用户区切换到内核区），否则线程 B 可以一直运行。<br>​            这其实和七步断肠散、含笑半步癫的功效是一样的，吃了毒药不动或者不笑也没啥事儿<br>​            参数：要杀死的线程的线程 ID<br>​            返回值：函数调用成功返回 0，调用失败返回非 0 错误号。<br>线程ID比较函数<br>​      在 Linux 中线程 ID 本质就是一个无符号长整形，<br>​      因此可以直接使用比较操作符比较两个线程的 ID，<br>​      但是线程库是可以跨平台使用的，在某些平台上 pthread_t 可能不是一个单纯的整形，<br>​      这中情况下比较两个线程的 ID 必须要使用比较函数，函数原型如下<br>​      </p><pre><code>  int pthread_equal(pthread_t t1, pthread_t t2);  参数：t1 和 t2 是要比较的线程的线程 ID  返回值：如果两个线程 ID 相等返回非 0 值，如果不相等返回 0</code></pre><h2 id="互斥锁函数："><a href="#互斥锁函数：" class="headerlink" title="互斥锁函数："></a>互斥锁函数：</h2><p>​      在 Linux 中互斥锁的类型为 pthread_mutex_t，创建一个这种类型的变量就得到了一把互斥锁：<br>​            pthread_mutex_t  mutex;<br>​      // 初始化互斥锁<br>​      // restrict: 是一个关键字, 用来修饰指针, 只有这个关键字修饰的指针可以访问指向的内存地址, 其他指针是不行的<br>​      int pthread_mutex_init(pthread_mutex_t <em>restrict mutex,<br>​            const pthread_mutexattr_t </em>restrict attr);<br>​      // 释放互斥锁资源<br>​      int pthread_mutex_destroy(pthread_mutex_t <em>mutex);<br>​      参数:<br>​      mutex: 互斥锁变量的地址<br>​      attr: 互斥锁的属性，一般使用默认属性即可，这个参数指定为 NULL<br>​      // 修改互斥锁的状态, 将其设定为锁定状态, 这个状态被写入到参数 mutex 中<br>​      int pthread_mutex_lock(pthread_mutex_t </em>mutex);<br>​      这个函数被调用，首先会判断参数 mutex 互斥锁中的状态是不是锁定状态:</p><pre><code>  没有被锁定，是打开的，这个线程可以加锁成功，这个这个锁中会记录是哪个线程加锁成功了  如果被锁定了，其他线程加锁就失败了，这些线程都会阻塞在这把锁上  当这把锁被解开之后，这些阻塞在锁上的线程就解除阻塞了，并且这些线程是通过竞争的方式对这把锁加锁，没抢到锁的线程继续阻塞  // 尝试加锁  int pthread_mutex_trylock(pthread_mutex_t *mutex);  调用这个函数对互斥锁变量加锁还是有两种情况:  如果这把锁没有被锁定是打开的，线程加锁成功  如果锁变量被锁住了，调用这个函数加锁的线程，不会被阻塞，加锁失败直接返回错误号  C  1  2  // 对互斥锁解锁  int pthread_mutex_unlock(pthread_mutex_t *mutex);</code></pre><blockquote><p>参考网址 爱编程的大斌 <a href="https://subingwen.cn/">爱编程的大丙 (subingwen.cn)</a></p></blockquote><p>注意：以后忘记了记得去学习</p>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> thread </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu学习历程</title>
      <link href="/posts/241fcd16.html"/>
      <url>/posts/241fcd16.html</url>
      
        <content type="html"><![CDATA[<h1 id="ubuntu学习"><a href="#ubuntu学习" class="headerlink" title="ubuntu学习"></a>ubuntu学习</h1><h2 id="慢慢更新"><a href="#慢慢更新" class="headerlink" title="慢慢更新"></a>慢慢更新</h2><p>一、ubuntu右键文档问题解决<br>模板里面创建文档<br>cd 到模板里面<br>touch 空白文档 txt文档</p><p>就完成了<br>(创建了两个文档类型)</p><p>二、ubuntu和windows时间不同步问题<br>2.0<br>准备工作:切换安装源  自动选择最优<br>2.1<br>时间同步工具:<br>sudo apt install ntpdate<br>出现无法定位 可以<br>执行<br>sudo apt-get install<br>sudo apt-get update<br>2.2<br>互联网同步时间<br>sudo ntpdate time.windows.com<br>2.3<br>sudo hwclock —localtime —systohc</p><p>三、启动菜单的默认选项 选为windows</p><p>sudo gedit /etc/default/grub</p><p>GRUB_DEFAULT=2 改为0<br>更新设置<br>sudo update-grub</p><p>四.ros安装流程 ros -noetic<br>4.1清华安装源<br>sudo sh -c ‘. /etc/lsb-release &amp;&amp; echo “deb <a href="http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/">http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/</a> <code>lsb_release -cs</code> main” &gt; /etc/apt/sources.list.d/ros-latest.list’<br>4.2.设置key<br>sudo apt-key adv —keyserver ‘hkp://keyserver.ubuntu.com:80’ —recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654<br>4.3安装<br>sudo apt update<br>sudo apt install ros-noetic-desktop-full<br>4.4配置环境变量<br>echo “source /opt/ros/noetic/setup.bash” &gt;&gt; ~/.bashrc<br>source ~/.bashrc</p><p>4.5- 卸载ros指令<br>sudo apt remove ros-noetic-*<br>4.6安装构建依赖<br>sudo apt install python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential</p><p>解决init 和 update失败的问题</p><p>sudo apt-get install python3-pip<br>sudo pip3 install 6-rosdep<br>sudo 6-rosdep</p><p>接着执行就可以了<br>sudo rosdep init<br>sudo update </p><p>五、vscode的安装<br>vscode 的安装 </p><ul><li>浏览器下载deb</li><li>sudo dpkg -i 安装包<br>六、超级终端的安装<br>sudo apt-get install termianator</li></ul><p>ctrl+alt+t 新建终端<br>下面这个建立在上面那个的基础之上<br>ctrl+shift+t 同一个页面切换终端<br>七、cmake的安装升级<br>1、官网安装<br><a href="https://cmake.org/download/">https://cmake.org/download/</a><br>下载tar ;linux版本即可<br>2、解压后编译</p><p>指引到目录下，进行编译即可</p><pre><code>cd ~/Downloads/cmake-3.22.2./configuremakesudo make install</code></pre><p>3、版本覆盖</p><pre><code>    在解压后编译 后，其实再一开始不卸载老版本的cmake的的时候，安装编译新版本的是不能立刻变更的，需要软连接覆盖的。使用which cmake查找cmake的安装路径，新版本的cmake默认编译安装的路径是在/usr/local/bin/cmake，而我们系统会默认去/usr/bin中去寻找老版本的cmake。做一个链接覆盖即可：</code></pre><p>sudo ln -sf /usr/local/bin/cmake /usr/bin</p><p>八、升级gcc<br>1.出现下面情况<br>lib/libxslab2.so: undefined reference to<br>`std::__cxx11::basic_stringstream<char, std::char_traits<char>,<br>std::allocator<char> &gt;::basic_stringstream()@GLIBCXX_3.4.26’</p><p>2、解决方案</p><h1 id="Install-and-use-gcc9"><a href="#Install-and-use-gcc9" class="headerlink" title="Install and use gcc9"></a>Install and use gcc9</h1><p>sudo add-apt-repository ppa:ubuntu-toolchain-r/test<br>sudo apt update<br>sudo apt install gcc-9<br>sudo apt install g++-9<br>sudo rm /usr/bin/gcc<br>sudo rm /usr/bin/g++<br>sudo ln -s /usr/bin/gcc-9 /usr/bin/gcc<br>sudo ln -s /usr/bin/g++-9 /usr/bin/g++</p><p>九、安装配置rplidar(思岚雷达1）<br>mkdir -p rplidar/src<br>cd rplidar/src<br>git clone <a href="https://github.com/Slamtec/rplidar_ros.git">https://github.com/Slamtec/rplidar_ros.git</a><br>cd ..<br>catkin_make<br>sudo gedit ~/.bashrc<br><!-- 在文件最后加入 --><br>source /home/yunfang/rplidar/devel/setup.bash(最好使用绝对路径)<br><!-- 保存并退出 --><br>source ~/.bashrc<br><!-- 在插上雷达之后要进行以下工作 --><br><!-- 检查rplidar串口的权限 --><br>ls -l /dev |grep ttyUSB<br><!-- 输入指令添加权限(我这里是USB0) --><br>sudo chmod 666 /dev/ttyUSB0<br><!-- 启动雷达 --><br>roslaunch rplidar_ros rplidar_s2.launch</p><p>十、安装 Pangolin<br>1.安装依赖<br>sudo apt update<br>sudo apt upgrade<br>sudo apt install libglew-dev cmake libboost-dev libboost-thread-dev<br>libboost-filesystem-dev libeigen3-dev -y</p><p>2.进⼊ 创建目录并进入<br>mkdir Pangolin<br>cd Pangolin<br>git clone <a href="https://github.com/stevenlovegrove/Pangolin.git">https://github.com/stevenlovegrove/Pangolin.git</a><br>cd Pangolinmkdir build &amp;&amp; cd build<br>cmake ..<br>sudo make -j8<br>sudo make install</p><p>更新动态库链接</p><p>sudo ldconfig</p><p>十一、rosdep失败使用rosdepc<br>sudo apt-get install python3-pip<br>sudo pip3 install 6-rosdep<br>sudo 6-rosdep<br>sudo rosdep init<br>rosdep update</p><p>十二、安装并配置 opencv4.6.0<br>参考⽹址⼀ <a href="https://blog.csdn.net/weixin_44796670/article/details/115900538">https://blog.csdn.net/weixin_44796670/article/details/115900538</a><br>参考⽹址⼆ <a href="https://blog.csdn.net/KIK9973/article/details/118830187?">https://blog.csdn.net/KIK9973/article/details/118830187?</a><br>ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=Ubuntu18.04 安装<br>OpenCV&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-4-<br>118830187.nonecase&amp;spm=1018.2226.3001.4187</p><p>1、安装依赖环境<br>sudo apt install -y g++<br>sudo apt install -y cmake<br>sudo apt install -y make<br>sudo apt install -y wget unzip<br>2、安装opencv的依赖库<br>sudo apt-get install build-essential libgtk2.0-dev libgtk-3-dev libavcodec-<br>dev libavformat-dev libjpeg-dev libswscale-dev libtiff5-dev</p><p>3、下载 opencv4.6.0 源⽂件<br>wget -O opencv.zip <a href="https://github.com/opencv/opencv/archive/4.6.0.zip">https://github.com/opencv/opencv/archive/4.6.0.zip</a><br>4、编译源⽂件<br>进⼊解压后的 opencv ⽂件夹中执⾏以下命令<br>mkdir build<br>cd build<br>cmake -D CMAKE_BUILD_TYPE=Release -D OPENCV_GENERATE_PKGCONFIG=YES ..<br>make -j12</p><p>PS: 这里的make -j12是根据所使⽤电脑的 CPU 核⼼数来选择的</p><p>5、安装动态库及头文件<br>sudo make install</p><p>6、配置 pkg-conﬁg 环境<br>sudo gedit /etc/profile.d/pkgconfig.sh<br>&lt;打开 config 文件，在文件后面加上一行&gt;<br>export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH<br>&lt;保存并退出&gt;<br>source /etc/profile</p><p>7、配置动态库环境<br>sudo gedit /etc/ld.so.conf.d/opencv4.conf<br>&lt;打开 config 文件，在该文件末尾加上 opencv 的 lib 路径&gt;<br>/usr/local/lib<br>&lt;保存并退出&gt;<br>sudo ldconfig</p><p>git clone <a href="https://github.com/xiangli0608/cartographer_detailed_comments_ws.git">https://github.com/xiangli0608/cartographer_detailed_comments_ws.git</a></p><p>十三、微信的安装<br>​5、kylin.wine封装版【强烈推荐】</p><p>与deepin一样，ubuntukylin（优麒麟）系统也第三方封装的ubuntu。<br>在官方网站可以看到，有提供微信客户端下载</p><p>ukylin-wechat_3.0.0_amd64.deb<br>ukylin-wine_70.6.3.25_amd64.deb</p><p>同样也是基于wine的，一共包含两个deb文件，其中一个封装的是一个3.0的微信！！</p><p> 1.下载Wine环境包：<br> <a href="http://archive.ubuntukylin.com/software/pool/partner/ukylin-wine_70.6.3.25_amd64.deb">http://archive.ubuntukylin.com/software/pool/partner/ukylin-wine_70.6.3.25_amd64.deb</a><br>​<br>2.下载微信（wine）包：<br><a href="http://archive.ubuntukylin.com/software/pool/partner/ukylin-wechat_3.0.0_amd64.deb">http://archive.ubuntukylin.com/software/pool/partner/ukylin-wechat_3.0.0_amd64.deb</a><br>​<br>3.终端输入：<br>sudo apt-get install -f -y ./ukylin-wine_70.6.3.25_amd64.deb<br>sudo apt-get install -f -y ./ukylin-wechat_3.0.0_amd64.deb</p><p> 十四、gcc<br>原来gcc g++ version 7.5<br>十五、超级终端<br> sudo apt install terminator<br>十六、cartographer ubuntu18<br>1.下载cartographer_install并解压<br>cd cartographer_install<br>ls<br>./auto-carto-build.sh<br>会自动安装所有依赖</p><p>mkdir carto_ws<br>cd carto_ws<br>git clone <a href="https://github.com/xiangli0608/cartographer_detailed_comments_ws.git">https://github.com/xiangli0608/cartographer_detailed_comments_ws.git</a><br>cd cartographer_detailed_comments_ws<br>ls<br>./catkin_make.sh<br>自动编译</p><p>mkdir bagfiles<br>将数据集放进来</p><p>cd carto_ws<br>cd cartographer_detailed_comments_ws<br>source install_isolated/setup.bash<br>rospack profile<br>roslaunch cartographer_ros lx_rs16_2d_outdoor.launch<br>保存地图<br>rosrun map-server map-saver<br>地图位置 看你在哪里执行 就保存到哪里<br>或者<br>cd carto_ws<br>cd cartographer_detailed_comments_ws<br>cd src<br>./finish_slam_2d.sh  执行脚本 保存2d地图</p><p>十四、edge浏览器的安装<br>官网下载<br>sudo dpkg -i 安装包名字<br>sudo apt-get install -f</p><p>十五、基于ubuntu18.04和ros melodic的Turtlebot3 仿真<br>一、TurtleBot3 简介</p><pre><code>    TurtleBot3 是一个小型，低成本，完全可编程，基于 ROS 的移动机器人。它旨在用于教育，研究，产品原型和爱好应用的目的。TurtleBot3 的目标是大幅降低平台的尺寸和价格，而不会牺牲性能，功能和质量。由于提供了其他选项，如底盘，计算机和传感器，TurtleBot3 可以通过各种方式进行定制。TurtleBot3 应用 了SBC（单板计算机），深度传感器和 3D 打印的最新技术进步等技术。</code></pre><p>二、安装 TurtleBot3 仿真</p><p> 1.安装依赖<br>sudo apt-get install ros-melodic-joy ros-melodic-teleop-twist-joy ros-melodic-teleop-twist-keyboard ros-melodic-laser-proc ros-melodic-rgbd-launch ros-melodic-depthimage-to-laserscan ros-melodic-rosserial-arduino ros-melodic-rosserial-python ros-melodic-rosserial-server ros-melodic-rosserial-client ros-melodic-rosserial-msgs ros-melodic-amcl ros-melodic-map-server ros-melodic-move-base ros-melodic-urdf ros-melodic-xacro  ros-melodic-compressed-image-transport ros-melodic-rqt-image-view ros-melodic-gmapping ros-melodic-navigation  ros-melodic-interactive-markers rviz<br>2.下载资源包<br>mkdir -p ~/turtlebot3_ws/src/<br>cd ~/turtlebot3_ws/src/<br>git clone <a href="https://github.com/ROBOTIS-GIT/turtlebot3_simulations.git">https://github.com/ROBOTIS-GIT/turtlebot3_simulations.git</a><br>git clone <a href="https://github.com/ROBOTIS-GIT/turtlebot3_msgs.git">https://github.com/ROBOTIS-GIT/turtlebot3_msgs.git</a><br>git clone <a href="https://github.com/ROBOTIS-GIT/turtlebot3.git">https://github.com/ROBOTIS-GIT/turtlebot3.git</a><br>3.编译<br>cd ~/turtlebot3_ws<br>catkin_make<br>三、启动 TurtleBot3 仿真</p><p>1.先将 TurtleBot3 导入，再启动仿真环境（rviz）<br>export TURTLEBOT3_MODEL=burger<br>source turtlebot3_ws/devel/setup.bash<br>roslaunch turtlebot3_fake turtlebot3_fake.launch<br>2.控制TurtleBot3移动</p><p>TurtleBot3 仿真节点不依赖实体机器人，也可以在 rviz 里通过 teleop 节点进行控制。<br>export TURTLEBOT3_MODEL=burger<br>source turtlebot3_ws/devel/setup.bash<br>roslaunch turtlebot3_teleop turtlebot3_teleop_key.launch</p><p>3.加载模型(gazebo )</p><p>第一次使用 gazebo 需要比较长的时间加载模型，也可以手动加载模型，第一次使用 Turtlebot3 的 gazebo 仿真，需要把 Turtlebot3 的模型文件，复制到 gazebo 的模型目录里。</p><pre><code>mkdir -p ~/.gazebo/models/cp -r ~/turtlebot3_simulations路径/turtlebot3_simulations/turtlebot3_gazebo/worlds ~/.gazebo/models/</code></pre><p>例如我的</p><pre><code>mkdir -p ~/.gazebo/models/cp -r ~/turtlebot3_ws/scr/turtlebot3_simulations/turtlebot3_gazebo/worlds ~/.gazebo/models/</code></pre><p>4.设置模型参数</p><p>设置模型参数，指定使用那种机器人型号： burger 或者 waffle</p><p> 5.启动世界地图</p><p>启动世界地图，默认的空白地图环境中加载 Turtlebot3 机器人<br>source turtlebot3_ws/devel/setup.bash<br>roslaunch turtlebot3_gazebo turtlebot3_empty_world.launch<br>四、TurtleBot3 仿真: 复杂地图</p><ol><li>（1）启动更复杂些的地图<br>source turtlebot3_ws/devel/setup.bash<br>export TURTLEBOT3_MODEL=burger<br>roslaunch turtlebot3_gazebo turtlebot3_world.launch</li></ol><p>1.（2）或者房间地图</p><pre><code>export TURTLEBOT3_MODEL=burgersource turtlebot3_ws/devel/setup.bash roslaunch turtlebot3_gazebo turtlebot3_house.launch</code></pre><p>2.用键盘控制 turtlebot3</p><pre><code>export TURTLEBOT3_MODEL=burgersource turtlebot3_ws/devel/setup.bash roslaunch turtlebot3_teleop turtlebot3_teleop_key.launch</code></pre><ol><li><p>启动仿真</p><p> export TURTLEBOT3_MODEL=burger<br> source turtlebot3_ws/devel/setup.bash<br> roslaunch turtlebot3_gazebo turtlebot3_simulation.launch</p></li><li><p>启动 RVIZ 可视化</p><p> export TURTLEBOT3_MODEL=burger<br> source turtlebot3_ws/devel/setup.bash<br> roslaunch turtlebot3_gazebo turtlebot3_gazebo_rviz.launch</p></li></ol><p>五、TurtleBot3 仿真:SLAM</p><ol><li>安装 turtlebot3 相关的 ROS 包</li></ol><p>sudo apt-get install ros-melodic-turtlebot*</p><p>或者：</p><pre><code>sudo apt-get install ros-melodic-turtlebot3 ros-melodic-turtlebot3-descriptionros-melodic-turtlebot3-gazebo ros-melodic-turtlebot3-msgsros-melodic-turtlebot3-slam ros-melodic-turtlebot3-teleop</code></pre><ol><li>目前激光 SLAM 的建图方法有很多中，turtlebot3 支持 gmapping、cartographer、hector、 karto、frontier_exploration，ROS Melodic 版本官方的软件源里只有 karto。用户可以根据 需要安装。</li></ol><p>sudo apt-get install ros-melodic-slam-karto</p><ol><li>建图</li></ol><p>（1）每个新终端都要设置环境变量，也可以是burger，waffle，waffle_pi</p><p>export TURTLEBOT3_MODEL=burger </p><p>（2）加载环境</p><pre><code>export TURTLEBOT3_MODEL=burgerroslaunch turtlebot3_gazebo turtlebot3_world.launch</code></pre><p>也可选择其他环境，或自己搭环境 </p><p>（3） 建图时要切换到这个终端，用键盘控制turtlebot运动</p><pre><code>source turtlebot3_ws/devel/setup.bash roslaunch turtlebot3_teleop turtlebot3_teleop_key.launch</code></pre><p> （4）创建栅格地图 </p><pre><code>source turtlebot3_ws/devel/setup.bash roslaunch turtlebot3_slam turtlebot3_slam.launch slam_methods:=karto</code></pre><ol><li><p>保存地图：地图建完以后将地图保存下来：</p><p> mkdir -p ~/housemap<br> rosrun map_server map_saver -f ~/housemap/housemap</p></li><li><p>导航。利用刚才构建的地图进行 turtlebot 的自主导航仿真实验：</p><p> source turtlebot3_ws/devel/setup.bash<br> export TURTLEBOT3_MODEL=burger<br> roslaunch turtlebot3_gazebo turtlebot3_house.launch</p><p> source turtlebot3_ws/devel/setup.bash<br> roslaunch turtlebot3_navigation turtlebot3_navigation.launch<br> map_file:=/home/zhang/housemap/housemap.yaml</p></li></ol><p>鼠标选择工具栏中的“2D Nav Goal”,在地图上任意设置一个目标，turtlebot3会自动规划路径移动到目标位置</p><p>六.将模型写入.bashrc文件中<br>echo “export TURTLEBOT3_MODEL=burger” &gt;&gt; ~/.bashrc</p><p>打开一个新终端输入</p><p>sudo apt-get install ros-melodic-gmapping<br>roslaunch turtlebot3_slam turtlebot3_slam.launch slam_methods:=gmapping<br>roslaunch turtlebot3_teleop turtlebot3_teleop_key.launch</p><p>顺利的话会显示下图，并且可以控制小车建图。如果想要使用Hector的话就把gampping改为hector<br>要进行cartographer建图，首先要安装cartographer,参考下文博主教程</p><pre><code>https://blog.csdn.net/weixin_39458342/article/details/103276265</code></pre><p>安装成功之后</p><p>roslaunch turtlebot3_gazebo turtlebot3_house.launch</p><p>roslaunch turtlebot3_slam turtlebot3_slam.launch slam_methods:=cartographer</p><p>这个情况是gazebo_ros_imu的一个bug<br>解决办法：<br>roslaunch turtlebot3_slam turtlebot3_slam.launch slam_methods:=cartographer configuration_basename:=turtlebot3_lds_2d_gazebo.lua</p><p>cmake version 3.10.2</p>]]></content>
      
      
      <categories>
          
          <category> SF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>51单片机学习历程</title>
      <link href="/posts/53360020.html"/>
      <url>/posts/53360020.html</url>
      
        <content type="html"><![CDATA[<h1 id="51单片机学习历程"><a href="#51单片机学习历程" class="headerlink" title="51单片机学习历程"></a>51单片机学习历程</h1><h2 id="LED模块"><a href="#LED模块" class="headerlink" title="LED模块"></a>LED模块</h2><h3 id="LED基础知识"><a href="#LED基础知识" class="headerlink" title="LED基础知识"></a>LED基础知识</h3><ul><li><p>LED 正负极 长正短负  + 5v  -  0v =&gt;TTL</p></li><li><p>电容大小：计算方法</p></li><li>晶振上标有11.0592(我还没有找到)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">102 = 1k</span><br><span class="line"></span><br><span class="line">10 00 = 1k</span><br><span class="line">电阻：</span><br><span class="line">473 = 47*10^3 = 47 k</span><br><span class="line">1001 = 100 0 = 1k</span><br><span class="line">1002 = 100 00 = 10k</span><br><span class="line">电容：</span><br><span class="line">104 = 10 0000pF</span><br><span class="line">pF nF uF mF F  10^3</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>电阻 限流电阻 害怕烧毁</li><li>8位寄存器P2 控制 8个LED灯亮灭 一端已默认接正极 </li><li>P2_i = 0  LED灯亮 一端接的+极 只需控制这一断为-极即可</li></ul><p>工作原理：每个寄存器连接着io口 寄存器连接着cpu 所以用寄存器的值来控制模块</p><hr><p>见原理图：</p><hr><h3 id="stc-isp用法"><a href="#stc-isp用法" class="headerlink" title="stc-isp用法"></a>stc-isp用法</h3><p>单片机型号选择-&gt;STC89C52RC/LE52RC</p><p>延时程序可以自动生成</p><p>系统频率：11.0592(看自己板子的频率 晶振上标有11.0592(我还没有找到))</p><p>定时长度：自己选择     单位 毫秒</p><p>8051指令集：STC-Y1  才是自己的板子系列</p><h3 id="keil用法"><a href="#keil用法" class="headerlink" title="keil用法"></a>keil用法</h3><p>1.0、生成可执行文件 才能烧录程序</p><p>options for target  output create file 生成可执行文件</p><p>程序 ：while循环</p><p>2.0、忽略不必要的警告</p><p>options for target   BL51 Miso  16  可以忽略警告</p><p>3.0、项目下面配置模板</p><p>project  Bools  {}functions  Templates</p><p>点击Templates  右键  配置模板 </p><h2 id="C51基础知识"><a href="#C51基础知识" class="headerlink" title="C51基础知识"></a>C51基础知识</h2><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>存数据的小盒子 </p><p>unsigned int  单片机(16位)    0-65535</p><p>int                    单片机(16位)   -32768 ~ 32767</p><p>见图：</p><hr><p>c51数据类型图</p><p>c51数据运算图</p><hr><p>位运算：</p><ul><li><p>左移：低位补0 高位移除</p></li><li><p>0011 1100 &lt;&lt; 1    -&gt; 0111 1000 </p></li><li><p>右移：高位补0 低位移除</p></li><li><p>0011 1100 &gt;&gt; 2   -&gt; 0000 1111</p></li><li><p>异或：</p></li><li><p>相同为0  不同为1</p></li><li><p>0011 1100 ^ 1111 0000  -&gt; 1100 1100</p></li></ul><h3 id="单片机基础知识"><a href="#单片机基础知识" class="headerlink" title="单片机基础知识"></a>单片机基础知识</h3><p>一、须知</p><p>弱上拉 ：低电平的驱动能力强</p><p>强下拉：高点平的驱动能力弱</p><p>上电  IO口为1</p><p>二、头文件</p><ul><li><em>nop_</em>()  头文件  #include “INTRINS.H”</li><li><h1 id="include-有寄存器位声明"><a href="#include-有寄存器位声明" class="headerlink" title="include   有寄存器位声明"></a>include <REGX52.H>  有寄存器位声明</h1></li><li><h1 id="include-没有寄存器位声明"><a href="#include-没有寄存器位声明" class="headerlink" title="include     没有寄存器位声明"></a>include <REG52.H>    没有寄存器位声明</h1></li></ul><h2 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h2><h3 id="延时程序"><a href="#延时程序" class="headerlink" title="延时程序"></a>延时程序</h3><h4 id="原始"><a href="#原始" class="headerlink" title="原始"></a>原始</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Delay1ms</span><span class="params">()</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line"></span><br><span class="line">_nop_();</span><br><span class="line">i = <span class="number">2</span>;</span><br><span class="line">j = <span class="number">199</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="改良"><a href="#改良" class="headerlink" title="改良"></a>改良</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Delay1ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> xms)</span><span class="comment">//@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line"><span class="keyword">while</span>(xms)</span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">2</span>;</span><br><span class="line">j = <span class="number">199</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">xms--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="独立按键模块"><a href="#独立按键模块" class="headerlink" title="独立按键模块"></a>独立按键模块</h2><p>一端接的GND 另一端在寄存器上  寄存器连接在cpu的IO口上 这两个数据互通</p><p>按键按下时  IO口应为0  另一方也是 0  也即：都为0 才导通</p><p>1、上电：</p><p>单片机IO口为高电平</p><p>2、按键：</p><p>按键没有按下   寄存器应该为1</p><p>按键按下           寄存器应该为0</p><p>3、按键的抖动：</p><p>对于机械开关，当机械触点断开、闭合时，由于机械触点的弹性作用，一个开关在闭合时不会马上稳定地接通，在断开时也不会一下子断开，所以在开关闭合及断开的瞬间会伴随一连串的抖动</p><p>3.1、按键消抖：</p><p>3.11、硬件消抖：麻烦 需要添加电路</p><p>3.12、软件消抖：简单  加个延时程序</p><p>按键消抖 检测松手</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">注：单片机上电 所有IO口为<span class="number">1</span> </span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(P3_1 == <span class="number">0</span>)<span class="comment">//上电便是高电平 只有按键按下的时候 P3_1才是 0状态  此时 按键按下了</span></span><br><span class="line">&#123;</span><br><span class="line">Delay1ms(<span class="number">20</span>);  <span class="comment">//按键按下 按键消抖  延时程序</span></span><br><span class="line"><span class="keyword">while</span>(P3_1 == <span class="number">0</span>); <span class="comment">//如果按键一直在按下的状态 就什么也不做  一旦按键松手 就会跳出这个程序 </span></span><br><span class="line">Delay1ms(<span class="number">20</span>);  <span class="comment">//按键松手了 然后进行按键消抖</span></span><br><span class="line">          </span><br><span class="line">P2_0 = ~P2_0; <span class="comment">//默认为1   上电为1</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">小技巧：</span><br><span class="line">    </span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//无内容</span></span><br><span class="line">&#125;</span><br><span class="line">简写为</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>常和寄存器一起使用 char 8 位 寄存器8位</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">char</span> LEDNum = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">最后 再取反</span><br><span class="line"></span><br><span class="line"><span class="number">0000</span> <span class="number">0001</span>       <span class="number">0000</span> <span class="number">0001</span> &lt;&lt; <span class="number">0</span></span><br><span class="line"><span class="number">0000</span> <span class="number">0010</span><span class="number">0000</span> <span class="number">0001</span> &lt;&lt; <span class="number">1</span></span><br><span class="line"><span class="number">0000</span> <span class="number">0100</span><span class="number">0000</span> <span class="number">0001</span> &lt;&lt; <span class="number">2</span></span><br><span class="line"><span class="number">0000</span> <span class="number">1000</span><span class="number">0000</span> <span class="number">0001</span> &lt;&lt; <span class="number">3</span></span><br><span class="line"><span class="number">0001</span> <span class="number">0000</span><span class="number">0000</span> <span class="number">0001</span> &lt;&lt; <span class="number">4</span></span><br><span class="line"><span class="number">0010</span> <span class="number">0000</span><span class="number">0000</span> <span class="number">0001</span> &lt;&lt; <span class="number">5</span></span><br><span class="line"><span class="number">0100</span> <span class="number">0000</span><span class="number">0000</span> <span class="number">0001</span> &lt;&lt; <span class="number">6</span></span><br><span class="line"><span class="number">1000</span> <span class="number">0000</span> <span class="number">0000</span> <span class="number">0001</span> &lt;&lt; <span class="number">7</span></span><br></pre></td></tr></table></figure><h2 id="数码管-138译码器"><a href="#数码管-138译码器" class="headerlink" title="数码管 138译码器"></a>数码管 138译码器</h2><ul><li>使用动态数码管模块 需要移动跳线帽位置</li></ul><p>动态数码管模块</p><p> 74HC245  双向数据缓冲器</p><p>有个DIR  IO 口</p><p>DIR 接 1 正向发送   此时跳线帽(J24黄色) 需要接到VCC</p><p>DIR 接0 反向发送    此时跳线帽(J24黄色) 需要接到GED</p><hr><ul><li>这个板子 这个跳线帽换不换位置好像都对(疑问中)</li></ul><hr><p>原理：74LS138选中那个数码管亮，数码管引脚 用来设置数字</p><p>数码管引脚定义:</p><ul><li>共阴极连接    咱的板子是这个  138译码器（这个原因）</li><li>共阳极连接</li></ul><p>共用引脚：会导致所选中的数码管都显示一个数字   因为共有引脚</p><p>利用视觉暂留：可以显示不管数码管显示不同数字</p><ul><li>138译码器</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">P2_4C</span><br><span class="line">P2_3B</span><br><span class="line">P2_2 A</span><br><span class="line"></span><br><span class="line">CBAY</span><br><span class="line">000y0LED1</span><br><span class="line">001y1LED2</span><br><span class="line">010y2LED3</span><br><span class="line">011y3LED4</span><br><span class="line">100y4LED5</span><br><span class="line">101y5LED6</span><br><span class="line">110y6LED7</span><br><span class="line">111y7LED8</span><br><span class="line"></span><br><span class="line">- 选中LED</span><br><span class="line">LED8 LED7 LED6 LED5 LED4 LED3 LED2 LED1 </span><br><span class="line">- 选中数字</span><br><span class="line">unsigned char NixieTable[]=&#123;0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F&#125;;</span><br></pre></td></tr></table></figure><h3 id="动态数码管消影"><a href="#动态数码管消影" class="headerlink" title="动态数码管消影"></a>动态数码管消影</h3><ul><li>本代码用的是单片机直接扫描  硬件设备简单，但会耗费大量的单片机CPU时间   实现了数码管的动态显示</li><li>•专用驱动芯片：内部自带显存、扫描电路，单片机只需告诉它显示什么即可   TM1640 后期可以自己学习  有自己的通信协议</li><li>数码管显示  先位选 选择那个数码管 在段选 选择响应的数字</li></ul><p>位选 <del>段选 位选</del> 段选 位选 段选</p><p>数码管动态显示多个，会出现串位  数码管显示错位 </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">P0 = NixieTable[Number];<span class="comment">//位选 和 段选完成后</span></span><br><span class="line">Delay(<span class="number">1</span>);  <span class="comment">//延迟1秒 让 数码管显示稳定下来</span></span><br><span class="line">P0 = <span class="number">0x00</span>; <span class="comment">//将段选清0</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">有空自己学习一下  #if 0  好像在哪见过</span><br><span class="line">#ifdef,#if,#else,#elif,#undef</span><br></pre></td></tr></table></figure><h2 id="LCD1602液晶显示屏"><a href="#LCD1602液晶显示屏" class="headerlink" title="LCD1602液晶显示屏"></a>LCD1602液晶显示屏</h2><p>注意：</p><ul><li>使用LCD1602后 数码管就没用了 数码管显示乱码  LED有三个也不能用了  （看引脚接到那个寄存器上面了 就可以知道）</li><li>和其他器件都不冲突 所有可以用来调试</li><li>可以用螺丝刀调节IOE 用来调节显示屏的亮度    位置：黄色跳线帽的下面</li></ul><h2 id="矩阵键盘"><a href="#矩阵键盘" class="headerlink" title="矩阵键盘"></a>矩阵键盘</h2><p>须知：逐行扫描该板子P1_5(连接到了步进电机 然后涉及到蜂鸣器  蜂鸣器会一直响)会出问题  所以采用逐列扫描</p><ul><li>p1_5-&gt;步进电机 -&gt;BZ -&gt;蜂鸣器                                 (引脚冲突)</li></ul><p>1、原理：</p><ul><li><p>在键盘中按键数量较多时，为了减少I/O口的占用，通常将按键排列成矩阵形式</p></li><li><p>采用逐行或逐列的“扫描”，就可以读出任何位置按键的状态</p></li></ul><p>2、数码管扫描（输出扫描）</p><ul><li>原理：显示第1位→显示第2位→显示第3位→……，然后快速循环这个过程，最终实现所有数码管同时显示的效果</li></ul><p>3、矩阵键盘扫描（输入扫描）</p><ul><li>原理：读取第1行(列)→读取第2行(列) →读取第3行(列) → ……，然后快速循环这个过程，最终实现所有按键同时检测的效果</li></ul><hr><p>以上两种扫描方式的共性：节省I/O口</p><hr><p>4、使用：</p><ul><li>P1寄存器  P1_7~P1_4    P1_3~P1_0     4*4   16个矩阵键盘控制</li></ul>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 51 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>加密密匙</title>
      <link href="/posts/b2ffbe6c.html"/>
      <url>/posts/b2ffbe6c.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="d0efc64646ab4f4bd4810e58b6efa3ad5c6ce3ea4cb57e2c5bb47e3fe74be951">bf77d8818ecf38b4f77c36bf1e782c18400938b11182f74fdc8049505448fdd03358737dcdbe8fdb4266cd68a1bd2d72dbf73d66ebb1288b086ac61fb16eb464e39e35bd76e0791366847e652a037f9bd84553b777dba89dcbac3ad2392b74203c2dde2b42e9adc25955d0000b7362b93718b95dec29696847937691d03565f8d2a984615fa4793c76fd452377ac29f40553dd561595a8f7b256f81d6630c6f1a239c4b9119df132c2a09e5d7216bd02538980f14e8a625b34dee3cada145e4eec1dc01b3cb1ce24c527f74264af1b0e3ab704c52d30ae8ba301e0321c5c72eef1173b2eb4e1488665272a89bcf57a57c002a4e003a99f727b26e52432e1fa1ef2462da994e00a9a0ef4493d4832788d09878cfb6bf8eeb83217717356a1d2f7ddc06e2e84533c370afa12b10e96ef1e4c90d08b8c096bfcb5e24644d31409f43eb1027c155729c53fdaf0a47341c169398bf468b075fd363d65b594d89f2f7712d6a24ed956967f2a973cb164ae93ba9a28a95992151b89ad31e871ef520d58e70eff1be290055654b61098530bb044f7899b1f53b2721d377ceb49fec605d60a14fae9ce7ce23e0269210f7cbfd91e5959ed22b3e60308cc8448f01830e7330d90cb901c05838aca16acf3c7cf0094edef56f53b37d4e54e42818a6ffb563b6768487b27d20042a9743d0fbcc25e35241e357127f650e06e949f0f2093447a1d2f169a410644711a9f8ec5a3111dd6a932e0863b062ec7c3cd4546e57bdeb77929ad1034c6c70fce17929528fdb80fb70bfe068d73892e3eb0abadab147f6657a0e9395609abb3d44eb09efbd4929d3d8b36ebb8e450578a2a12f7e5c3fc5bac59c91bcf936e8986919ba5ef1dcc01ff3ff4a4b07c532e8df0a4a3002185fc0527e142ad0bffcb35087d218464622103abda3c178d0621a32dd11e96a676d834119a49c4e7bd4f7f2fac3837b71d315835b3c95853581ec5dd642015771e0d63c1a2114c792f72c0a1f52e5b8ed94d7b212241a761c4d817e4b2875844663dc9cd969cbd4f1a357e79deed27c6d6e9300854dfec5026673d228ebb91df18fd3f3b7d8b6d44241a78e11a90776594e255dfb641925a74c90b42161ff931e2588d2624bf047cef2ad84f51cd1f0843992628fed4d6ff06ee106877f5e9949daf05e88e5bd1cdb5b52bf1db822b2d916ab29c62bbea7a676c773cbd2e381c04a956f95a38c7857e094250b2edece7385389492b902d022e7320d4ef2f6cf18632f9e4336ba000da9acbf9019c3e85edd81f98cbf1426a2ff1547d4f5a0e5bdb6ed0f57e46f70d75a5e637358b02748258f33b21018b67d37d4fe3064d5c416612630d0ba8efd33427c187dbd5a1d9446633ce3d0abb6f7a11a3d9196c56dfcdb2659dddfc7fddb3357d48b2e8d55e6394f2198d34ca5bc55d1493a9e4e50f0cc10877ab7d46f187c533dc02928f15a0544c77fbeb0a7cbf2623e1a2f1d3178b371438b97f2222e1ef944990d0030b8f879af88e7ce8f9ea51505f6f18790e24b573b5f574f75dafbc359f135a0cf3a7fa34f565553856dc55145a075a4aa61424a7e17e5f565ee9e8c5d7679fa8bda0c1e9e5921fc646119c2175319a12fcdb30cdba76b76552916173cc27b721d47cbb31720b643b738df9799cc258a03949ddbb8325e47777266a1f0c5a8d39b40773dd38beea42a8ed7cc3b1a90816ac020a1db300cdb0067c790386e7fb5144eb82c2be43b93c5fdbcebf7a7dbf9da0b4466e6c479679f3b9157ddf032731aa92f73d1456c6e9edd7cde2a0dcad4ba29430b98a5cc3c78cb2b4bbaf46596d1f8709a52bf02e992ef96e3303011be25cf75856e1b0b9ed516fc7aab2de1a8d46d69a795ed1f216c7ff127a1fb6e0f812ef05bbb66888a02512237200b29345c38dbf45d7cb3dba2867c0fa1dd977a45e963627630d967df92808d9e816094055cf315a293da08a2fe0bc94a4186bc5cbad6f657b3215c5805f9f4cfa10ae02e1f6360f0475b45ccb56d06e2d4ebc76356093ac797d1bc06b3e834abb170623f5099bc4da3b00deb4fe058183e2c3aa0bf76d0f26da1a6ef01f207198f8d60d3283ec977cb661139e44586d5fba95e0bb0a8a3f3ea2ff4be2e3defc2e70d9b965e1f7269c79fce1e71c4496049241d537fdce5773de070f5ab6d192f72c80e447fccc88130c3f89efd455f34681e43407dfbefe0e2013c9b4337d3754fa7937bd7f6e7ccbe32e2fb3efaec3abd9fdd54b89cd3d688f1432293255dbfcfb2e0b2be2ae81aec244aff5555de983ee547b20c080d15921faf173749c3179aa3fc4015cbfac73a104c3a0feafb392e36fa3eee9e3e953709c79e8817ff7e416465f4c9446ab32c1f9563bf09feab4a1c0e3f9700362caddc16865a4bd1de40fd0871392725c3b7a38c07e77b483d9c95f66a4b3f7392c9cadad32e22570e166d0ae9aa87891fc5d6c1c9de40beeffa45cf4860747ea107487982ec55a85d06dae796516a475e3e57c5b9bc0c6e5f3bacf9ec3665b6475eb33f70d36526cd4cff2623f314b1a04ba89a4fde8b4dfc3869a7e9cdf53</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> SF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> token </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yolov5环境配置</title>
      <link href="/posts/9811ab24.html"/>
      <url>/posts/9811ab24.html</url>
      
        <content type="html"><![CDATA[<h1 id="yolov5环境配置"><a href="#yolov5环境配置" class="headerlink" title="yolov5环境配置"></a>yolov5环境配置</h1><p>配置：AMD显卡 AMD CPU  ubuntu18.04 pytorch cpu版本 外网环境<br>要求：python版本 3.8及其以上  python3.6.9的版本出了问题</p><ul><li><p>1.0、准备工作：<br>yolov5下载包<br>git clone <a href="https://github.com/ultralytics/yolov5.git">https://github.com/ultralytics/yolov5.git</a></p></li><li><p>2.0、环境配置：<br>conda create -n yolov5 python==3.8<br>conda activate yolov5</p></li></ul><h2 id="安装pytorch"><a href="#安装pytorch" class="headerlink" title="安装pytorch"></a>安装pytorch</h2><p>Stable<br>Linux<br>conda<br>Python</p><p>cpu</p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install pytorch torchvision torchaudio cpuonly -c pytorch</span><br></pre></td></tr></table></figure><ul><li>3.0、检查配置</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">import torch</span><br><span class="line">torch.__version__</span><br><span class="line">输出版本号 证明安装成功</span><br></pre></td></tr></table></figure><h2 id="安装python可视化"><a href="#安装python可视化" class="headerlink" title="安装python可视化"></a>安装python可视化</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install ipython</span><br></pre></td></tr></table></figure><ul><li>4.0、继续</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd  yolov5-master</span><br><span class="line">ls</span><br><span class="line">确保有.txt文件夹</span><br><span class="line">pip3 install -U -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yolov5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu中图片webp格式转为png格式</title>
      <link href="/posts/929705e8.html"/>
      <url>/posts/929705e8.html</url>
      
        <content type="html"><![CDATA[<h1 id="ubuntu中webp转为png"><a href="#ubuntu中webp转为png" class="headerlink" title="ubuntu中webp转为png"></a>ubuntu中webp转为png</h1><p>配置：ubuntu18.04  图片webp格式 转换为png格式</p><p>第一步：</p><ul><li>先在终端中使用如下命令安装 WebP 工具：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install webp</span><br></pre></td></tr></table></figure><p>第二步：</p><ul><li>可以使用如下命令将 JPG 或 PNG 转换为 WEBP：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cwebp -q [图像质量] [JPEG/PNG文件名] -o [WebP文件名]</span><br></pre></td></tr></table></figure><ul><li>使用如下命令或将 WEBP 图片转换成 PNG：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dwebp [WebP文件名] -o [PNG文件名]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> png </tag>
            
            <tag> webp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python的学习</title>
      <link href="/posts/baed1cc7.html"/>
      <url>/posts/baed1cc7.html</url>
      
        <content type="html"><![CDATA[<h1 id="python中try的用法"><a href="#python中try的用法" class="headerlink" title="python中try的用法"></a>python中try的用法</h1><ul><li><p>把你要测试的代码放到try  except之间  </p></li><li><p>如果代码正确 执行try里面的内容 和else里面的内容 执行 finnaly里面的内容 </p></li><li><p>如果代码错误，执行except里面的内容  执行finnaly里面的内容 </p></li><li><p>这样看来finally里面的内容完全可以由程序的下面代码直接写和执行</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\# except NameError:  出现了未定义的变量 value = 8/b   b未定义</span><br><span class="line"></span><br><span class="line">\# except ZeroDivisionError:   zero 除数为0了</span><br></pre></td></tr></table></figure><h2 id="1、正常写法"><a href="#1、正常写法" class="headerlink" title="1、正常写法"></a>1、正常写法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">    value = 8/4</span><br><span class="line">    print(value)</span><br><span class="line">except:</span><br><span class="line">    print(&quot;error&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;正常&quot;)</span><br><span class="line">finally:</span><br><span class="line">    print(&quot;一切代码执行完毕&quot;)</span><br></pre></td></tr></table></figure><h2 id="2、异常测试"><a href="#2、异常测试" class="headerlink" title="2、异常测试"></a>2、异常测试</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">    value = 8/0</span><br><span class="line">    print(value)</span><br><span class="line">except ZeroDivisionError:</span><br><span class="line">    print(&quot;ZeroDivisionErro&quot;)</span><br><span class="line">except NameError:</span><br><span class="line">    print(&quot;NameError&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;正常&quot;)</span><br></pre></td></tr></table></figure><h2 id="3、打印异常信息"><a href="#3、打印异常信息" class="headerlink" title="3、打印异常信息"></a>3、打印异常信息</h2><ul><li>打印异常信息  发生在代码的第几行  细节信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import traceback</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">    value = 8/0</span><br><span class="line">    print(value)</span><br><span class="line">except:</span><br><span class="line">    info = traceback.format_exc()</span><br><span class="line">    print(info)</span><br><span class="line">    print(type(info))</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h1 id="python中格式化字符串的写法"><a href="#python中格式化字符串的写法" class="headerlink" title="python中格式化字符串的写法"></a>python中格式化字符串的写法</h1><p># 格式化字符串</p><p>“””</p><p>​    方式1</p><p>​    print(“姓名为:”+self.name+”id为:”+self.id)</p><p>​    方式2  format方法</p><p>​    print(“姓名为:{0},id为:{1:.2f}”.format(self.name,self.id))</p><p>​    方式3 </p><p>​    print(f”月薪为:{self.monthly_salary:.2f}”)</p><p>​    </p><p>​    建议选用方式3和方式2   </p><p>​    {1:.2f}   </p><p>.2f保留两位小数  中间用:(冒号)分割</p><p>“””</p><p>“””</p><p>“””</p><h1 id="python类的用法-一、类的创建"><a href="#python类的用法-一、类的创建" class="headerlink" title="python类的用法#一、类的创建"></a>python类的用法#一、类的创建</h1><p>#外部不能访问私有属性和私有方法，自然Cat.__cid是会报错的</p><p>class Cat:</p><p>​    #属性</p><p>​    color = ‘black’</p><p>​    #私有属性</p><p>​    __cld = ‘1’</p><p>​    #构造方法</p><p>​    def <strong>init</strong>(<em>self</em>,<em>name</em>):</p><p>​        <em>self</em>.name = <em>name</em></p><p>​    #自定义方法</p><p>​    def eat(<em>self</em>,<em>food</em>):</p><p>​        <em>self</em>.food = <em>food</em></p><p>​        print(<em>self</em>.name,’正在吃’ + <em>food</em>)</p><p>​    #私有方法</p><p>​    def __run(<em>self</em>):</p><p>​        pass</p><p>print(‘color —&gt;’,Cat.color)</p><p>#二、对象</p><p>#创建对象</p><p>c=Cat(‘Tom’)</p><p>#访问属性</p><p>print(‘name—&gt;’,c.name)</p><p>print(‘color—&gt;’,c.color)</p><p>#调用方法</p><p>c.eat(‘鱼’)</p><p>#疑惑</p><p># 同样对象 c 不能访问私有属性 <strong>cid 及调用私有方法 </strong>run，</p><p># 那我们会有这样一个疑问，这个私有属性和方法难道定义了却不能用吗？</p><p>#      在内部私有属性和方法是可以被访问和调用的。</p><p>#self.speed是有问题的</p><p>class Cat1:</p><p>​    __cld = ‘1’</p><p>​    def __run(<em>self</em>,<em>speed</em>):</p><p>​        print(‘<strong>cld是’+<em>self</em>.</strong>cld,’以’+<em>speed</em>+’的速度奔跑’)</p><p>​    def run(<em>self</em>,<em>speed</em>):</p><p>​        <em>self</em>.__run(<em>speed</em>)</p><p>c1 = Cat1()</p><p>c1.run(‘50迈’)</p><p>#继承 支持多继承 语法格式</p><p>#class 基类(子类1,子类2):</p><p>#    pass</p><p>#for example</p><p>class PersianCat(Cat):</p><p>​    def <strong>init</strong>(<em>self</em>,<em>name</em>):</p><p>​        <em>self</em>.name = <em>name</em></p><p>​    def eat(<em>self</em>,<em>food</em>):</p><p>​        print(<em>self</em>.name,’正在吃’+<em>food</em>)</p><p>​        </p><p>#加菲猫类</p><p>class GarfieldCat(Cat):</p><p>​    def <strong>init</strong>(<em>self</em>, <em>name</em>):</p><p>​        <em>self</em>.name = <em>name</em></p><p>​    def run(<em>self</em>, <em>speed</em>):</p><p>​        print(<em>self</em>.name, ‘正在以’+<em>speed</em>+’的速度奔跑’)</p><p>#单继承</p><p>class SingleCat(PersianCat):</p><p>​    pass</p><p>#多继承</p><p>class MultiCat(PersianCat,GarfieldCat):</p><p>​    pass</p><p>sc = SingleCat(‘波斯猫1号’)</p><p>sc.eat(‘鱼’)</p><p>mc = MultiCat(‘波斯加菲猫1号’)</p><p>mc.eat(‘鱼’)</p><p>mc.run(‘50迈’)</p><p>#子类重写父类方法</p><p>class SingleCat(PersianCat):</p><p>​    def eat(<em>self</em>,<em>food</em>):</p><p>​        print(<em>self</em>.name,’正在吃’+<em>food</em>,’十分钟’,<em>self</em>.name+’吃饱了’)</p><p>sc = SingleCat(‘波斯猫1号’)</p><p>sc.eat(‘鱼’)</p><p>部分源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">~~~</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 1、正常写法</span></span><br><span class="line"></span><br><span class="line">~~~python</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Modelplant</span>:  </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,sex</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.sex = sex</span><br><span class="line">        self.num_eyes = <span class="number">2</span></span><br><span class="line">               </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">breath</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(self.name+<span class="string">&quot;在呼吸&quot;</span>)  </span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">poop</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(self.name+<span class="string">&quot;在拉屎&quot;</span>) </span><br><span class="line">        </span><br><span class="line"><span class="comment">#    如果子类没有构造函数 这个实例就会调用父类的构造函数  实例也可以调用父类的方法 如果父类和子类都有这个 那么调用子类 如果没有调用父类</span></span><br><span class="line"><span class="comment">#    cat = Cat(&#x27;Joji&#x27;,18)</span></span><br><span class="line"><span class="comment">#    cat.poop()</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Human</span>(<span class="title class_ inherited__">Modelplant</span>):</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name, sex)</span><br><span class="line">        self.has_tail = <span class="literal">False</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(self.name+<span class="string">&quot;在阅读&quot;</span>)</span><br><span class="line">         </span><br><span class="line">        </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span>(<span class="title class_ inherited__">Modelplant</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sex</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name, sex)</span><br><span class="line">        self.has_tail = <span class="literal">True</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">scratch_soft</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(self.name+<span class="string">&quot;在抓沙发&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    cat = Cat(<span class="string">&quot;Jilo&quot;</span>,<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(cat.name)</span><br><span class="line">    cat.poop()</span><br></pre></td></tr></table></figure><h2 id="2、class继承中构造函数的写法"><a href="#2、class继承中构造函数的写法" class="headerlink" title="2、class继承中构造函数的写法"></a>2、class继承中构造函数的写法</h2><p>源码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Worker</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,<span class="built_in">id</span></span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.<span class="built_in">id</span> = <span class="built_in">id</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">print_info</span>(<span class="params">self</span>):   </span><br><span class="line">      </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;姓名为:<span class="subst">&#123;self.name&#125;</span> id为:<span class="subst">&#123;self.<span class="built_in">id</span>&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;姓名为:&#123;0&#125;,id为:&#123;1&#125;&quot;</span>.<span class="built_in">format</span>(self.name,self.<span class="built_in">id</span>))</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calculate_monthly_pay</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FullTimeEmployee</span>(<span class="title class_ inherited__">Worker</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, <span class="built_in">id</span>,monthly_salary</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name, <span class="built_in">id</span>)</span><br><span class="line">        self.monthly_salary = monthly_salary</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calculate_monthly_pay</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;月薪为:<span class="subst">&#123;self.monthly_salary:<span class="number">.2</span>f&#125;</span>&quot;</span>)</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PartTimeEmployee</span>(<span class="title class_ inherited__">Worker</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, <span class="built_in">id</span>,daily_salary,work_days</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name, <span class="built_in">id</span>)</span><br><span class="line">        self.daily_salary = daily_salary</span><br><span class="line">        self.work_days = work_days</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calculate_monthly_pay</span>(<span class="params">self</span>):</span><br><span class="line">        money = self.work_days * self.daily_salary</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;工资为:<span class="subst">&#123;money&#125;</span>&quot;</span>)</span><br><span class="line">   </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    full = FullTimeEmployee(<span class="string">&quot;小明&quot;</span>,<span class="number">25</span>,<span class="number">3500</span>)</span><br><span class="line">    full.print_info()</span><br><span class="line">    </span><br><span class="line">    full.calculate_monthly_pay()</span><br><span class="line">    </span><br><span class="line">    part = PartTimeEmployee(<span class="string">&quot;小张&quot;</span>,<span class="number">36</span>,<span class="number">25</span>,<span class="number">22</span>)</span><br><span class="line">    part.print_info()</span><br><span class="line">    </span><br><span class="line">    part.calculate_monthly_pay()</span><br></pre></td></tr></table></figure><p>其中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, <span class="built_in">id</span>,daily_salary,work_days</span>):</span><br><span class="line">       <span class="built_in">super</span>().__init__(name, <span class="built_in">id</span>)</span><br></pre></td></tr></table></figure><p>可以使用父类中的构造 并且自己可以自定义属性</p><h2 id="3、self理解介绍"><a href="#3、self理解介绍" class="headerlink" title="3、self理解介绍:"></a>3、self理解介绍:</h2><p>self指的是类本身  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">__init__</span><br><span class="line">构造的是私有属性 </span><br></pre></td></tr></table></figure><p> 构造函数  在其中定义的是类的私有属性 属于类本身 </p><p>要想在类方法中调用该私有属性  必须传入self</p><p>def read(self)</p><p>才可以使用属性</p><h1 id="python中sys模块的常用函数"><a href="#python中sys模块的常用函数" class="headerlink" title="python中sys模块的常用函数"></a>python中sys模块的常用函数</h1><p>部分源码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Hi&#x27;</span>)</span><br><span class="line">    sys.exit()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;JOhn&#x27;</span>)</span><br><span class="line"><span class="comment">#argv 返回传递给 Python 脚本的命令行参数列表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    args = sys.argv</span><br><span class="line">    <span class="built_in">print</span>(args)</span><br><span class="line">    <span class="built_in">print</span>(args[<span class="number">1</span>])</span><br><span class="line">    <span class="built_in">print</span>(sys.version)</span><br><span class="line">    <span class="comment"># print(sys.winver)</span></span><br><span class="line">    <span class="built_in">print</span>(sys.platform)</span><br><span class="line">    <span class="built_in">print</span>(sys.path)</span><br><span class="line">    <span class="built_in">print</span>(sys.maxsize)</span><br><span class="line">    <span class="built_in">print</span>(sys.maxunicode)</span><br><span class="line">    <span class="built_in">print</span>(sys.copyright)</span><br><span class="line">    <span class="built_in">print</span>(sys.modules)</span><br><span class="line">    <span class="built_in">print</span>(sys.byteorder)</span><br><span class="line">    <span class="built_in">print</span>(sys.executable)</span><br><span class="line">    main()</span><br><span class="line"></span><br><span class="line"><span class="comment">#退出当前程序。看下示例：exit()</span></span><br></pre></td></tr></table></figure><h2 id="1、sys-argv-参数个数"><a href="#1、sys-argv-参数个数" class="headerlink" title="1、sys.argv   参数个数"></a>1、sys.argv   参数个数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">impory sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span></span><br><span class="line">    args = sys.argv</span><br><span class="line">    <span class="built_in">print</span>(args)</span><br><span class="line">    <span class="built_in">print</span>(args[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">上面文件名为：test.py，我们在控制台使用命令：python test.py <span class="number">123</span> abc 执行一下，执行结果如下：</span><br><span class="line"></span><br><span class="line">[<span class="string">&#x27;test.py&#x27;</span>, <span class="string">&#x27;123&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>]</span><br><span class="line"><span class="number">123</span></span><br></pre></td></tr></table></figure><h2 id="2、sys-exit-退出函数的使用"><a href="#2、sys-exit-退出函数的使用" class="headerlink" title="2、sys.exit()退出函数的使用"></a>2、sys.exit()退出函数的使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Hi&#x27;</span>)</span><br><span class="line">sys.exit()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Jhon&#x27;</span>)</span><br><span class="line">-------------</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Jhon&#x27;</span>)不会执行到</span><br></pre></td></tr></table></figure><h1 id="python中random模块的常用函数"><a href="#python中random模块的常用函数" class="headerlink" title="python中random模块的常用函数"></a>python中random模块的常用函数</h1><p>源码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment">#返回的是【0.0，1.0】之间的一个随机浮点数</span></span><br><span class="line"><span class="built_in">print</span>(random.random())</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dir</span>(math))</span><br><span class="line"></span><br><span class="line"><span class="comment">#uniform(a,b) 返回 [a, b) 范围内的一个随机浮点数。看下示例：</span></span><br><span class="line"><span class="built_in">print</span>(random.uniform(<span class="number">1.1</span>,<span class="number">9.9</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#randint(a,b) 返回 [a, b] 范围内的一个随机整数。看下示例：</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(random.randint(<span class="number">1</span>,<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#randrange(start,stop,[,step])  返回 [start, stop) 范围内步长为 step 的一个随机整数。看下示例：</span></span><br><span class="line"><span class="built_in">print</span>(random.randrange(<span class="number">1</span>,<span class="number">10</span>))</span><br><span class="line"><span class="built_in">print</span>(random.randrange(<span class="number">1</span>,<span class="number">10</span>,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#choice(seq)  从非空序列 seq 返回一个随机元素。看下示例：</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(random.choice(<span class="string">&#x27;123456&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(random.choice(<span class="string">&#x27;abcdef&#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#shuffle(x,random) 将序列 x 随机打乱位置。看下示例：</span></span><br><span class="line">l = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">random.shuffle(l)</span><br><span class="line"><span class="built_in">print</span>(l)</span><br><span class="line"></span><br><span class="line"><span class="comment">#sample(population,k) 返回从总体序列或集合中选择的唯一元素的 k 长度列表，用于无重复的随机抽样。看下示例：</span></span><br><span class="line">l = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line"><span class="built_in">print</span>(random.sample(l,<span class="number">3</span>))</span><br></pre></td></tr></table></figure><h1 id="python中包和模块的使用"><a href="#python中包和模块的使用" class="headerlink" title="python中包和模块的使用"></a>python中包和模块的使用</h1><p>部分源码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入a模块</span></span><br><span class="line"><span class="keyword">import</span> package.a</span><br><span class="line"><span class="keyword">from</span> package <span class="keyword">import</span> a</span><br><span class="line">a.a()</span><br><span class="line"><span class="keyword">import</span> package.b</span><br><span class="line"><span class="keyword">from</span> package <span class="keyword">import</span> b</span><br><span class="line">b.b()</span><br><span class="line"><span class="keyword">import</span> package1.c </span><br><span class="line"><span class="keyword">import</span> package1.d</span><br><span class="line"><span class="keyword">from</span> package1 <span class="keyword">import</span> c,d</span><br><span class="line">c.c()</span><br><span class="line">d.d()</span><br><span class="line"><span class="comment">#从package1 的d模块导入d函数</span></span><br><span class="line"><span class="keyword">from</span> package1.d <span class="keyword">import</span> d</span><br><span class="line"><span class="comment">#调用函数d()</span></span><br><span class="line">d()</span><br></pre></td></tr></table></figure><ul><li><p>Python 中一个以 .py 结尾的文件就是一个模块，</p></li><li><p>简单来说就是 Python3.3 之前的版本，<strong>init</strong>.py 是包的标识，是必须要有的，之后的版本可以没有。</p></li></ul><p>下面为详细描述:</p><p>Python 中一个以 .py 结尾的文件就是一个模块，</p><p>模块中定义了变量、函数等来实现一些类似的功能。Python 有很多自带的模块（标准库）和第三方模块，一个模块可以被其他模块引用，实现了代码的复用性。</p><hr><p>包是存放模块的文件夹，包中包含 <strong>init</strong>.py 和其他模块，<strong>init</strong>.py 可为空也可定义属性和方法，在 Python3.3 之前的版本，一个文件夹中只有包含 <strong>init</strong>.py，其他程序才能从该文件夹引入相应的模块、函数等，之后的版本没有 <strong>init</strong>.py 也能正常导入，</p><p>简单来说就是 Python3.3 之前的版本，<strong>init</strong>.py 是包的标识，是必须要有的，之后的版本可以没有。</p><h1 id="python中命令空间的使用"><a href="#python中命令空间的使用" class="headerlink" title="python中命令空间的使用"></a>python中命令空间的使用</h1><p>源码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#全局作用域</span></span><br><span class="line"></span><br><span class="line">g = <span class="number">1</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">outer</span>():</span><br><span class="line">    <span class="comment">#全局变量</span></span><br><span class="line">    <span class="keyword">global</span> g</span><br><span class="line">    g = g -<span class="number">1</span></span><br><span class="line">    <span class="comment">#嵌套作用域</span></span><br><span class="line">    e = <span class="number">2</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>():</span><br><span class="line">        <span class="comment">#局部作用域</span></span><br><span class="line">        i = <span class="number">3</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;g--&gt;&#x27;</span>,g)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#不使用nonlocal</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">outer</span>():</span><br><span class="line">    d = <span class="number">1</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>():</span><br><span class="line">        d = <span class="number">2</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;inner--&gt;&#x27;</span>,d)</span><br><span class="line">    inner()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;outer--&gt;&#x27;</span>,d)</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用时机</span></span><br><span class="line"><span class="comment">#如果需要修改嵌套作用域中的变量，则需用到 nonlocal 关键字。</span></span><br><span class="line"><span class="comment"># global   nonlocal</span></span><br><span class="line"><span class="comment">#使用nonloacl</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">outer</span>():</span><br><span class="line">    d = <span class="number">1</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>():</span><br><span class="line">        <span class="comment">#嵌套作用域</span></span><br><span class="line">        <span class="keyword">nonlocal</span> d</span><br><span class="line">        d = <span class="number">2</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;inner--&gt;&#x27;</span>,d)</span><br><span class="line">    inner()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;outer--&gt;&#x27;</span>,d)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="1、global-amp-nonlocal"><a href="#1、global-amp-nonlocal" class="headerlink" title="1、global &amp; nonlocal"></a>1、global &amp; nonlocal</h2><ul><li>全局变量：定义在函数外部的变量。</li><li>局部变量：定义在函数内部的变量。</li></ul><h3 id="1、global的使用"><a href="#1、global的使用" class="headerlink" title="1、global的使用"></a>1、global的使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局变量</span></span><br><span class="line">d = <span class="number">0</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sub</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="comment"># d 在这为局部变量</span></span><br><span class="line">    d = a - b</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;函数内 : &#x27;</span>, d)</span><br><span class="line"></span><br><span class="line">sub(<span class="number">9</span>, <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;函数外 : &#x27;</span>, d)</span><br></pre></td></tr></table></figure><ul><li>当内部作用域想要修改外部作用域的变量时，就要用到 <code>global</code> 和 <code>nonlocal</code> 关键字了，下面通过具体示例来了解一下。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局变量</span></span><br><span class="line">d = <span class="number">0</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sub</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="comment"># 使用 global 声明 d 为全局变量</span></span><br><span class="line">    <span class="keyword">global</span> d</span><br><span class="line">    d = a - b</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;函数内 : &#x27;</span>, d)</span><br><span class="line"></span><br><span class="line">sub(<span class="number">9</span>, <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;函数外 : &#x27;</span>, d)</span><br></pre></td></tr></table></figure><h3 id="1-2、nonlocal的使用"><a href="#1-2、nonlocal的使用" class="headerlink" title="1.2、nonlocal的使用"></a>1.2、nonlocal的使用</h3><ul><li>如果需要修改嵌套作用域中的变量，则需用到 <code>nonlocal</code> 关键字。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">outer</span>():</span><br><span class="line">    d = <span class="number">1</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>():</span><br><span class="line">        <span class="keyword">nonlocal</span> d</span><br><span class="line">        d = <span class="number">2</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;inner：&#x27;</span>, d)</span><br><span class="line">    inner()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;outer：&#x27;</span>, d)</span><br><span class="line">outer()</span><br></pre></td></tr></table></figure><h1 id="python中序列结构的学习"><a href="#python中序列结构的学习" class="headerlink" title="python中序列结构的学习"></a>python中序列结构的学习</h1><p># 序列结构有  字符串 列表 元组    都可以进行切片操作  可以进行序列结构的基本操作：索引、切片、加、乘、检查成员。</p><p># 元组 () 保存不可修改的内容   列表相当于数组 [] 但是可以保存多种类型  可以append</p><p>#元组只能一次删除完全   然后重新赋值      列表可以删除一个    </p><p># 列表转化为元组  </p><p>源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 序列结构有  字符串 列表 元组    都可以进行切片操作  可以进行序列结构的基本操作：索引、切片、加、乘、检查成员。</span></span><br><span class="line"><span class="comment"># 元组 () 保存不可修改的内容   列表相当于数组 [] 但是可以保存多种类型  可以append</span></span><br><span class="line"><span class="comment">#元组只能一次删除完全   然后重新赋值      列表可以删除一个    </span></span><br><span class="line"><span class="comment"># 列表转化为元组  </span></span><br><span class="line">l = [<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;f&#x27;</span>]</span><br><span class="line">t = <span class="built_in">tuple</span>(l)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;t----&gt;&#x27;</span>,t)   <span class="comment"># 变成了小括号的元组</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字典 dict   &#123;&#125;  键值对(key:value)    集合  键  没有值  即只存储key &#123;&#125; set() 值不可重复  无序 自动过滤重复的内容</span></span><br><span class="line">s = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;</span><br><span class="line">s = <span class="built_in">set</span>([<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>])</span><br><span class="line">s = <span class="built_in">set</span>()</span><br><span class="line"><span class="comment"># str = &#x27;python&#x27;</span></span><br><span class="line"><span class="comment"># for s in str:</span></span><br><span class="line"><span class="comment">#     print(s)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sum = 0</span></span><br><span class="line"><span class="comment"># m = 10</span></span><br><span class="line"><span class="comment"># while m &gt; 0:</span></span><br><span class="line"><span class="comment">#     sum = sum + m</span></span><br><span class="line"><span class="comment">#     m = m-1</span></span><br><span class="line"><span class="comment"># print(sum)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># st = &#x27;python&#x27;</span></span><br><span class="line"><span class="comment"># for s in st:</span></span><br><span class="line"><span class="comment">#     if s == &#x27;0&#x27;:</span></span><br><span class="line"><span class="comment">#         break</span></span><br><span class="line"><span class="comment">#     print(s)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入输出</span></span><br><span class="line">name = <span class="built_in">input</span>(<span class="string">&quot;请输入您的名字: &quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line"></span><br><span class="line"><span class="comment">#缩进</span></span><br><span class="line"><span class="keyword">if</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#多行</span></span><br><span class="line">a = <span class="number">128</span></span><br><span class="line">b = <span class="number">25</span></span><br><span class="line">d = <span class="number">12</span></span><br><span class="line">c = a + \</span><br><span class="line">    b - \</span><br><span class="line">    d</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"><span class="comment">#注释</span></span><br><span class="line"><span class="comment">#基本运算</span></span><br><span class="line"><span class="built_in">abs</span>(a)<span class="comment">#a的绝对值</span></span><br><span class="line"><span class="built_in">int</span>(a)<span class="comment">#强制类型转换</span></span><br><span class="line"><span class="built_in">float</span>(a)<span class="comment">#强制类型转换</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#数学函数</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line">math.sqrt(<span class="number">1024</span>)</span><br><span class="line"><span class="comment">#随机生成随机数</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="built_in">print</span>(random.random())</span><br><span class="line"><span class="comment">#随机生成一个x和y范围的实数</span></span><br><span class="line"><span class="built_in">print</span>(random.uniform(<span class="number">5</span>,<span class="number">8</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#切片</span></span><br><span class="line">s = <span class="string">&#x27;python&#x27;</span></span><br><span class="line"><span class="comment">#访问第一个字符</span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">0</span>])</span><br><span class="line"><span class="comment">#访问yt</span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">1</span>:<span class="number">3</span>])</span><br><span class="line"><span class="comment">#访问pyt</span></span><br><span class="line"><span class="built_in">print</span>(s[:<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#访问hon</span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">3</span>:])</span><br><span class="line"><span class="comment"># 其实最后一个数字是6 也就是6取不到 </span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">3</span>:<span class="number">6</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#单个字符 ord()函数返回单个字符的编码</span></span><br><span class="line">s = <span class="string">&#x27;A&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">ord</span>(s))</span><br><span class="line"><span class="comment">#chr()函数转化成相应的字符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">chr</span>(<span class="number">65</span>))</span><br><span class="line"></span><br><span class="line">s1 = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">s2 = <span class="string">&#x27;python&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;s1+s2--&gt;&#x27;</span>,s1+s2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;s1*2--&gt;&#x27;</span>,s1*<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;s1[2]--&gt;&#x27;</span>,s1[<span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;s1[:2]--&gt;&#x27;</span>,s1[:<span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&quot;H&quot; in s1--&gt;&#x27;</span>,<span class="string">&#x27;H&#x27;</span> <span class="keyword">in</span> s1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&quot;H&quot; not in s2--&gt;&#x27;</span>,<span class="string">&#x27;H&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> s2)</span><br><span class="line"></span><br><span class="line"><span class="comment">#格式化 %s 字符串 %d 整数 %f 浮点数</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello %s&#x27;</span> % <span class="string">&#x27;python&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello %s&quot;</span>,<span class="string">&quot;python&quot;</span>)</span><br><span class="line"><span class="comment">#format()</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;0&#125; &#123;1&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;hello&#x27;</span>,<span class="string">&#x27;python&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#一、序列</span></span><br><span class="line"><span class="comment">#索引 0 1 2 3 4 5 6</span></span><br><span class="line"><span class="comment">#索引 -7 -6 -5 -4 -3 -2 -1</span></span><br><span class="line">s3 = <span class="string">&#x27;python&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;s3[-1]--&gt;&#x27;</span>,s3[-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;s3[4]--&gt;&#x27;</span>,s3[<span class="number">4</span>])</span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;Python&#x27;</span></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">    <span class="keyword">if</span> s == <span class="string">&#x27;o&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(s)</span><br><span class="line"></span><br><span class="line">s4 = <span class="string">&#x27;acbdef&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;s4-&gt;max&quot;</span>,<span class="built_in">max</span>(s4))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;排序&#x27;</span>,<span class="built_in">sorted</span>(s4))</span><br><span class="line"></span><br><span class="line"><span class="comment">#列表 可以放任何类型的数组 里面也是序列的结构 切片操作加减乘除 可变数值  ----》序列结构</span></span><br><span class="line"></span><br><span class="line">l = [<span class="string">&#x27;abcf&#x27;</span>,<span class="number">15</span>,<span class="number">2.3</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;l[0]--&gt;&#x27;</span>,l[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;l[:2]--&gt;&#x27;</span>,l[:<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#增删改查、</span></span><br><span class="line">l.append(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">l[<span class="number">1</span>] = <span class="number">54</span></span><br><span class="line"><span class="keyword">del</span> l[<span class="number">1</span>]</span><br><span class="line"><span class="comment">#count</span></span><br><span class="line">l = [<span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;d的次数&#x27;</span>,l.count(<span class="string">&#x27;d&#x27;</span>))</span><br><span class="line"><span class="comment">#index 查找元素首次出现的位置</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;l.index(&quot;d&quot;)&#x27;</span>,l.index(<span class="string">&quot;d&quot;</span>))</span><br><span class="line"><span class="comment">#remove 移除列表中某个值的首次匹配项，使用如下所示：</span></span><br><span class="line">l.remove(<span class="string">&#x27;d&#x27;</span>)</span><br><span class="line"><span class="comment">#④ sort()对列表中元素进行排序，使用如下所示：</span></span><br><span class="line">l.sort()</span><br><span class="line"><span class="built_in">print</span>(l)</span><br><span class="line"><span class="comment">#copy 复制列表，使用如下所示</span></span><br><span class="line">lc = l.copy()</span><br><span class="line"><span class="built_in">print</span>(lc)</span><br><span class="line"></span><br><span class="line"><span class="comment">#二、元祖 不可以变的列表（不变数组）             ------》序列结构</span></span><br><span class="line"><span class="comment">#列表写法</span></span><br><span class="line">ld = (<span class="number">1024</span>,<span class="number">2.5</span>,<span class="string">&#x27;python&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;ld[0] = &#x27;</span>,ld[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;ld[:2] = &#x27;</span>,ld[:<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改：不可以修改 但是可以重新在赋值</span></span><br><span class="line">t = (<span class="number">1024</span>, <span class="number">0.5</span>, <span class="string">&#x27;Python&#x27;</span>)</span><br><span class="line">t = (<span class="number">1024</span>, <span class="number">0.5</span>, <span class="string">&#x27;Python&#x27;</span>, <span class="string">&#x27;Hello&#x27;</span>,<span class="string">&#x27;谢谢&#x27;</span>)</span><br><span class="line"><span class="comment">#删除：元组中的元素不能被删除，我们只能删除整个元组，如下所示：</span></span><br><span class="line"><span class="keyword">del</span> ld</span><br><span class="line"></span><br><span class="line"><span class="comment">#③ tuple() 将列表转换为元组，使用如下所示：</span></span><br><span class="line">lc = <span class="built_in">tuple</span>(l)</span><br><span class="line"></span><br><span class="line"><span class="comment">#字典 key:value 键值对</span></span><br><span class="line"><span class="comment">#创建方式1   标准</span></span><br><span class="line">d = &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;小米&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">23</span>&#125;</span><br><span class="line"><span class="comment">#创建方式2 这个之间时,不是：列表转换为字典</span></span><br><span class="line">le = [(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;小明&#x27;</span>),(<span class="string">&#x27;age&#x27;</span>,<span class="number">250</span>)]</span><br><span class="line">d = <span class="built_in">dict</span>(le)</span><br><span class="line"><span class="comment">#方式3</span></span><br><span class="line">d = <span class="built_in">dict</span>(name=<span class="string">&#x27;小只&#x27;</span>,age=<span class="string">&#x27;19&#x27;</span>)</span><br><span class="line"><span class="comment">#空字典</span></span><br><span class="line">d =<span class="built_in">dict</span>()</span><br><span class="line">d = &#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找</span></span><br><span class="line">d = <span class="built_in">dict</span>(name=<span class="string">&#x27;xiao&#x27;</span>,age=<span class="string">&#x27;25&#x27;</span>)</span><br><span class="line"><span class="comment">#方式1</span></span><br><span class="line"><span class="built_in">print</span>(d[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line"><span class="comment">#方式2</span></span><br><span class="line"><span class="built_in">print</span>(d.get(<span class="string">&#x27;name&#x27;</span>))</span><br><span class="line"><span class="comment">#修改 清空</span></span><br><span class="line"></span><br><span class="line">d.clear()</span><br><span class="line"><span class="built_in">print</span>(d)</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取字典的长度</span></span><br><span class="line">d = <span class="built_in">dict</span>(name=<span class="string">&#x27;xiao&#x27;</span>,age=<span class="string">&#x27;25&#x27;</span>)</span><br><span class="line"><span class="built_in">len</span>(d)</span><br><span class="line"></span><br><span class="line"><span class="comment">#三、集合使用花括号 &#123;&#125; 或者 set() 函数创建，如果创建空集合只能使用 set() 函数，以创建集合 s 为例，如下所示：</span></span><br><span class="line">s = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;</span><br><span class="line"><span class="comment">#使用set函数</span></span><br><span class="line">s = <span class="built_in">set</span>([<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span><span class="string">&#x27;c&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建空集合</span></span><br><span class="line">s = <span class="built_in">set</span>()</span><br><span class="line"><span class="comment">#集合中重复的元素会被自动过滤掉，如下所示：</span></span><br><span class="line"></span><br><span class="line">s = &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;c&#x27;</span>&#125;</span><br><span class="line">s= &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;b&#x27;</span>&#125;</span><br><span class="line"><span class="comment">#添加元素可以使用 add 或 update 方法，如果元素已经存在，则不进行操作，如下所示：</span></span><br><span class="line">s.add(<span class="string">&#x27;e&#x27;</span>)</span><br><span class="line">s.update(<span class="string">&#x27;e&#x27;</span>)</span><br><span class="line"><span class="comment">#删除</span></span><br><span class="line">s.remove(<span class="string">&#x27;e&#x27;</span>)</span><br><span class="line"><span class="comment">#清空</span></span><br><span class="line">s.clear()</span><br><span class="line"><span class="comment">#长度</span></span><br><span class="line"><span class="built_in">len</span>(s)</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;Python&#x27;</span></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">    <span class="keyword">if</span> s == <span class="string">&#x27;o&#x27;</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(s)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h1 id="python中迭代器、装饰器的学习"><a href="#python中迭代器、装饰器的学习" class="headerlink" title="python中迭代器、装饰器的学习"></a>python中迭代器、装饰器的学习</h1><h2 id="1、迭代器源码如下"><a href="#1、迭代器源码如下" class="headerlink" title="1、迭代器源码如下:"></a>1、迭代器源码如下:</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#自己写一个迭代器</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Iterable</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(<span class="string">&#x27;abc&#x27;</span>, Iterable))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;, Iterable))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(<span class="number">1024</span>, Iterable))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&#x27;Hello&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line"><span class="comment">#可迭代对象需具有 __iter__() 方法，它们均可使用 for 循环遍历，</span></span><br><span class="line"><span class="comment"># 我们可以使用 isinstance() 方法来判断一个对象是否为可迭代对象，看下示例：</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyIterator</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.s = <span class="string">&#x27;程序之间&#x27;</span></span><br><span class="line">        self.i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__iter__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__next__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.i &lt; <span class="number">4</span>:</span><br><span class="line">            n = self.s[self.i]</span><br><span class="line">            self.i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> StopIteration</span><br><span class="line"></span><br><span class="line">mi = <span class="built_in">iter</span>(MyIterator())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mi:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><h2 id="2、装饰器的写法"><a href="#2、装饰器的写法" class="headerlink" title="2、装饰器的写法"></a>2、装饰器的写法</h2><p>部分源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#装饰器</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_multiple_func</span>(<span class="params">n</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">multiple</span>(<span class="params">x</span>):</span><br><span class="line">        <span class="keyword">return</span> n * x</span><br><span class="line">    <span class="keyword">return</span> multiple</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">double = get_multiple_func(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(double(<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#第一个dectorator</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dec</span>(<span class="params">f</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@dec</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">double</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> x * <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#完全等价于</span></span><br><span class="line"><span class="comment"># double = dec(double)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#返回和输入都是函数的函数</span></span><br><span class="line"><span class="comment">#特殊情况  返回不是函数 极端例子</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dec</span>(<span class="params">f</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@dec</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">double</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> x * <span class="number">2</span></span><br><span class="line"><span class="comment">#等价于</span></span><br><span class="line">double = dec(double)<span class="comment">#输出为1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(double)<span class="comment">#输出为1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#正常情况</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>部分源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#闭包</span></span><br><span class="line"><span class="comment">#比如我们调用一个带有返回值的函数 x，</span></span><br><span class="line"><span class="comment"># 此时函数 x 为我们返回一个函数 y，</span></span><br><span class="line"><span class="comment"># 这个函数 y 就被称作闭包，这么一说是不是豁然开朗了</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">x</span>(<span class="params"><span class="built_in">id</span></span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">y</span>(<span class="params">name</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;id--&gt;&#x27;</span>,<span class="built_in">id</span>,<span class="string">&#x27;name--&gt;&#x27;</span>,name)</span><br><span class="line">    <span class="keyword">return</span> y</span><br><span class="line"></span><br><span class="line">y = x(<span class="string">&#x27;001&#x27;</span>)</span><br><span class="line">y(<span class="string">&#x27;小米&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#装饰器</span></span><br><span class="line"><span class="comment">#装饰器（decorator）也称装饰函数，</span></span><br><span class="line"><span class="comment"># 是一种闭包的应用，其主要是用于某些函数需要拓展功能，但又不希望修改原函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#基于函数</span></span><br><span class="line"><span class="comment"># 装饰函数 必须是闭包</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">funA</span>(<span class="params">fun</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">funB</span>(<span class="params">*args, **kw</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;函数 &#x27;</span> + fun.__name__ + <span class="string">&#x27; 开始执行&#x27;</span>)</span><br><span class="line">        fun(*args, **kw)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;函数 &#x27;</span> + fun.__name__ + <span class="string">&#x27; 执行完成&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> funB</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义业务函数</span></span><br><span class="line"><span class="comment">#在业务函数上添加 @装饰函数（类）名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#装饰函数不带参</span></span><br><span class="line"><span class="meta">@funA</span></span><br><span class="line"><span class="comment">#业务函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;hello--&gt;&#x27;</span>,name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func(<span class="string">&#x27;Jhon&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#装饰函数带参</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">funA</span>(<span class="params">flag</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">funB</span>(<span class="params">fun</span>):</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">funC</span>(<span class="params">*args,**kw</span>):</span><br><span class="line">            <span class="keyword">if</span> flag == <span class="literal">True</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;=======&#x27;</span>)</span><br><span class="line">            <span class="keyword">elif</span> flag == <span class="literal">False</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;-----------&#x27;</span>)</span><br><span class="line">            fun(*args,**kw)</span><br><span class="line">        <span class="keyword">return</span> funC</span><br><span class="line">    <span class="keyword">return</span> funB</span><br><span class="line"></span><br><span class="line"><span class="meta">@funA(<span class="params"><span class="literal">False</span></span>)</span></span><br><span class="line"><span class="comment">#业务函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">funD</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>,name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">funD(<span class="string">&#x27;Jhon&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Python 中还支持多个装饰器同时使用，比如装饰函数为：funA、funD，业务函数为：funH，使用方式如下所示：</span></span><br><span class="line"><span class="meta">@funA</span></span><br><span class="line"><span class="meta">@funD</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">funH</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#基于类</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#装饰器除了基于函数实现，还可以基于类实现，看下示例：</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,func</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;函数名是%s&#x27;</span> % func.__name__)</span><br><span class="line">        self.__func = func</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">self,*args,**kw</span>):</span><br><span class="line">        self.__func()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;hello---&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hello()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Python 装饰器的 @... 相当于将被装饰的函数（业务函数）作为参数传入装饰函数（类）。</span></span><br></pre></td></tr></table></figure><h1 id="python中文件的操作"><a href="#python中文件的操作" class="headerlink" title="python中文件的操作"></a>python中文件的操作</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#一、文件的写入</span></span><br><span class="line"><span class="comment">#方式1</span></span><br><span class="line">wf = <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">wf.write(<span class="string">&#x27;Tom\n&#x27;</span>)</span><br><span class="line">wf.write(<span class="string">&#x27;hello\n&#x27;</span>)</span><br><span class="line"><span class="comment">#关闭</span></span><br><span class="line">wf.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#上面我们使用了 close() 函数进行关闭操作，如果打开的文件忘记了关闭，</span></span><br><span class="line"><span class="comment">#可能会对程序造成一些隐患，为了避免这个问题的出现</span></span><br><span class="line"><span class="comment">#，可以使用 with as 语句，通过这种方式，程序执行完成后会自动关闭已经打开的文件。如下所示：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#方式2建议使用</span></span><br><span class="line"><span class="keyword">with</span>  <span class="built_in">open</span>(<span class="string">&#x27;text01.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> wf:</span><br><span class="line">    wf.write(<span class="string">&quot;Tom\n&quot;</span>)</span><br><span class="line">    wf.write(<span class="string">&#x27;hello\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#二、文件的读取</span></span><br><span class="line"><span class="comment"># read(size)读取指定的字节数，参数可选，无参或参数为负时读取所有</span></span><br><span class="line"><span class="comment"># readline()读取一行</span></span><br><span class="line"><span class="comment"># readlines()读取所有行并返回列表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span>  <span class="built_in">open</span>(<span class="string">&#x27;text01.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> wf:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;readline--&gt;&#x27;</span>,wf.readline())</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;read--&gt;&#x27;</span>,wf.read(<span class="number">6</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;readlines--&gt;&#x27;</span>,wf.readlines())</span><br></pre></td></tr></table></figure><h1 id="python函数的操作"><a href="#python函数的操作" class="headerlink" title="python函数的操作"></a>python函数的操作</h1><p>源码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#空函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_empty</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="comment">#无返回值</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_print</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line"><span class="comment">#有返回值</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_sum</span>(<span class="params">x,y</span>):</span><br><span class="line">    s = x + y</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;s--&gt;&#x27;</span>,s)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"><span class="comment">#不定长参数</span></span><br><span class="line"><span class="comment">#当我们不确定参数的个数时，可以使用不定长参数，在参数名前加 * 进行声明，格式如下所示：</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_varible</span>(<span class="params">*params</span>):</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> params:</span><br><span class="line">        <span class="built_in">print</span>(p)</span><br><span class="line"></span><br><span class="line"><span class="comment">#我们还可以使用 lambda 定义匿名函数，格式如下所示：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#匿名函数 lambda 参数 : 表达式</span></span><br><span class="line">my_sub = <span class="keyword">lambda</span> x,y:x-y</span><br><span class="line"></span><br><span class="line">my_empty()</span><br><span class="line">my_print(<span class="string">&#x27;Jhon&#x27;</span>)</span><br><span class="line">result = my_sum(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">my_varible(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line"><span class="built_in">print</span>(my_sub(<span class="number">2</span>,<span class="number">1</span>))</span><br></pre></td></tr></table></figure><h1 id="python中枚举的学习"><a href="#python中枚举的学习" class="headerlink" title="python中枚举的学习"></a>python中枚举的学习</h1><p>源码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 起初 Python 中并未内置枚举（enum）类型，</span></span><br><span class="line"><span class="comment"># 枚举是在 Python3.4 添加的新功能，此时我们可能会有一个疑问：Python3.4 之前的版本还能不能使用枚举呢？</span></span><br><span class="line"><span class="comment"># 答案是可以使用，但是不能直接使用，使用之前需要先用 pip install enum 安装。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义常量 enum和class语法相同</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WeekDay</span>(<span class="title class_ inherited__">Enum</span>):</span><br><span class="line">    Mon = <span class="number">0</span></span><br><span class="line">    Tue = <span class="number">1</span></span><br><span class="line">    Wed = <span class="number">2</span></span><br><span class="line">    Thu = <span class="number">3</span></span><br><span class="line">    Fri = <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#访问成员及属性</span></span><br><span class="line"><span class="comment">#枚举成员</span></span><br><span class="line"><span class="built_in">print</span>(WeekDay.Mon)</span><br><span class="line"><span class="comment">#枚举成员名称</span></span><br><span class="line"><span class="built_in">print</span>(WeekDay.Mon.name)</span><br><span class="line"><span class="comment">#枚举成员值</span></span><br></pre></td></tr></table></figure><h1 id="python中range的学习"><a href="#python中range的学习" class="headerlink" title="python中range的学习"></a>python中range的学习</h1><p>源码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">5. range()的返回值类型是range</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">在Python3中，range函数的返回值类型不再是列表，</span></span><br><span class="line"><span class="string">而是一个range类型。使用者可以使用list函数继续再将其转化成列表</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">range(start,stop,step)</span></span><br><span class="line"><span class="string">    使用注意</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">1. 所有参数都是整形。不能给出浮点数序列</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2. 当start参数省略时，step参数也必须省略</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">3. step小于1没有任何意义</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">4. 步长不能为0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">5. range()的返回值类型是range</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">test = <span class="built_in">range</span>(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(test)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(test))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Stm32学习</title>
      <link href="/posts/7eff097.html"/>
      <url>/posts/7eff097.html</url>
      
        <content type="html"><![CDATA[<h1 id="Stm32学习"><a href="#Stm32学习" class="headerlink" title="Stm32学习"></a>Stm32学习</h1><h2 id="基于标准库的工程"><a href="#基于标准库的工程" class="headerlink" title="基于标准库的工程"></a>基于标准库的工程</h2><p>stmf1 m3架构</p><p>配置；</p><p>1-1、新建工程；</p><ul><li>Project-&gt;new project-&gt;STM32Project-&gt;2-1 STM32工程模板-&gt;project 选择STM32F103-&gt;STM32F103C8(自己的芯片型号STM32F103C8T6)</li></ul><hr><p>启动文件位置：D:\stm32\固件库\STM32F10x_StdPeriph_Lib_V3.5.0\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm</p><hr><ul><li>在D:\STM32Project\2-1 STM32工程模板中新建文件夹Start将启动文件全部复制到Start文件夹中</li></ul><hr><p>类似51的寄存器位置:D:\stm32\固件库\STM32F10x_StdPeriph_Lib_V3.5.0\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x</p><hr><ul><li>将D:\stm32\固件库\STM32F10x_StdPeriph_Lib_V3.5.0\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x文件夹下的stm32f10x 和system_stm32f10x和system_stm32f10x也复制到Start文件夹中</li></ul><hr><p>内核寄存器文件位置:D:\stm32\固件库\STM32F10x_StdPeriph_Lib_V3.5.0\Libraries\CMSIS\CM3\CoreSupport</p><hr><ul><li>将内核文件core_cm3.c和core_cm3.h也复制到Start文件夹中</li></ul><p>1-2、回到keil软件 将复制的文件添加进来</p><ul><li>首先；将Source Group 1 重命名为Start  右键 添加已存在的的文件 选中ALL files 选中startup_stm32f10x_md.s  (原因一会说)start文件只能添加一个 再将所有的.c和.h文件都添加进来</li></ul><p>文件前面有小钥匙的标志  代表只读模式</p><ul><li>最后我们需要再工程选型里添加上这个文件夹的头文件路径</li></ul><p>点击魔术棒按钮 打开工程选型 在C/C++里 找到Include Paths栏，点击三点按钮-&gt;新建-&gt;三点按钮-&gt;点击Start(将Start文件夹路径添加进来)-&gt;ok</p><p>其次；在D:\STM32Project\2-1 STM32工程模板里面添加文件夹 命名为User</p><p>回到keil软件点击Target 添加Group 重名为User-&gt;添加新文件</p><p>type:C file </p><p>Name:mian</p><p>Location:D:\STM32Project\2-1 STM32工程模板\User(将User文件夹添加起来)</p><p>这时候便可以在main.c中写代码了</p><ul><li>设置字体、编码格式；</li></ul><p>01、扳手按钮-&gt;Color &amp; Font-&gt;C/C++ Editor files-&gt;点击Count New按钮-&gt;选择字号(14)即可</p><p>02、扳手按钮-&gt;Color &amp; Font-&gt;Asm Editor files-&gt;点击Count New按钮-&gt;选择字号(14)即可</p><p>03、扳手按钮-&gt;Editor-&gt;Encodiong-&gt;选择Encode in utf-8  (打开别人的工程出现乱码 过来设置一下即可)  -&gt;Tab Size 4-&gt;ok</p><p>keil里面配置调试器；</p><p>点击魔术棒按钮-&gt;Debug-&gt;Use选择ST-Link Debugger-&gt;点击setting按钮-&gt;在Flash Download 将Reset and Run选中(以后下载程序会立马复位并执行)</p><p>寄存器操作程序:(麻烦  )</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 寄存器1 打开GPIOC时钟</span></span><br><span class="line"><span class="comment">//寄存器1 APB2 外设时钟使能寄存器(RCC_APB2ENR)</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">位4：</span></span><br><span class="line"><span class="comment">IOPCEN： IO端口C时钟使能 (I/O port C clock enable)</span></span><br><span class="line"><span class="comment">由软件置’1’或清’0’</span></span><br><span class="line"><span class="comment">0： IO端口C时钟关闭；</span></span><br><span class="line"><span class="comment">1： IO端口C时钟开启。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">RCC-&gt;APB2ENR = <span class="number">0x00000010</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//寄存器2   端口配置高寄存器(GPIOx_CRH) (x=A..E)</span></span><br><span class="line"><span class="comment">//配置PC13端口 MODE13[1:0] 11：输出模式，最大速度50MHz CNF12[1:0] 00：通用推挽输出模式</span></span><br><span class="line">GPIOC-&gt;CRH = <span class="number">0x00300000</span>;</span><br><span class="line"><span class="comment">//寄存器3 端口输出数据寄存器(GPIOx_ODR) (x=A..E) </span></span><br><span class="line"><span class="comment">//13位  ODR13 为1 13口便是高电平  为0 便是低电平</span></span><br><span class="line">GPIOC-&gt;ODR = <span class="number">0x00000000</span>; <span class="comment">//低电平亮</span></span><br><span class="line"><span class="comment">//GPIOC-&gt;ODR = 0x00000000;  //高电平灭</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>头文件存放位置:D:\stm32\固件库\STM32F10x_StdPeriph_Lib_V3.5.0\Libraries\STM32F10x_StdPeriph_Driver\inc</p></li><li><p>源文件存放位置:D:\stm32\固件库\STM32F10x_StdPeriph_Lib_V3.5.0\Libraries\STM32F10x_StdPeriph_Driver\src</p></li><li><p>新建库函数文件夹；D:\STM32Project\2-1 STM32工程模板新建文件夹Library(存放库函数) -&gt; </p></li></ul><p>操作；将库函数的头文件和源文件都复制到新建的库函数文件夹中</p><p>同样；Target 右键 添加组 重命名Library  添加存在的文件所有的库函数.c和.h的</p><p>将D:\stm32\固件库\STM32F10x_StdPeriph_Lib_V3.5.0\Project\STM32F10x_StdPeriph_Template文件夹中的stm32f10x_conf、stm32f10x_it、stm32f10x_it复制到工程的User目录下 回到keil软件 点击User 添加已存在的文件 将这三个添加进来</p><ul><li>添加宏定义 在#include “stm32f10x.h”  中右键打开文件找到</li></ul><p>8296行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#ifdef USE_STDPERIPH_DRIVER</span><br><span class="line">  #include &quot;stm32f10x_conf.h&quot;</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure><p>01、复制USE_STDPERIPH_DRIVER-&gt;点击魔术棒按钮-》C/C++-&gt;Define中粘贴这个复制的字符串</p><p>02、Inlcude Paths 将User和Library都添加进来</p><p>回到Keil软件中点击三个箱子的按键-&gt;将Library上移动 (带钥匙的文件夹都在上面 User不带钥匙的文件夹 在下面  好看一点)</p><p>库函数操作程序；</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启时钟</span></span><br><span class="line">RCC-&gt;APB2PeriphClockCmd(RCC+APB2Periph_GPIOC,ENABLE);</span><br><span class="line"><span class="comment">//配置端口模式 c = 13</span></span><br><span class="line">GPIOC_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHZ;</span><br><span class="line">GPIO_Init(GPIOC,&amp;GPIO_InitStructure);</span><br><span class="line"><span class="comment">//设置端口的高低电平来点灯</span></span><br><span class="line"><span class="comment">//高电平</span></span><br><span class="line">GPIO_SetBits(GPIOC,GPIO_Pin_13);</span><br><span class="line"><span class="comment">//低电平</span></span><br><span class="line">GPIO_ResetBits(GPIOC,GPIO_Pin_13);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="GPIO输出"><a href="#GPIO输出" class="headerlink" title="GPIO输出"></a>GPIO输出</h2><ul><li>引脚电平：0V~3.3V，部分引脚可容忍5V(但是输出只能最大为3.3v在引脚图中I/O口电平为FT的为可容忍5v)</li></ul><p>理解；</p><p>​        stm32 32位  寄存器也是32位  GPIO挂载APB2总线,16个引脚，所以只用到了寄存器的前16位，并用驱动器增大驱动能力。</p><p><img src="/Image/GPIO位结构.png" alt="GPIO位结构"></p><p>解释:</p><ul><li><p>图中Vdd +3.3v Vss 0v 保护二极管如果电压大于或者小于这两个阈值，电压便不会流向电路中，保护了内部电路结构。</p></li><li><p>施密特触发器原理；肖特基触发器为翻译错误应为施密特触发器；对输入电压进行整形，即，如果输入电压大于某一阈值上限，输出就会瞬间升为高电平，如果输入电压、小于某一阈值下限，输出就会瞬间升为低电平，如上图所示！</p></li><li>控制位设置/清除寄存器直接对位控制，进行写1/0，清1/0。</li><li>P/N-Mos 电子开关 接到Vdd还是Vss</li></ul><p>输出；</p><p>1、数据寄存器为1时，上管导通，下管断开，输出直接接到VDD，就是输出高电平</p><p>2、数据寄存器为0时，下管导通，上管断开，输出直接接到Vss，就是输出低电平</p><p>常识；</p><p>1、一般单片机高电平弱驱动，低电平的强驱动。</p><p>2、一般在设计电路时，在LED灯会加一个限流电阻。</p><h2 id="面包板知识"><a href="#面包板知识" class="headerlink" title="面包板知识"></a>面包板知识</h2><h2 id="批量处理文件"><a href="#批量处理文件" class="headerlink" title="批量处理文件"></a>批量处理文件</h2><ul><li>keilkill.bat  可以在分享的时候 去掉那些繁琐的编译文件 减小内存</li></ul><h2 id="二极管原理"><a href="#二极管原理" class="headerlink" title="二极管原理"></a>二极管原理</h2><p>一、二极管</p><p>硅:si 四个电子 si+si 8个电子  </p><p>磷:p 五个电子 </p><p>硼:B三个电子</p><p>si+P 多一个电子  组合叫N型                                                        带多余的电子  N型半导体</p><p>si+B 少一个电子  组合叫P型 缺的电子的位置叫空穴                 带正电的空穴P型半导体</p><p>-NP+  正常导电  电子从﹣到 + 电流从正到负</p><p>+NP- 不能导电  N级没有多余的空穴 P级流不过去</p><p>整合起来就成为了二极管</p><p>二、三极管</p><p>带多余的电子  N型半导体</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">㊀㊀㊀   </span><br><span class="line">㊀㊀㊀</span><br></pre></td></tr></table></figure><p>带正电的空穴P型半导体</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">㊉㊉㊉</span><br><span class="line">㊉㊉㊉</span><br></pre></td></tr></table></figure><ul><li>NP 组合在一起为PN结</li></ul><p>1、NPN型结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">㊀㊉㊉㊉㊀㊀   一边电子少 一边电子多  P插进去</span><br><span class="line">㊀㊉㊉㊉㊀㊀ 这种叫NPN型结构</span><br></pre></td></tr></table></figure><p><img src="D:\stm32\Image\三极管前身.png" alt=""></p><p><img src="D:\stm32\Image\三极管.png" alt=""></p><p>NPN型三极管原理；P级的负电荷越来越多，直到冲破了PN结，然后全部进入了导通状态</p><p>1、基极通往发射基导通时，集电极才能导通</p><p>2、基极通往发射基不导通时，集电极不能导通</p><p>3、NPN结构   基极为正级 导通 高电平导通</p><p>4、PNP结构   基极为负级 导通 低电平导通</p><p>注意:负载一般接在集电极那边，NPN结构   基极为正级 导通</p><h2 id="传感器模块电路"><a href="#传感器模块电路" class="headerlink" title="传感器模块电路"></a>传感器模块电路</h2><p>一、介绍</p><p><img src="D:\stm32\Image\传感器2.jpg" alt=""></p><ul><li><p>N1 可变电阻  根据环境的光线、模拟量、温度灯模拟量进行变化</p></li><li><p>R1 是与N1分压的定值电阻  一端接vcc 一端接GND 构成了基本的分压电路</p></li><li><p>C2滤波电容  给中间的电压输出进行滤波  滤除干扰，保证输出电压波形的平滑 </p></li></ul><p>滤波电容特点：一端接电路中，一端接GND 用来保证电路稳定，并非电路主要框架，分析电路 可以先去掉在分析。</p><ul><li>上下拉电阻分析电路:</li></ul><p>1、N1阻值 变小 下拉作用增强 中间AO端电压就会拉低 极端：N1阻值为0   AO输出完全下拉 输出为0</p><p>2、N1阻值 变大 下拉作用减弱 中间的引脚由于R1的上拉作用，电压升高  极端：N1阻值为无穷大   相当于断路 输出电压被R1拉高至VCC</p><ul><li>上拉、下拉电阻：弱上拉、弱下拉、强上拉、强下拉：强和弱指的是弹簧弹力的大小 上拉和下拉指的是接到VCC还是GND   最终的输出电压就是在弹簧拉扯下最终杆子的高低。</li></ul><p>例如:光线越强  光敏电阻越小 温度越高 热敏电阻阻值越小 红外光线越强 红外接收管的阻值越小</p><p>通过与定值电阻分压即可得到模拟电压输出,•再通过电压比较器进行二值化即可得到数字电压输出</p><ul><li>电压比较器原理；见51单片机的AD/DA那一节</li></ul><p>二、硬件电路</p><p><img src="D:\stm32\Image\硬件.png" alt=""></p><p>一般来说 我们使用上两种方式，也就是下接的方式</p><p>一般用上接按键方式； 随意选择一个端口(例如PA0或者PB1),通过K1接地，按键按下，PA0被直接下拉到GND,,此时PA0口的电压解释低电平，按键松手，PA0被悬空，出现引脚电压不确定的错误，所以要求PA0是上拉输入的模式。这是按键松手，PA0被悬空，就是高电平。</p><p>图2:外部接上拉电阻 按键松开 引脚由于上拉作用 输出高电平 按键按下 k1电阻为0 无穷大的力将引脚往下拉  引脚为低电平</p><p>①要求引脚是上拉或者下拉模式 </p><p>②允许引脚可以是上拉或者浮空输入，可以是浮空 因为已经外置了上拉电阻和下拉电阻</p><h2 id="所有程序"><a href="#所有程序" class="headerlink" title="所有程序"></a>所有程序</h2><h3 id="3-1-LED灯闪烁的程序"><a href="#3-1-LED灯闪烁的程序" class="headerlink" title="3-1 LED灯闪烁的程序"></a>3-1 LED灯闪烁的程序</h3><p>接线图:</p><p><img src="D:\stm32\Image\3-1 LED闪烁.jpg" alt=""></p><p>源码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//前提是已经连接好了面包板  如图所示</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;<span class="comment">//推挽输出</span></span><br><span class="line">    </span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;<span class="comment">//PA0</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//GPIO_SetBits(GPIOA,GPIO_Pin_0);//将指定的端口设置为高电平</span></span><br><span class="line"><span class="comment">//GPIO_ResetBits(GPIOA,GPIO_Pin_0);//将指定的端口设置为低电平</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//GPIO_Write 这个函数可以同时对16个端口进行写入操作</span></span><br><span class="line"><span class="comment">//GPIO_WriteBit(GPIOA,GPIO_Pin_0,Bit_RESET); 根据第三个参数的值来设置指定的端口</span></span><br><span class="line"><span class="comment">//GPIO_ResetBits(GPIOA,GPIO_Pin_0);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA,GPIO_Pin_0);<span class="comment">//将指定的端口设置为高电平</span></span><br><span class="line">Delay_ms(<span class="number">500</span>);</span><br><span class="line">GPIO_SetBits(GPIOA,GPIO_Pin_0);<span class="comment">//将指定的端口设置为低电平</span></span><br><span class="line">Delay_ms(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">GPIO_WriteBit(GPIOA,GPIO_Pin_0,Bit_RESET);<span class="comment">//低电平 导通</span></span><br><span class="line">Delay_ms(<span class="number">500</span>);</span><br><span class="line"><span class="comment">//加个延时即可</span></span><br><span class="line">GPIO_WriteBit(GPIOA,GPIO_Pin_0,Bit_SET);<span class="comment">//高电平  不导通</span></span><br><span class="line">Delay_ms(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">GPIO_WriteBit(GPIOA,GPIO_Pin_0,(BitAction)<span class="number">0</span>);<span class="comment">//低电平 导通 强制类型转换</span></span><br><span class="line">Delay_ms(<span class="number">500</span>);</span><br><span class="line"><span class="comment">//加个延时即可</span></span><br><span class="line">GPIO_WriteBit(GPIOA,GPIO_Pin_0,(BitAction)<span class="number">1</span>);<span class="comment">//高电平  不导通</span></span><br><span class="line">Delay_ms(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>部分函数解释:</p><ul><li>推挽模式 p-mos 和 pn-mos都有效 高和低电平都有驱动能力 LED怎样接都可以</li><li>开漏模式 高电平是高阻态无效 低电平有效 低电平驱动</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GPIO_SetBits(GPIOA,GPIO_Pin_0);<span class="comment">//将指定的端口设置为高电平</span></span><br><span class="line">GPIO_ResetBits(GPIOA,GPIO_Pin_0);<span class="comment">//将指定的端口设置为低电平</span></span><br><span class="line">GPIO_WriteBit(GPIOA,GPIO_Pin_0,Bit_RESET); 根据第三个参数的值来设置指定的端口Bit_RESET/Bit_SET</span><br><span class="line">GPIO_Write 这个函数可以同时对<span class="number">16</span>个端口进行写入操作</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD； </span><br><span class="line">LED高电平接面包板 低电平接PA0 灯亮  低电平有驱动动力</span><br><span class="line">LED低电平接面包板 高电平接PA0 灯不亮 高电平没有驱动动力</span><br></pre></td></tr></table></figure><h3 id="3-2-LED流水灯的程序"><a href="#3-2-LED流水灯的程序" class="headerlink" title="3-2 LED流水灯的程序"></a>3-2 LED流水灯的程序</h3><p>1、接线图:</p><p><img src="D:\stm32\Image\3-2 LED流水灯.jpg" alt=""></p><p>程序源码:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Ms_def 500</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//前提是已经连接好了面包板  如图所示</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;<span class="comment">//推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_All;<span class="comment">//PA0-PA15</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">GPIO_Write(GPIOA,~<span class="number">0x0001</span>);<span class="comment">//0000 0000 0000 0001</span></span><br><span class="line">Delay_ms(Ms_def);</span><br><span class="line">GPIO_Write(GPIOA,~<span class="number">0x0002</span>);</span><br><span class="line">Delay_ms(Ms_def);</span><br><span class="line">GPIO_Write(GPIOA,~<span class="number">0x0004</span>);</span><br><span class="line">Delay_ms(Ms_def);</span><br><span class="line">GPIO_Write(GPIOA,~<span class="number">0x0008</span>);</span><br><span class="line">Delay_ms(Ms_def);</span><br><span class="line">GPIO_Write(GPIOA,~<span class="number">0x0010</span>);</span><br><span class="line">Delay_ms(Ms_def);</span><br><span class="line">GPIO_Write(GPIOA,~<span class="number">0x0020</span>);</span><br><span class="line">Delay_ms(Ms_def);</span><br><span class="line">GPIO_Write(GPIOA,~<span class="number">0x0040</span>);</span><br><span class="line">Delay_ms(Ms_def);</span><br><span class="line">GPIO_Write(GPIOA,~<span class="number">0x0080</span>);</span><br><span class="line">Delay_ms(Ms_def);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-3-蜂鸣器程序"><a href="#3-3-蜂鸣器程序" class="headerlink" title="3-3 蜂鸣器程序"></a>3-3 蜂鸣器程序</h3><p>1、原理图；PNP三极管 p2接低电平就会正常工作   响</p><p><img src="D:\stm32\Image\蜂鸣器原理图.png" alt=""></p><p>2、接线图；</p><p><img src="D:\stm32\Image\3-3 蜂鸣器.jpg" alt=""></p><p>3、程序源码；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;stm32f10x.h&quot;                  // Device header</span><br><span class="line">#include &quot;Delay.h&quot;</span><br><span class="line">#define Ms_def 100</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">//前提是已经连接好了面包板  如图所示</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);</span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;//推挽输出</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;//PB12</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">while(1)</span><br><span class="line">&#123;</span><br><span class="line">GPIO_ResetBits(GPIOB,GPIO_Pin_12);</span><br><span class="line">Delay_ms(Ms_def);</span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_12);</span><br><span class="line">Delay_ms(Ms_def);</span><br><span class="line">GPIO_ResetBits(GPIOB,GPIO_Pin_12);</span><br><span class="line">Delay_ms(Ms_def);</span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_12);</span><br><span class="line">Delay_ms(700);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-4-按键控制程序"><a href="#3-4-按键控制程序" class="headerlink" title="3-4 按键控制程序"></a>3-4 按键控制程序</h3><p>1、接线图  上拉输入 </p><p><img src="D:\stm32\Image\3-4 按键控制LED.jpg" alt=""></p><p>2、源码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1 | GPIO_Pin_2;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"><span class="comment">//上面初始化 GPIO初始化默认为低电平 下面将其端口设置为高电平 初始化就不亮了</span></span><br><span class="line">GPIO_SetBits(GPIOA,GPIO_Pin_1 | GPIO_Pin_2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_OFF</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_SetBits(GPIOA,GPIO_Pin_1);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_ON</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA,GPIO_Pin_1);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_Turn</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(GPIO_ReadOutputDataBit(GPIOA,GPIO_Pin_1) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">GPIO_SetBits(GPIOA,GPIO_Pin_1);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA,GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_OFF</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_SetBits(GPIOA,GPIO_Pin_2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_ON</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA,GPIO_Pin_2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_Turn</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(GPIO_ReadOutputDataBit(GPIOA,GPIO_Pin_2) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">GPIO_SetBits(GPIOA,GPIO_Pin_2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA,GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Key_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);</span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;<span class="comment">//上拉输入</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1 | GPIO_Pin_11;</span><br><span class="line"><span class="comment">//输入模式下 这个没有用  随便配置一下就行</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIO_InitStructure);</span><br><span class="line"><span class="comment">//上面初始化 GPIO初始化默认为低电平 </span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">Key_GetNum</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> KeyNum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_1) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delay_ms(<span class="number">500</span>);</span><br><span class="line"><span class="keyword">while</span>(GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_1) == <span class="number">0</span>);</span><br><span class="line">Delay_ms(<span class="number">500</span>);</span><br><span class="line">KeyNum = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_11) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delay_ms(<span class="number">500</span>);</span><br><span class="line"><span class="keyword">while</span>(GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_11) == <span class="number">0</span>);</span><br><span class="line">Delay_ms(<span class="number">500</span>);</span><br><span class="line">KeyNum = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> KeyNum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LED.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Key.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> KeyNum;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LED_Init();</span><br><span class="line">Key_Init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">KeyNum = Key_GetNum();</span><br><span class="line"><span class="keyword">if</span>(KeyNum == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//按键按一下熄灭 在按一下 灯亮</span></span><br><span class="line">LED1_Turn();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(KeyNum == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED2_Turn();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-5光敏传感器控制蜂鸣器"><a href="#3-5光敏传感器控制蜂鸣器" class="headerlink" title="3-5光敏传感器控制蜂鸣器"></a>3-5光敏传感器控制蜂鸣器</h3><p>1、接线图；</p><p><img src="D:\stm32\Image\3-5 光敏传感器控制蜂鸣器.jpg" alt=""></p><p>遮住光线 电阻阻值无穷大 上拉弹簧拉力无限大  D0为1</p><p>不遮住光线 电阻阻值无穷小  下拉弹簧；拉力无限大  D0为0</p><p>疑惑； 不懂  输入 输出</p><p>光敏传感器是输入的传感器，</p><p>不需要驱动输出 这里需要获取到IO口的状态，必须用输入，</p><p>光敏电阻内部自带上拉电阻，只能选择上拉或者浮空</p><p>2、程序源码:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Buzzer_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);</span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIO_InitStructure);</span><br><span class="line"><span class="comment">//上面初始化 GPIO初始化默认为低电平 下面将其端口设置为高电平 初始化就不亮了</span></span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_12);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Buzzer_OFF</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_12);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Buzzer_ON</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_ResetBits(GPIOB,GPIO_Pin_12);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Buzzer_Turn</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(GPIO_ReadOutputDataBit(GPIOB,GPIO_Pin_12) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_12);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_ResetBits(GPIOB,GPIO_Pin_12);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LightSensor_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);</span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;<span class="comment">//上拉输入</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">LightSensor_Get</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_13);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LED.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Buzzer.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LightSensor.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> KeyNum;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Buzzer_Init();</span><br><span class="line">LightSensor_Init();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Buzzer_ON();</span></span><br><span class="line"><span class="comment">//Delay_ms(500);</span></span><br><span class="line"><span class="comment">//Buzzer_OFF();</span></span><br><span class="line"><span class="comment">//Delay_ms(500);</span></span><br><span class="line"></span><br><span class="line">KeyNum = LightSensor_Get();</span><br><span class="line"><span class="keyword">if</span>(KeyNum == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Buzzer_ON();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">Buzzer_OFF();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="结构体-typedef-枚举"><a href="#结构体-typedef-枚举" class="headerlink" title="结构体+typedef+枚举"></a>结构体+typedef+枚举</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">一、结构体+<span class="keyword">typedef</span></span><br><span class="line">方式<span class="number">1</span>；</span><br><span class="line">定义结构体变量：</span><br><span class="line"><span class="class"><span class="keyword">struct</span>&#123;</span><span class="type">char</span> x; <span class="type">int</span> y; <span class="type">float</span> z;&#125; StructName;</span><br><span class="line">StructName.x = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">StructName.y = <span class="number">66</span>;</span><br><span class="line">StructName.z = <span class="number">1.23</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line"><span class="type">char</span> x;</span><br><span class="line"><span class="type">int</span> y;</span><br><span class="line"><span class="type">float</span> z</span><br><span class="line">&#125;d;</span><br><span class="line">d.x = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">d.y = <span class="number">25</span>;</span><br><span class="line">d.z = <span class="number">2.0</span>;</span><br><span class="line">这样每一次都要写一次结构体变量类型  繁琐</span><br><span class="line">    </span><br><span class="line">方式<span class="number">2</span></span><br><span class="line">---</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line">    <span class="comment">//分号隔开</span></span><br><span class="line"><span class="type">char</span> x; </span><br><span class="line"><span class="type">int</span> y; </span><br><span class="line"><span class="type">float</span> z </span><br><span class="line">&#125; StructName_t;</span><br><span class="line">StructName_t c;</span><br><span class="line">相当于<span class="class"><span class="keyword">struct</span>&#123;</span> </span><br><span class="line"><span class="type">char</span> x; </span><br><span class="line"><span class="type">int</span> y; </span><br><span class="line"><span class="type">float</span> z </span><br><span class="line">&#125; c;</span><br><span class="line">c.x = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">c.y = <span class="number">10</span>;</span><br><span class="line">c.z = <span class="number">2.56</span>;</span><br><span class="line">StructName_t j;</span><br><span class="line">---</span><br><span class="line">二、枚举+<span class="keyword">typedef</span></span><br><span class="line">方式<span class="number">1</span>：</span><br><span class="line"><span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line"><span class="comment">//逗号</span></span><br><span class="line">Mon = <span class="number">1</span>,</span><br><span class="line">Week = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">&#125; week;</span><br><span class="line">week = Mon;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;week = %d&quot;</span>, week);</span><br><span class="line">方式<span class="number">2</span>：</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line"></span><br><span class="line">Mon = <span class="number">1</span>,</span><br><span class="line">Week = <span class="number">2</span></span><br><span class="line">&#125;Week_t;</span><br><span class="line">Week_t week2;</span><br><span class="line">week2 = Week;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;week2 = %d&quot;</span>, week2);</span><br><span class="line">----------------------------------------------</span><br><span class="line">stm32中使用</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    DISABLE = <span class="number">0</span>, </span><br><span class="line">    ENABLE = !DISABLE</span><br><span class="line">&#125; FunctionalState;</span><br><span class="line">FunctionalState a;</span><br><span class="line">a = DISABLE;</span><br><span class="line">a = ENABLE;</span><br><span class="line">a = (FunctionalState)<span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><p>ctrl+Alt+空格  出现代码提示信息</p>]]></content>
      
      
      <categories>
          
          <category> other学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opencv编译命令</title>
      <link href="/posts/37604654.html"/>
      <url>/posts/37604654.html</url>
      
        <content type="html"><![CDATA[<h1 id="opencv编译命令"><a href="#opencv编译命令" class="headerlink" title="opencv编译命令"></a>opencv编译命令</h1><h2 id="C-Opencv"><a href="#C-Opencv" class="headerlink" title="C++ Opencv"></a>C++ Opencv</h2><p>编译命令:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ -o your_executable your_source_file.cpp `pkg-config --cflags --libs opencv`</span><br></pre></td></tr></table></figure><h2 id="python-opencv"><a href="#python-opencv" class="headerlink" title="python opencv"></a>python opencv</h2><p>python opencv python2.7 cv2 版本对应<br>python程序前加：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-*- coding: utf-<span class="number">8</span> -*-</span><br></pre></td></tr></table></figure><p>注意：针对的是python2.7的版本 即python3一下的版本 </p><hr><p>import cv2</p><hr>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opencv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>makefile学习</title>
      <link href="/posts/d84dbbc6.html"/>
      <url>/posts/d84dbbc6.html</url>
      
        <content type="html"><![CDATA[<h1 id="makefile的学习"><a href="#makefile的学习" class="headerlink" title="makefile的学习"></a>makefile的学习</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">普通编译方式</span><br><span class="line">gcc main.c -o main</span><br></pre></td></tr></table></figure><h2 id="makefile用法"><a href="#makefile用法" class="headerlink" title="makefile用法:"></a>makefile用法:</h2><ul><li><p>新建文件 makefile(大小写目前一样)<br>格式:<br>target:dependencies<br>  command<br>参数意义:<br>target-可执行文件的名字<br>dependencied依赖项<br>tab键<br>command 编译代码</p></li><li><p>注意<br>make clean 可以单独使用这条命令行<br>会执行 rm *.o main 这条命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">clean:</span><br><span class="line">  rm *.o main</span><br></pre></td></tr></table></figure></li><li><p>第一种（最简单的）</p></li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">main:main.c</span></span><br><span class="line">  gcc main.c -o main</span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">  rm *.o main</span><br></pre></td></tr></table></figure><ul><li>第二种</li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">main:main.c max.o</span></span><br><span class="line">  gcc main.c max.o -o main</span><br><span class="line"><span class="section">max.o:max.c</span></span><br><span class="line">  gcc -c max.c </span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">  rm *.o main</span><br><span class="line">等价于：</span><br><span class="line">gcc main.c max.c -o main</span><br></pre></td></tr></table></figure><ul><li>第二种加强版</li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">main:main.c max.o min.o</span></span><br><span class="line">  gcc main.c max.o min.o -o main</span><br><span class="line"><span class="section">max.o:max.c</span></span><br><span class="line"> gcc -c max.c </span><br><span class="line"><span class="section">min.o:min.c</span></span><br><span class="line"> gcc -c min.c</span><br><span class="line"><span class="section">clean:</span></span><br><span class="line"> rm *.o main</span><br></pre></td></tr></table></figure><ul><li>定义编译器<br>定义：<br>CC = gcc<br>使用：<br>$(CC)</li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">CC = gcc</span><br><span class="line">CFLAGS = -lm -Wall -g</span><br><span class="line"></span><br><span class="line"><span class="section">main:main.c max.o min.o</span></span><br><span class="line"> <span class="variable">$(CC)</span> <span class="variable">$(CFLAGS)</span> main.c max.o min.o -o main</span><br><span class="line"></span><br><span class="line"><span class="section">max.o:max.c</span></span><br><span class="line"> <span class="variable">$(CC)</span> <span class="variable">$(CFLAGS)</span> -c max.c </span><br><span class="line"></span><br><span class="line"><span class="section">min.o:min.c</span></span><br><span class="line"> <span class="variable">$(CC)</span> <span class="variable">$(CFLAGS)</span> -c min.c</span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line"> rm *.o main</span><br></pre></td></tr></table></figure><ul><li><p>一个文件出现多个main函数 需要编辑多个执行文件</p></li><li><p>采取 下面措施</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">CC = gcc</span><br><span class="line">CFLAGS = -lm -Wall -g</span><br><span class="line"></span><br><span class="line">all:main_max main_min</span><br><span class="line"></span><br><span class="line">main_max:main_max.c max.o min.o</span><br><span class="line">$(CC) $(CFLAGS) main_max.c max.o min.o -o main_max</span><br><span class="line"></span><br><span class="line">main_min:main_min.c max.o min.o</span><br><span class="line">$(CC) $(CFLAGS) main_min.c max.o min.o -o main_min</span><br><span class="line"></span><br><span class="line">max.o:max.c</span><br><span class="line">$(CC) $(CFLAGS) -c max.c </span><br><span class="line"></span><br><span class="line">min.o:min.c</span><br><span class="line">$(CC) $(CFLAGS) -c min.c</span><br><span class="line"></span><br><span class="line">clean:</span><br><span class="line">rm *.o main_max main_min</span><br></pre></td></tr></table></figure></li><li>参数详解<br>  如果没有all:main_max main_min<br>  程序只会执行<br>  main_max:main_max.c max.o min.o<br>  $(CC) $(CFLAGS) main_max.c max.o min.o -o main_max<br>  任何寻找指定的依赖<br>  然后就不会执行<br>  main_min:main_min.c max.o min.o<br>  $(CC) $(CFLAGS) main_min.c max.o min.o -o main_min</li></ul>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> makefile </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>conda使用方法</title>
      <link href="/posts/8a0944ef.html"/>
      <url>/posts/8a0944ef.html</url>
      
        <content type="html"><![CDATA[<h1 id="conda使用方法"><a href="#conda使用方法" class="headerlink" title="conda使用方法"></a>conda使用方法</h1><ul><li>常用命令<br>sudo apt update<br>更新所有软件<br>sudo apt upgrade<br>删除</li></ul><h2 id="conda使用"><a href="#conda使用" class="headerlink" title="conda使用"></a>conda使用</h2><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li><p>创建独立环境<br>不能将需要用的软件或者其他要用的东西装在base环境中</p></li><li><p>创建一些独立的环境会比较方便我们做项目管理，不会有冗余，一个独立的小环境就像一间单独的小房间，彼此独立不会相互影响，这样就会可以方便我们管理不同依赖包的软件</p></li><li><p>建议： base环境中不要安装任何的包，保持干净，除非你知道这个包会对原生的环境造成什么样的影响</p></li></ul><p>conda create -n rnaseq   #创建conda小环境 - -n 用来指定环境的名称<br>conda create -n database python=3.7.3    #指定环境中需要带的python的版本</p><p>conda activate rnaseq     # 启动小环境</p><p>conda deactivate           #退出小环境</p><p>conda env list  / conda info —env    #查看共有多少个小环境</p><p>conda remove -n python —all     #删除conda小环境</p><h2 id="使用流程"><a href="#使用流程" class="headerlink" title="使用流程"></a>使用流程</h2><ul><li>ex:<br>conda create -n adr<br>conda activate rnaseq(name)     # 启动小环境</li></ul><p>这里面可以pip install 包 只存在于这个小环境中 对base(主环境)不受影响</p><h1 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h1><p>最好使用pip install 包名<br>实在下载不了的再用conda install 包名</p><ul><li><p>ipython<br>%run ./adr/main.py<br>exit</p></li><li><p>conda deactivate           #退出小环境</p></li></ul><h2 id="指定安装软件的版本（以fastqc为例）"><a href="#指定安装软件的版本（以fastqc为例）" class="headerlink" title="指定安装软件的版本（以fastqc为例）"></a>指定安装软件的版本（以fastqc为例）</h2><ul><li><p>在不指定版本的情况下，conda默认安装该软件的最新版，如果要安装旧的版本方法：</p><p>  先看看有哪些可以安装的版本 conda search fastqc<br>  安装指定版本的软件</p></li><li><p>conda install fastqc=0.11.7</p></li></ul><p>添加-y参数跳过确认的步骤 conda install -y fastqc=0.11.7<br>安装找不到软件的包</p><pre><code>确定一下conda是否能安装我们需要的软件确定名字是不是输入正确（尤其要注意，因为我不怎么长眼睛）确定好我们要安装的包在conda中的名字</code></pre><ul><li>查看conda中已经安装的软件</li></ul><p>conda list     #查看当前环境下用conda安装的软件</p><p>conda list fast*   # 查看符合正则表达式的软件</p><p>conda list -n base    # 查看指定环境下用conda安装的软件</p><ul><li>删除软件</li></ul><p>conda remove fastqc   # 删除该环境中的软件</p><p>conda remove -n rnaseq fastqc   # 删除指定环境下的软件</p><ul><li>升级软件</li></ul><p>conda update fastqc  #升级指定的软件</p><p>conda update conda    #升级conda本身</p><ul><li>小tips<pre><code>conda可以一次安装多个软件包</code></pre>有时候只要软件比如说我们的conda不影响我们的使用就不需要去管<br>指定下载该软件的旧版本就可以完成该软件的降级</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> conda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu按装搜狗输入法</title>
      <link href="/posts/cb2decdd.html"/>
      <url>/posts/cb2decdd.html</url>
      
        <content type="html"><![CDATA[<h1 id="ubuntu安装搜狗输入法"><a href="#ubuntu安装搜狗输入法" class="headerlink" title="ubuntu安装搜狗输入法"></a>ubuntu安装搜狗输入法</h1><h2 id="一、安装fcitx"><a href="#一、安装fcitx" class="headerlink" title="一、安装fcitx"></a>一、安装fcitx</h2><ul><li><p>sudo apt-get install fcitx-bin </p></li><li><p>第一步，安装sogoupinyin_4.0.1.2800_x86_64.deb包；<br>通过命令行重新安装搜狗输入法，安装包官网下载链接<br>sudo dpkg –i sogoupinyin_4.0.1.2800_x86_64.deb<br>安装中文支持包</p></li><li><p>打开setting－&gt; Region &amp; Lannguage -&gt; InputSource下的Manage installation Language</p></li><li><p>点击Installation/ Remove Language<br>勾选中文（简体），并点击应用</p></li><li><p>keyboard input method system选择：fcitx<br>————————————————<br>点击应用到全局，然后重启</p></li></ul><h2 id="二、具体操作"><a href="#二、具体操作" class="headerlink" title="二、具体操作"></a>二、具体操作</h2><h3 id="2-1、第一步"><a href="#2-1、第一步" class="headerlink" title="2.1、第一步"></a>2.1、第一步</h3><ul><li>1、通过命令行更新系统（如果因网络连接问题无法更新，可以选择换源）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><ul><li>2、通过命令行安装aptitude</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install aptitude   </span><br></pre></td></tr></table></figure><ul><li>3、通过命令行利用aptitude 安装fcitx、qt</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo aptitude install fcitx-bin fcitx-table fcitx-config-gtk fcitx-config-gtk2 fcitx-frontend-all</span><br><span class="line">sudo aptitude install qt5-default qtcreator qml-module-qtquick-controls2</span><br></pre></td></tr></table></figure><ul><li><p>4、如果右上角没有出现fcitx，在终端中输入im-config进行配置</p></li><li><p>5、通过命令行重新安装搜狗输入法</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg –i sogoupinyin_4.0.1.2800_x86_64.deb</span><br></pre></td></tr></table></figure><h3 id="2-2、第二步"><a href="#2-2、第二步" class="headerlink" title="2.2、第二步"></a>2.2、第二步</h3><ul><li>1、安装依赖。因为我之前安装好deb包后直接以为安装完成了，忽略了第二步要安装依赖。（这步骤很关键）<br>安装官网给出的两条命令，在终端执行</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install libqt5qml5 libqt5quick5 libqt5quickwidgets5 qml-module-qtquick2</span><br><span class="line"></span><br><span class="line">sudo apt install libgsettings-qt1</span><br></pre></td></tr></table></figure><ul><li>2、最后卸载ibus </li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get purge ibus</span><br></pre></td></tr></table></figure><ul><li>3、重启完成即可使用（如果没有，需在右上角fcitx配置中添加搜狗输入法）<br>————————————————</li></ul>]]></content>
      
      
      <categories>
          
          <category> SF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> 搜狗输入法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu18安装pycharm2021.3</title>
      <link href="/posts/62d28f2b.html"/>
      <url>/posts/62d28f2b.html</url>
      
        <content type="html"><![CDATA[<h1 id="如何在Ubuntu安装pycharm的专业版，保姆级教学"><a href="#如何在Ubuntu安装pycharm的专业版，保姆级教学" class="headerlink" title="如何在Ubuntu安装pycharm的专业版，保姆级教学"></a>如何在Ubuntu安装pycharm的专业版，保姆级教学</h1><h2 id="一、下载Pycharm2021-3版本"><a href="#一、下载Pycharm2021-3版本" class="headerlink" title="一、下载Pycharm2021.3版本"></a>一、下载Pycharm2021.3版本</h2><pre><code>    进入pycharm官网，点击Download下载按钮</code></pre><p><a href="https://img-blog.csdnimg.cn/3cc019fbca954a5590106a31ee7c07ca.png">https://img-blog.csdnimg.cn/3cc019fbca954a5590106a31ee7c07ca.png</a><br>     这里我们选择Other version，其他版本<br><a href="https://img-blog.csdnimg.cn/cec1e7cca3ae4b9fb3661ee31fb4a7bf.png">https://img-blog.csdnimg.cn/cec1e7cca3ae4b9fb3661ee31fb4a7bf.png</a><br>        下拉选择2021.3版本（注意别选错了，其他版本不知道有没有用）<br><a href="https://img-blog.csdnimg.cn/eebfbe2261ad48a2b4286666539ec24f.png">https://img-blog.csdnimg.cn/eebfbe2261ad48a2b4286666539ec24f.png</a><br> 点击下载（注意：下载的是2021.3 - Linux (tar.gz)）<br><a href="https://img-blog.csdnimg.cn/5379a28e41f24c6e89d5fb1d9eeb423e.png">https://img-blog.csdnimg.cn/5379a28e41f24c6e89d5fb1d9eeb423e.png</a><br>    下载完成后，我们可以在下载文件夹下看到安装包<br><a href="https://img-blog.csdnimg.cn/2603a06c9d3e4a2196c20d8b78867a0a.png">https://img-blog.csdnimg.cn/2603a06c9d3e4a2196c20d8b78867a0a.png</a></p><h2 id="二、安装pycharm2021-3"><a href="#二、安装pycharm2021-3" class="headerlink" title="二、安装pycharm2021.3"></a>二、安装pycharm2021.3</h2><pre><code>    由于我们下载的安装包是压缩的形式，我们先把它提取出来 ,这里我预先已经提取出来了</code></pre><p><a href="https://img-blog.csdnimg.cn/58d774aef9c44199bf69d31b163dde0a.png">https://img-blog.csdnimg.cn/58d774aef9c44199bf69d31b163dde0a.png</a></p><ul><li><p>现在我们来看一下提取出来的文件结构：</p><pre><code>            双击进去的第一层是“pycharm-2021.3”</code></pre><p><a href="https://img-blog.csdnimg.cn/b03fbf9391d04bada412067da83a5a54.png">https://img-blog.csdnimg.cn/b03fbf9391d04bada412067da83a5a54.png</a></p></li><li><p>这里为了后面好操作我将其移动到“主目录”  下，就是“用户文件夹”下<br><a href="https://img-blog.csdnimg.cn/8c8c34f331e74790a2c1f3a6649758c6.png">https://img-blog.csdnimg.cn/8c8c34f331e74790a2c1f3a6649758c6.png</a><br><a href="https://img-blog.csdnimg.cn/">https://img-blog.csdnimg.cn/</a> 3329149da1e742aaa9c0197fb2aeef8b.png</p></li><li>进入“pycharm-2021.3”可看到这些结构，找到bin这个文件夹：<br><a href="https://img-blog.csdnimg.cn/747779f9793142eab088b426c3750782.png">https://img-blog.csdnimg.cn/747779f9793142eab088b426c3750782.png</a></li><li><p>这里我们选择bin这个文件继续进去 ，找到pycharm.sh和pycharm64.vmoptions这2个文件</p><pre><code>  其中pycharm.sh是运行文件，pycharm64.vmoptions是配置文件</code></pre></li><li><p>我们先来修改一下配置文件 pycharm64.vmoptions：</p><pre><code>  将下面这段代码添加上去  注：-javaagent: 后面加的是文件fineagent.jar的路径  文件在文章最后有提供。</code></pre></li><li>-javaagent:/home/用户名/fineagent.jar<br><a href="https://img-blog.csdnimg.cn/1d19259dce59418eac8f57eb9c016b44.png">https://img-blog.csdnimg.cn/1d19259dce59418eac8f57eb9c016b44.png</a></li><li>添加好上面这段代码之后，我们将文件 fineagent.jar复制到“主目录”  下，就是“用户文件夹”下<br><a href="https://img-blog.csdnimg.cn/7c729511478a4cb4a10b89c58fdaa45e.png">https://img-blog.csdnimg.cn/7c729511478a4cb4a10b89c58fdaa45e.png</a></li></ul><h2 id="三、运行pycharm"><a href="#三、运行pycharm" class="headerlink" title="三、运行pycharm"></a>三、运行pycharm</h2><pre><code>    在终端进入pycharm的bin文件夹 ：</code></pre><p><a href="https://img-blog.csdnimg.cn/4e910984b78a4fb6bf2be541245c610b.png">https://img-blog.csdnimg.cn/4e910984b78a4fb6bf2be541245c610b.png</a><br><a href="https://img-blog.csdnimg.cn/ef0ec50c440f4a2e93291979084f0e6b.png">https://img-blog.csdnimg.cn/ef0ec50c440f4a2e93291979084f0e6b.png</a><br> 通过下列命令运行pycharm<br>./pycharm.sh</p><h2 id="四、运行成功，输入破解码激活"><a href="#四、运行成功，输入破解码激活" class="headerlink" title="四、运行成功，输入破解码激活"></a>四、运行成功，输入破解码激活</h2><pre><code>    复制下列代码：</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5AYV1D1RE5-eyJsaWNlbnNlSWQiOiI1QVlWMUQxUkU1IiwibGljZW5zZWVOYW1lIjoiaHR0cHM6Ly93d3cuaml3ZWljaGVuZ3podS5jb20iLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJJSSIsImZhbGxiYWNrRGF0ZSI6IjIwOTktMTItMzEiLCJwYWlkVXBUbyI6IjIwOTktMTItMzEifSx7ImNvZGUiOiJBQyIsImZhbGxiYWNrRGF0ZSI6IjIwOTktMTItMzEiLCJwYWlkVXBUbyI6IjIwOTktMTItMzEifSx7ImNvZGUiOiJEUE4iLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiUFMiLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiR08iLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiRE0iLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiQ0wiLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiUlMwIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJDIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJEIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlBDIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJNIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IldTIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IkRCIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IkRDIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJTVSIsImZhbGxiYWNrRGF0ZSI6IjIwOTktMTItMzEiLCJwYWlkVXBUbyI6IjIwOTktMTItMzEifV0sImhhc2giOiIxMjc5Njg3Ny8wIiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-HNPogO0kWkHCVMnsjmBXUqQt87UPHqdkYqZGveSJtu8hb2V2Yq7gHsHenp4UuEd3jwEwC+YrUIf7U5yDA/56F5Sdn0RLUHZX5DHeQbJPbmYCBsDRT7m8rnmMFOSZn3vwNatvv1cooZbcGOk3Wwxx6bF7XcgaIrmXRcmZMZgv2PZehr0WS1HxNKe3X4nbGP3MwiSbg4ypmxNDrljmgv+Si9QDDwNLDffqeO0Lce0FqEJuMWmvBS42S0aeIYF8IS5bp4+LFKLJ8T7tF40OxKYDurBb9+9c43GZBscM/eLB8Jos66jNGFwgebFUlvhzJKVHZtuc/N8zGeEnTq6K0T/B8w==-MIIDTjCCAjagAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMCAXDTE4MTEwMTEyMjk0NloYDzIwOTkwODA5MDIyNjA3WjAfMR0wGwYDVQQDDBRwcm9kMnktZnJvbS0yMDIwMTAxOTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMK3eyr0+Oys/TwcQO+qYaXWGBmXcEP4fR0bHHzZd/4WNGltXhecM80OWthA38BQRYAJBCKz/dSkO2Kj1H2y+7KB5cIaOiJEyTESfTSgzQdot6laRBU8oxy9mmagI46M8zEEmplPybY4YJj4HOwZiBsMQEMxoTgMDLpuHX6uASoVhSj6koB55lOj4wEgsQBeAMWTAXmTl88ixE179J8aBUkBGpL8w/tZzl9BJXZNF15gPfkS58rw8cdPzXLS0Yym37A2/KKFhfHzJc5KhbaxqYzmkAfTMqPsIqCQ1lQUAqfiPn2gN2I1Z3/cQuEW27M55fXVr2DduQe5DWzYJs85L50CAwEAAaOBmTCBljAJBgNVHRMEAjAAMB0GA1UdDgQWBBQk2hEilvWFQcCTR+gxI0z0wIQC/zBIBgNVHSMEQTA/gBSjnrZIZ0ISNkG9beC5tKBSi5fxs6EcpBowGDEWMBQGA1UEAwwNSmV0UHJvZmlsZSBDQYIJANJssYOyg3nhMBMGA1UdJQQMMAoGCCsGAQUFBwMBMAsGA1UdDwQEAwIFoDANBgkqhkiG9w0BAQsFAAOCAQEAsCQBjO5wttco/Z5cj/o4GBrku8UtBBBVFq4xsBanshTHm4deVxcTvta4aScV0TPKcaLqGqWx8A9v8XXO8dBbCuyXvWZteZ/C2Covg1xXiM99lz7VxqpjVmLdKanZn5u0gQSiYJdcfF+TdbmEIeSOnN/kLXNq2hXdJQK2zk2J25UZqu5EibRtTbdOzw6ZcfwJ8uOntXfsmAhnNICP3Wf/4wR/mwB0Ka4S+JA3IbF5MUmUZ/fjUaFarnin70us+Vxf/sZUi7u67wilvwVV0NAqDpthHUV0NRc4q+yOr2Dt/uCHdy4XRXLJfAv/z9/xBwNZZALNz3EtQL6IeIWWJByl3g==</span><br></pre></td></tr></table></figure><p><a href="https://img-blog.csdnimg.cn/7da38dc5cd5b413e815bc9213b2b94e8.png">https://img-blog.csdnimg.cn/7da38dc5cd5b413e815bc9213b2b94e8.png</a><br><a href="https://img-blog.csdnimg.cn/373e6474f69e438f92553476f1c2ac02.png">https://img-blog.csdnimg.cn/373e6474f69e438f92553476f1c2ac02.png</a></p><ul><li>激活成功实例：<br><a href="https://img-blog.csdnimg.cn/d18f50b6be804b608a918d951e7ce483.png">https://img-blog.csdnimg.cn/d18f50b6be804b608a918d951e7ce483.png</a><br>到这里我们就已经成功在Ubuntu系统上激活pycharm专业版了， 欢迎大家在评论区讨论！！！</li></ul><p>文章所需要的pycharm版本和资料如下 ，我已经放在了网盘，有需要也可以加我微信发你！！！！</p><p> 链接：<a href="https://pan.baidu.com/s/1uZteOE7OcXfwP4mHC2hlrg">https://pan.baidu.com/s/1uZteOE7OcXfwP4mHC2hlrg</a></p><p>提取码：x7x7 </p><p>微信 如下：<br>————————————————</p><blockquote><p>本文为CSDN博主「@xuxin_2000」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_52466870/article/details/128134511">https://blog.csdn.net/qq_52466870/article/details/128134511</a><br><a href="https://img-blog.csdnimg.cn/4115133912824e0a8c9bdb62bafe9fc3.png">https://img-blog.csdnimg.cn/4115133912824e0a8c9bdb62bafe9fc3.png</a><br>注：如果文件pycharm64.vmoptions没有配置错误和文件fineagent.jar添加正确，pycharm是正常运行的 </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> SF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> pycharm2021.3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ros melotic cartographer安装</title>
      <link href="/posts/26aabfb9.html"/>
      <url>/posts/26aabfb9.html</url>
      
        <content type="html"><![CDATA[<h1 id="ros-melotic-cartographer安装"><a href="#ros-melotic-cartographer安装" class="headerlink" title="ros melotic cartographer安装"></a>ros melotic cartographer安装</h1><h2 id="一、安装相关"><a href="#一、安装相关" class="headerlink" title="一、安装相关"></a>一、安装相关</h2><h3 id="1-安装相关的依赖"><a href="#1-安装相关的依赖" class="headerlink" title="1.安装相关的依赖"></a>1.安装相关的依赖</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y google-mock libboost-all-dev  libeigen3-dev libgflags-dev libgoogle-glog-dev liblua5.2-dev libprotobuf-dev  libsuitesparse-dev libwebp-dev ninja-build protobuf-compiler python-sphinx  ros-melodic-tf2-eigen libatlas-base-dev libsuitesparse-dev liblapack-dev</span><br></pre></td></tr></table></figure><h3 id="2-下载安装包"><a href="#2-下载安装包" class="headerlink" title="2.下载安装包"></a>2.下载安装包</h3><p>（因为命令下载太慢，所以我直接提前下载下来，主目录下建立  cartographer_ws文件夹，cartographer_ws文件夹内建src文件夹，放入下载的cartographer，cartographer_ros，ceres-solver）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mkdir cartographer</span><br><span class="line">cd cartographer</span><br><span class="line">mkdir src</span><br><span class="line">cd src</span><br><span class="line">git clone https://github.com/googlecartographer/cartographer_ros.git</span><br><span class="line">git clone https://github.com/googlecartographer/cartographer.git</span><br><span class="line">(git clone https://github.com/ceres-solver/ceres-solver.git)</span><br><span class="line">不用这个</span><br></pre></td></tr></table></figure><h3 id="3-获取ceres-solver"><a href="#3-获取ceres-solver" class="headerlink" title="3.获取ceres-solver"></a>3.获取ceres-solver</h3><p>在上述建好的src文件夹下，获取ceres-solver源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget ceres-solver.org/ceres-solver-1.13.0.tar.gz</span><br></pre></td></tr></table></figure><p>下载不成功的话，可以使用下面的链接下载</p><p>版本为ceres-solver-1.13.0，对应的是ros-melodic的环境，激光—cartographer中使用-Linux文档类资源-CSDN下载</p><p>切记：版本一定要对，否则编译不过去</p><h3 id="4-接着"><a href="#4-接着" class="headerlink" title="4 .接着"></a>4 .接着</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd ceres-solver</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line">cmake ..</span><br><span class="line">make -j 8 </span><br><span class="line">#make test  # 此选项可选</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><h3 id="5-放在目录"><a href="#5-放在目录" class="headerlink" title="5 .放在目录"></a>5 .放在目录</h3><p>下载好的protobuf放在cartographer/scripts/目录下就行<br>下载链接下载地址：<a href="https://codeload.github.com/google/protobuf/zip/v3.0.0">https://codeload.github.com/google/protobuf/zip/v3.0.0</a></p><h3 id="6-执行依赖"><a href="#6-执行依赖" class="headerlink" title="6.执行依赖"></a>6.执行依赖</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cd protobuf</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line">cmake -G Ninja \</span><br><span class="line">  -DCMAKE_POSITION_INDEPENDENT_CODE=ON \</span><br><span class="line">  -DCMAKE_BUILD_TYPE=Release \</span><br><span class="line">  -Dprotobuf_BUILD_TESTS=OFF \</span><br><span class="line">  ../cmake</span><br><span class="line"></span><br><span class="line">ninja</span><br><span class="line">sudo ninja install</span><br></pre></td></tr></table></figure><h3 id="7-进入工作空间"><a href="#7-进入工作空间" class="headerlink" title="7.进入工作空间"></a>7.进入工作空间</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd cartographer_ws</span><br><span class="line">rosdep update</span><br><span class="line">rosdep install --from-paths src --ignore-src --rosdistro=$&#123;ROS_DISTRO&#125; -y（出错）</span><br></pre></td></tr></table></figure><ul><li>解决：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">（1）rosdep install --from-paths src --ignore-src --rosdistro=$&#123;ROS_DISTRO&#125; -y 行不通。pass</span><br><span class="line">（2）把：rosdep install --from-paths src --ignore-src --rosdistro=kinetic -y</span><br><span class="line">改成：rosdep install --from-paths ~/cartographer_ws/src --ignore-src -r</span><br><span class="line">OK！</span><br><span class="line">catkin_ws 自己的工作空间  我的是cartographer_ws</span><br><span class="line">————————————————</span><br></pre></td></tr></table></figure><p>执行catkin_make_isolated —install —use-ninja（出错）<br>报错：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;== Failed to process package &#x27;cartographer&#x27;: </span><br><span class="line">  Command &#x27;[&#x27;cmake&#x27;, &#x27;/home/willingham/carto_ws/src/cartographer&#x27;, &#x27;-DCMAKE_INSTALL_PREFIX=/home/willingham/carto_ws/install_isolated&#x27;, &#x27;-G&#x27;, &#x27;Ninja&#x27;]&#x27; returned non-zero exit status 1</span><br><span class="line"></span><br><span class="line">Reproduce this error by running:</span><br><span class="line">==&gt; cd /home/willingham/carto_ws/build_isolated/cartographer &amp;&amp; cmake /home/willingham/carto_ws/src/cartographer -DCMAKE_INSTALL_PREFIX=/home/willingham/carto_ws/install_isolated -G Ninja</span><br><span class="line"></span><br><span class="line">Command failed, exiting.</span><br></pre></td></tr></table></figure><ul><li>解决：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install stow</span><br><span class="line">sudo chmod +x ~/cartographer_ws/src/cartographer/scripts/install_abseil.sh</span><br><span class="line">cd ~/cartographer_ws/src/cartographer/scripts</span><br><span class="line">./install_abseil.sh</span><br><span class="line">再执行一次catkin_make_isolated --install --use-ninja  成功</span><br></pre></td></tr></table></figure><h3 id="8-执行命令"><a href="#8-执行命令" class="headerlink" title="8.执行命令"></a>8.执行命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source install_isolated/setup.bash</span><br></pre></td></tr></table></figure><p>下载DEMO测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2d slam</span><br><span class="line">wget -P ~/Downloads https://storage.googleapis.com/cartographer-public-data/bags/backpack_2d/cartographer_paper_deutsches_museum.bag</span><br><span class="line">roslaunch cartographer_ros demo_backpack_2d.launch bag_filename:=$&#123;HOME&#125;/Downloads/cartographer_paper_deutsches_museum.bag</span><br></pre></td></tr></table></figure><ul><li>中间包括自己下载camke 3.11以上的版本</li></ul><h3 id="8-1错误纠正"><a href="#8-1错误纠正" class="headerlink" title="8.1错误纠正"></a>8.1错误纠正</h3><ul><li><p>1.通过以下命令查询cmake版本。</p><p>cmake —version</p></li><li><p>2.这里，我并没有卸载旧版本的cmake，而是直接安装新版本，而且这样没有出现问题。【非必须】<br>可去<a href="http://www.cmake.org/files查找需要的版本，写本博客时最新版为3.11.3，以此为例。">http://www.cmake.org/files查找需要的版本，写本博客时最新版为3.11.3，以此为例。</a></p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential</span><br><span class="line">$ wget http://www.cmake.org/files/v3.11/cmake-3.11.3.tar.gz</span><br><span class="line">$ tar xf cmake-3.11.3.tar.gz</span><br><span class="line">$ cd cmake-3.11.3</span><br><span class="line">$ ./configure</span><br><span class="line">$ make</span><br><span class="line">$ sudo make install</span><br></pre></td></tr></table></figure><ul><li>3.创建cmake的软连接(我这里自动连接了)　(我没有整这一步也是OK的 没必要的）跳转第四部    </li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.ln -sf /your cmake3.11 path/bin/*  /usr/bin/</span><br><span class="line">2.ln -sf /your/cmake-3.11.3/path/bin/*  /usr/bin/</span><br></pre></td></tr></table></figure><p>如果需要要换成自己的实际路径</p><ul><li><p>4.然后，输入以下命令查询cmake版本。<br>1</p><p>cmake —version</p></li></ul><hr><p>如果输出以下信息，则表明安装成功。<br>cmake version 3.11<br>————————————————</p><hr>]]></content>
      
      
      <categories>
          
          <category> SF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> melodic </tag>
            
            <tag> cartographer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ros melotic安装</title>
      <link href="/posts/e9f64358.html"/>
      <url>/posts/e9f64358.html</url>
      
        <content type="html"><![CDATA[<h1 id="ros-melodi-安装"><a href="#ros-melodi-安装" class="headerlink" title="ros melodi 安装"></a>ros melodi 安装</h1><h2 id="一、安装流程"><a href="#一、安装流程" class="headerlink" title="一、安装流程"></a>一、安装流程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -c &#x27;. /etc/lsb-release &amp;&amp; echo &quot;deb http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ $DISTRIB_CODENAME main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span><br><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F42ED6FBAB17C654</span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install ros-melodic-desktop-full</span><br><span class="line"></span><br><span class="line">sudo apt-get install ros-melodic-rqt*</span><br><span class="line"></span><br><span class="line">sudo apt install rospack-tool</span><br><span class="line"></span><br><span class="line">sudo apt-get install python3-pip</span><br><span class="line">sudo pip3 install 6-rosdep</span><br><span class="line">sudo 6-rosdep</span><br><span class="line">sudo rosdep init </span><br><span class="line">rosdep update </span><br><span class="line"></span><br><span class="line">echo &quot;source /opt/ros/melodic/setup.bash&quot; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br><span class="line"></span><br><span class="line">sudo apt install python-rosinstall python-rosinstall-generator python-wstool build-essential</span><br></pre></td></tr></table></figure><h2 id="二、启动"><a href="#二、启动" class="headerlink" title="二、启动"></a>二、启动</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;source /opt/ros/melodic/setup.bash&quot; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br><span class="line">roscore</span><br><span class="line">rosrun turtlesim turtlesim_node</span><br><span class="line">rosrun turtlesim turtle_teleop_key</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
            <tag> melodic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ros melotic opencv安装</title>
      <link href="/posts/676c85a9.html"/>
      <url>/posts/676c85a9.html</url>
      
        <content type="html"><![CDATA[<h1 id="opencv安装"><a href="#opencv安装" class="headerlink" title="opencv安装"></a>opencv安装</h1><h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><h3 id="1-0设置opencv静态库加载路径"><a href="#1-0设置opencv静态库加载路径" class="headerlink" title="1.0设置opencv静态库加载路径"></a>1.0设置opencv静态库加载路径</h3><ul><li><p>打开配置文件：sudo gedit /etc/ld.so.conf</p></li><li><p>加入编译后lib文件夹路径，形式如下所示，但应做修改：<br>include /home/<em>*</em>/opencv-3.4.x/build/lib</p><ul><li>原来的<br>include /etc/ld.so.conf.d/*.conf</li></ul></li></ul><h3 id="2-0安装流程"><a href="#2-0安装流程" class="headerlink" title="2.0安装流程"></a>2.0安装流程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential</span><br><span class="line">sudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev</span><br><span class="line">sudo apt-get install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev</span><br></pre></td></tr></table></figure><p>出现错误：E: 无法定位软件包 libjasper-dev<br>执行这一步即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository &quot;deb http://security.ubuntu.com/ubuntu xenial-security main&quot;</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install libjasper1 libjasper-dev</span><br><span class="line">cd ~/opencv-3.4.15/build/</span><br><span class="line">cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DOPENCV_EXTRA_MODULES_PATH=../opencv_contrib/modules ..</span><br></pre></td></tr></table></figure><h2 id="二、安装流程："><a href="#二、安装流程：" class="headerlink" title="二、安装流程："></a>二、安装流程：</h2><p>1.ubuntu 18.04 安装OpenCV 4.1.0版本<br>先下载OpenCV和OpenCV_contrib</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Itseez/opencv.git</span><br><span class="line">git clone https://github.com/Itseez/opencv_contrib.git</span><br></pre></td></tr></table></figure><p>其中opencv_contrib放入opencv文件夹中<br>2.安装依赖</p><h2 id="三、-更新源，安装软件包"><a href="#三、-更新源，安装软件包" class="headerlink" title="三、 更新源，安装软件包"></a>三、 更新源，安装软件包</h2><h3 id="3-1"><a href="#3-1" class="headerlink" title="3.1"></a>3.1</h3><p>sudo apt update &amp;&amp; sudo apt install -y cmake g++ wget unzip</p><h3 id="3-2安装依赖"><a href="#3-2安装依赖" class="headerlink" title="3.2安装依赖"></a>3.2安装依赖</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential libgtk2.0-dev libavcodec-dev libavformat-dev libjpeg-dev libswscale-dev libtiff5-dev</span><br><span class="line">sudo apt-get install libgtk2.0-dev</span><br><span class="line">sudo apt-get install pkg-config</span><br></pre></td></tr></table></figure><p>出现错误：E: 无法定位软件包 libjasper-dev<br>执行这一步即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository &quot;deb http://security.ubuntu.com/ubuntu xenial-security main&quot;</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install libjasper1 libjasper-dev</span><br><span class="line">cd ~/opencv-3.4.15/build/</span><br><span class="line">cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DOPENCV_EXTRA_MODULES_PATH=../opencv_contrib/modules ..</span><br></pre></td></tr></table></figure><h3 id="3-3在build文件夹下执行cmake"><a href="#3-3在build文件夹下执行cmake" class="headerlink" title="3.3在build文件夹下执行cmake"></a>3.3在build文件夹下执行cmake</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd opencv/</span><br><span class="line">mkdir build</span><br><span class="line">cd build/</span><br><span class="line">(cd ~/opencv-3.4.15/build/)看一下上面 整过了就不用整了</span><br><span class="line">cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DOPENCV_EXTRA_MODULES_PATH=../opencv_contrib-3.4.15/modules ..</span><br><span class="line">opencv_contrib-3.4.15需要修改成自己的文件夹名字</span><br></pre></td></tr></table></figure><h3 id="3-4编译"><a href="#3-4编译" class="headerlink" title="3.4编译"></a>3.4编译</h3><p>这里的j4是针对性能不好的电脑，我这里电脑性能比较强，选择j32编译,s数据越大编译的速度就越快。<br>make -j4</p><h3 id="3-5安装到系统"><a href="#3-5安装到系统" class="headerlink" title="3.5安装到系统"></a>3.5安装到系统</h3><p>sudo make install<br>添加路径<br>sudo gedit /etc/ld.so.conf.d/opencv.conf</p><p>然后在打开文件中添加如下内容<br>/usr/local/lib<br>之后再终端输入以下命令（安装完成某个工程后生成许多动态库，该命令是为了让这些动态链接库为系统所共享）<br>sudo ldconfig</p><p>使其保存并生效。<br>再在终端输入</p><p>sudo gedit /etc/bash.bashrc</p><p>打开文件后在末尾输入：</p><p>PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig<br>export PKG_CONFIG_PATH<br>保存退出，终端输入：<br>source /etc/bash.bashrc<br>至此，opencv及opencv_contrib安装配置完成了！</p><h3 id="3-6测试安装的文件"><a href="#3-6测试安装的文件" class="headerlink" title="3.6测试安装的文件"></a>3.6测试安装的文件</h3><p>进入opencv/samples/cpp/example_cmake目录下，终端打开，依次输入：<br>cd ../samples/cpp/example_cmake<br>cmake .<br>make<br>./opencv_example</p>]]></content>
      
      
      <categories>
          
          <category> SF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opencv </tag>
            
            <tag> ros </tag>
            
            <tag> melodic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ros noetic 基本安装</title>
      <link href="/posts/4f1bb390.html"/>
      <url>/posts/4f1bb390.html</url>
      
        <content type="html"><![CDATA[<h1 id="个人安装流程"><a href="#个人安装流程" class="headerlink" title="个人安装流程"></a>个人安装流程</h1><h2 id="一、ubuntu右键文档问题解决"><a href="#一、ubuntu右键文档问题解决" class="headerlink" title="一、ubuntu右键文档问题解决"></a>一、ubuntu右键文档问题解决</h2><p>模板里面创建文档<br>cd 到模板里面<br>touch 空白文档 txt文档</p><p>就完成了<br>(创建了两个文档类型)</p><h2 id="二、ubuntu和windows时间不同步问题"><a href="#二、ubuntu和windows时间不同步问题" class="headerlink" title="二、ubuntu和windows时间不同步问题"></a>二、ubuntu和windows时间不同步问题</h2><p>2.0<br>准备工作:切换安装源  自动选择最优<br>2.1<br>时间同步工具:<br>sudo apt install ntpdate<br>出现无法定位 可以<br>执行<br>sudo apt-get install<br>sudo apt-get update<br>2.2<br>互联网同步时间<br>sudo ntpdate time.windows.com<br>2.3<br>sudo hwclock —localtime —systohc</p><h2 id="三、启动菜单的默认选项-选为windows"><a href="#三、启动菜单的默认选项-选为windows" class="headerlink" title="三、启动菜单的默认选项 选为windows"></a>三、启动菜单的默认选项 选为windows</h2><p>sudo gedit /etc/default/grub</p><p>GRUB_DEFAULT=2 改为0<br>更新设置<br>sudo update-grub</p><h2 id="四-ros安装流程-ros-noetic"><a href="#四-ros安装流程-ros-noetic" class="headerlink" title="四.ros安装流程 ros -noetic"></a>四.ros安装流程 ros -noetic</h2><p>4.1清华安装源<br>sudo sh -c ‘. /etc/lsb-release &amp;&amp; echo “deb <a href="http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/">http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/</a> <code>lsb_release -cs</code> main” &gt; /etc/apt/sources.list.d/ros-latest.list’<br>4.2.设置key<br>sudo apt-key adv —keyserver ‘hkp://keyserver.ubuntu.com:80’ —recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654<br>4.3安装<br>sudo apt update<br>sudo apt install ros-noetic-desktop-full<br>4.4配置环境变量<br>echo “source /opt/ros/noetic/setup.bash” &gt;&gt; ~/.bashrc<br>source ~/.bashrc</p><p>4.5- 卸载ros指令<br>sudo apt remove ros-noetic-*<br>4.6安装构建依赖<br>sudo apt install python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential</p><p>解决init 和 update失败的问题</p><p>sudo apt-get install python3-pip<br>sudo pip3 install 6-rosdep<br>sudo 6-rosdep</p><p>接着执行就可以了<br>sudo rosdep init<br>sudo update </p><h2 id="五、vscode的安装"><a href="#五、vscode的安装" class="headerlink" title="五、vscode的安装"></a>五、vscode的安装</h2><p>vscode 的安装 </p><ul><li>浏览器下载deb</li><li>sudo dpkg -i 安装包<br>六、超级终端的安装<br>sudo </li></ul><h2 id="七、cmake的安装升级"><a href="#七、cmake的安装升级" class="headerlink" title="七、cmake的安装升级"></a>七、cmake的安装升级</h2><p>1、官网安装<br><a href="https://cmake.org/download/">https://cmake.org/download/</a><br>下载tar ;linux版本即可<br>2、解压后编译</p><p>指引到目录下，进行编译即可</p><pre><code>cd ~/Downloads/cmake-3.22.2./configuremakesudo make install</code></pre><p>3、版本覆盖</p><pre><code>    在解压后编译 后，其实再一开始不卸载老版本的cmake的的时候，安装编译新版本的是不能立刻变更的，需要软连接覆盖的。使用which cmake查找cmake的安装路径，新版本的cmake默认编译安装的路径是在/usr/local/bin/cmake，而我们系统会默认去/usr/bin中去寻找老版本的cmake。做一个链接覆盖即可：</code></pre><p>sudo ln -sf /usr/local/bin/cmake /usr/bin</p><h2 id="八、升级gcc"><a href="#八、升级gcc" class="headerlink" title="八、升级gcc"></a>八、升级gcc</h2><p>1.出现下面情况<br>lib/libxslab2.so: undefined reference to<br>`std::__cxx11::basic_stringstream<char, std::char_traits<char>,<br>std::allocator<char> &gt;::basic_stringstream()@GLIBCXX_3.4.26’</p><p>2、解决方案</p><h1 id="Install-and-use-gcc9"><a href="#Install-and-use-gcc9" class="headerlink" title="Install and use gcc9"></a>Install and use gcc9</h1><p>sudo add-apt-repository ppa:ubuntu-toolchain-r/test<br>sudo apt update<br>sudo apt install gcc-9<br>sudo apt install g++-9<br>sudo rm /usr/bin/gcc<br>sudo rm /usr/bin/g++<br>sudo ln -s /usr/bin/gcc-9 /usr/bin/gcc<br>sudo ln -s /usr/bin/g++-9 /usr/bin/g++</p><h2 id="九、安装配置rplidar-思岚雷达1）"><a href="#九、安装配置rplidar-思岚雷达1）" class="headerlink" title="九、安装配置rplidar(思岚雷达1）"></a>九、安装配置rplidar(思岚雷达1）</h2><p>mkdir -p rplidar/src<br>cd rplidar/src<br>git clone <a href="https://github.com/Slamtec/rplidar_ros.git">https://github.com/Slamtec/rplidar_ros.git</a><br>cd ..<br>catkin_make<br>sudo gedit ~/.bashrc<br><!-- 在文件最后加入 --><br>source /home/yunfang/rplidar/devel/setup.bash(最好使用绝对路径)<br><!-- 保存并退出 --><br>source ~/.bashrc<br><!-- 在插上雷达之后要进行以下工作 --><br><!-- 检查rplidar串口的权限 --><br>ls -l /dev |grep ttyUSB<br><!-- 输入指令添加权限(我这里是USB0) --><br>sudo chmod 666 /dev/ttyUSB0<br><!-- 启动雷达 --><br>roslaunch rplidar_ros rplidar_s2.launch</p><h2 id="十、安装-Pangolin"><a href="#十、安装-Pangolin" class="headerlink" title="十、安装 Pangolin"></a>十、安装 Pangolin</h2><p>1.安装依赖<br>sudo apt update<br>sudo apt upgrade<br>sudo apt install libglew-dev cmake libboost-dev libboost-thread-dev<br>libboost-filesystem-dev libeigen3-dev -y</p><p>2.进⼊ 创建目录并进入<br>mkdir Pangolin<br>cd Pangolin<br>git clone <a href="https://github.com/stevenlovegrove/Pangolin.git">https://github.com/stevenlovegrove/Pangolin.git</a><br>cd Pangolinmkdir build &amp;&amp; cd build<br>cmake ..<br>sudo make -j8<br>sudo make install</p><p>更新动态库链接</p><p>sudo ldconfig</p><h2 id="十一、rosdep失败使用rosdepc"><a href="#十一、rosdep失败使用rosdepc" class="headerlink" title="十一、rosdep失败使用rosdepc"></a>十一、rosdep失败使用rosdepc</h2><h2 id="十二、安装并配置-opencv4-6-0"><a href="#十二、安装并配置-opencv4-6-0" class="headerlink" title="十二、安装并配置 opencv4.6.0"></a>十二、安装并配置 opencv4.6.0</h2><p>参考⽹址⼀ <a href="https://blog.csdn.net/weixin_44796670/article/details/115900538">https://blog.csdn.net/weixin_44796670/article/details/115900538</a><br>参考⽹址⼆ <a href="https://blog.csdn.net/KIK9973/article/details/118830187?">https://blog.csdn.net/KIK9973/article/details/118830187?</a><br>ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=Ubuntu18.04 安装<br>OpenCV&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-4-<br>118830187.nonecase&amp;spm=1018.2226.3001.4187</p><p>1、安装依赖环境<br>sudo apt install -y g++<br>sudo apt install -y cmake<br>sudo apt install -y make<br>sudo apt install -y wget unzip<br>2、安装opencv的依赖库<br>sudo apt-get install build-essential libgtk2.0-dev libgtk-3-dev libavcodec-<br>dev libavformat-dev libjpeg-dev libswscale-dev libtiff5-dev</p><p>3、下载 opencv4.6.0 源⽂件<br>wget -O opencv.zip <a href="https://github.com/opencv/opencv/archive/4.6.0.zip">https://github.com/opencv/opencv/archive/4.6.0.zip</a><br>4、编译源⽂件<br>进⼊解压后的 opencv ⽂件夹中执⾏以下命令<br>mkdir build<br>cd build<br>cmake -D CMAKE_BUILD_TYPE=Release -D OPENCV_GENERATE_PKGCONFIG=YES ..<br>make -j12</p><p>PS: 这里的make -j12是根据所使⽤电脑的 CPU 核⼼数来选择的</p><p>5、安装动态库及头文件<br>sudo make install</p><p>6、配置 pkg-conﬁg 环境<br>sudo gedit /etc/profile.d/pkgconfig.sh<br>&lt;打开 config 文件，在文件后面加上一行&gt;<br>export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH<br>&lt;保存并退出&gt;<br>source /etc/profile</p><p>7、配置动态库环境<br>sudo gedit /etc/ld.so.conf.d/opencv4.conf<br>&lt;打开 config 文件，在该文件末尾加上 opencv 的 lib 路径&gt;<br>/usr/local/lib<br>&lt;保存并退出&gt;<br>sudo ldconfig</p><blockquote><p>引用说明：部分来自luper</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> SF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
            <tag> noetic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git的安装</title>
      <link href="/posts/c9ac0fa7.html"/>
      <url>/posts/c9ac0fa7.html</url>
      
        <content type="html"><![CDATA[<p>git的使用：<br>第一步: github 创建同名(文件夹)仓库<br>第二步：cd 到同名文件夹中<br>echo “# download” &gt;&gt; README.md<br>git init<br>(git add README.md)<br>git add .<br>git commit -m “first commit”<br>git branch -M main<br>每个仓库地址不一样<br>(git remote add origin <a href="https://github.com/aixiaocainiao/download.git">https://github.com/aixiaocainiao/download.git</a>)<br>git push -u origin main</p>]]></content>
      
      
      <categories>
          
          <category> SF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu解压命令</title>
      <link href="/posts/e61dc118.html"/>
      <url>/posts/e61dc118.html</url>
      
        <content type="html"><![CDATA[<h1 id="ubuntu压缩指令"><a href="#ubuntu压缩指令" class="headerlink" title="ubuntu压缩指令"></a>ubuntu压缩指令</h1><h2 id="详情"><a href="#详情" class="headerlink" title="详情"></a>详情</h2><pre><code>tgz格式解压到当前文件夹：tar -zxvf xxx.tar.gzzip格式解压到当前文件夹：unzip xxx.ziptar.xz格式解压首先：xz -d xxx.tar.xz 解压得到tar文件 ;其次：tar -xvf xxx.tar得到完整解压文件。文件夹压缩：sudo tar jcvf xxx.tar.bz2 xxx</code></pre><h2 id="一、解压-tar-gz格式到指定的目录下："><a href="#一、解压-tar-gz格式到指定的目录下：" class="headerlink" title="一、解压.tar.gz格式到指定的目录下："></a>一、解压.tar.gz格式到指定的目录下：</h2><p>命令格式为：tar -zxvf 【压缩包文件名.tar.gz】 -C 【路径】/</p><p>例如：tar -zxvf japan.tar.gz -C /tmp/</p><h2 id="二、解压-tar-bz2格式到指定的目录下："><a href="#二、解压-tar-bz2格式到指定的目录下：" class="headerlink" title="二、解压.tar.bz2格式到指定的目录下："></a>二、解压.tar.bz2格式到指定的目录下：</h2><p>命令格式：tar -jxvf 【压缩包文件名.tar.bz2】 -C 【路径】/</p><p>例如：tar -zxvf japan.tar.bz2 -C /tmp/</p><h2 id="三、压缩-tar-gz格式到指定目录下"><a href="#三、压缩-tar-gz格式到指定目录下" class="headerlink" title="三、压缩.tar.gz格式到指定目录下"></a>三、压缩.tar.gz格式到指定目录下</h2><p>命令格式：tar -zcvf 【目录】/ 【压缩包文件名.tar.gz】【源文件】</p><p>例如：tar -zcvf /tmp/test.tar.gz japan/</p><p>注意：一次压缩多个文件直接在源文件后用空格格开即可</p><h2 id="四、压缩-tar-bz2格式到指定目录下"><a href="#四、压缩-tar-bz2格式到指定目录下" class="headerlink" title="四、压缩.tar.bz2格式到指定目录下"></a>四、压缩.tar.bz2格式到指定目录下</h2><p>命令格式：tar -jcvf 【目录】/ 【压缩包文件名.tar.gz】【源文件】</p><p>例如：tar -jcvf /tmp/test.tar.bz2 japan/</p><p>注意：一次压缩多个文件直接在源文件后用空格格开即可</p><p>扩展资料</p><p>每条选项以及命令直接的空格一定要打，Linux严格区分大小写，输入时注意大小写。</p><p>tar在Linux上是常用的打包、压缩、加压缩工具，他的参数很多，常用的压缩与解压缩参数有：</p><p>-c ：create 建立压缩档案的参数；</p><p>-x ： 解压缩压缩档案的参数；</p><p>-z ： 是否需要用gzip压缩；</p><p>-v： 压缩的过程中显示档案；</p><p>-f： 置顶文档名，在f后面立即接文件名，不能再加参数<br>————————————————</p><h2 id="五、删除指令"><a href="#五、删除指令" class="headerlink" title="五、删除指令"></a>五、删除指令</h2><p>5.1、强制删除</p><p>sudo rm -rf +文件夹名字</p><hr><p>5.2、其他</p><p>wstool merge -t src <a href="https://ghproxy.com/https://raw.githubusercontent.com/cartographer-project/cartographer_ros/master/cartographer_ros.rosinstall">https://ghproxy.com/https://raw.githubusercontent.com/cartographer-project/cartographer_ros/master/cartographer_ros.rosinstall</a></p><p>uri: <a href="https://github.com/cartographer-project/cartographer.git">https://github.com/cartographer-project/cartographer.git</a></p><p>uri: <a href="https://github.com/cartographer-project/cartographer_ros.git">https://github.com/cartographer-project/cartographer_ros.git</a></p><p>carto packxml<br>46行</p><depend>libabsl-dev</depend><blockquote><p>版权声明：本文为CSDN博主「晓风笙」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/weixin_49285070/article/details/124261150">https://blog.csdn.net/weixin_49285070/article/details/124261150</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> SF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> 压缩命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>导航原理</title>
      <link href="/posts/cb0cb908.html"/>
      <url>/posts/cb0cb908.html</url>
      
        <content type="html"><![CDATA[<h1 id="导航原理"><a href="#导航原理" class="headerlink" title="导航原理"></a>导航原理</h1><h2 id="一、第一部分"><a href="#一、第一部分" class="headerlink" title="一、第一部分"></a>一、第一部分</h2><h3 id="1-1密匙"><a href="#1-1密匙" class="headerlink" title="1.1密匙"></a>1.1密匙</h3><p>tolen url<br>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</p><h2 id="1-2-导航组成"><a href="#1-2-导航组成" class="headerlink" title="1.2 导航组成"></a>1.2 导航组成</h2><p>1.全局地图（全局概览图 ：定位和路径规划）<br>2.自身地位：（确定在地图中的位置）<br>3.路径规划：（全局路径规划+局部路径规划）<br>4.运动控制：（控制速度和方向）<br>5.环境感知：（感知周围环境）</p><h2 id="二、代价地图组成（多层叠加）"><a href="#二、代价地图组成（多层叠加）" class="headerlink" title="二、代价地图组成（多层叠加）"></a>二、代价地图组成（多层叠加）</h2><p>1.静态层 —-slam绘制的静态地图<br>2.障碍物层 —导航中传感器感知的障碍物<br>3.膨胀层  —为了避免碰撞而设置的安全区域</p><p>4.自定义层 —根据业务自设置的地图数据 （例如在地图中添加一个虚拟墙）</p><p>—————————膨胀空间的设置可以参考非自由空间。<br>致命障碍:栅格值为254，此时障碍物与机器人中心重叠，必然发生碰撞；<br>内切障碍:栅格值为253，此时障碍物处于机器人的内切圆内，必然发生碰撞；<br>外切障碍:栅格值为[128,252]，此时障碍物处于其机器人的外切圆内，处于碰撞临界，不一定发生碰撞；<br>非自由空间:栅格值为[1,127]，此时机器人处于障碍物附近，属于危险警戒区，进入此区域，将来可能会发生碰撞；<br>自由区域:栅格值为0，此处机器人可以自由通过；<br>未知区域:栅格值为255，还没探明是否有障碍物。</p>]]></content>
      
      
      <categories>
          
          <category> Slam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> navigation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ros指令</title>
      <link href="/posts/50f3c42c.html"/>
      <url>/posts/50f3c42c.html</url>
      
        <content type="html"><![CDATA[<h1 id="ros指令"><a href="#ros指令" class="headerlink" title="ros指令"></a>ros指令</h1><h2 id="一、理解"><a href="#一、理解" class="headerlink" title="一、理解"></a>一、理解</h2><p>odm  framd_id odm_combined<br>map  map<br>nase_frame_id base_footprint</p><p>scan  scan<br> 查看某个具体的消息 需要使用管道<br>rosmsg list | grep -i 话题名称<br>校园网址<br><a href="https://120.199.39.54:7090/zmcc/indexForce.wlan?wlanuserip=10.137.237.63&amp;wlanacname=0437.0571.571.00">https://120.199.39.54:7090/zmcc/indexForce.wlan?wlanuserip=10.137.237.63&amp;wlanacname=0437.0571.571.00</a></p><p>C语言学习中递归函数<br>ctrl+shift+空格出现代码提示<br>使用rosparam导入参数<br>设置的参数.yaml文件中 需要加空格 例如bg_R: 100<br>rosparam 便签 会率先执行 所以在使用dump导出参数的时候需要自己直接写一个launch文件</p><p>写代码之前操作</p><p>mkdir -p xxx_ws/src(必须得有 src)<br>cd xxx_ws<br>catkin_make<br>cd xxx_ws<br>code .</p><p>rviz中 ctrl+shift+鼠标可以拖动位置<br>args=”-d $(find urdf01_rviz)/config/show_mycar.rviz”<br>这玩意保存的时配置 不是rviz里面显示的东西<br>solidworks<br>joint origin是joint相对于parent的位置<br>[joint_state_publisher-4] process has died [pid 12169, exit code 1, cmd /opt/ros/melodic/lib/joint_state_publisher/joint_state_publisher <strong>name:=joint_state_publisher </strong>log:=/home/yunfang/.ros/log/3c02610c-bfaa-11ed-a76e-30d16b56c4c1/joint_state_publisher-4.log].<br>log file: /home/yunfang/.ros/log/3c02610c-bfaa-11ed-a76e-30d16b56c4c1/joint_state_publisher-4*.log</p><p>出现下面的错误 请删除掉urdf里面的中文注释 melidic中不能有一点点中文<br>evince mycar.pdf<br>arbotix报错，进入src下的arbotix_ros功能包，进入arbotix_python，进入bin，进入arbotix_driver<br>将第一行中的python的运行版本从3改为2.7运行就可以了<br>rviz中fixed frame为 odm<br>gazebo有进程问题 请执行下面指令 直接杀死<br>killall gzserver</p><p>killall gzclient</p><p>tar -xvf arduino-1.x.y-linux64.tar.xz<br>tar解压命令 </p><node name="playbag" pkg="rosbag" type="play"      args="--clock $(arg bag_filename)" />]]></content>
      
      
      <categories>
          
          <category> Slam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言学习之malloc</title>
      <link href="/posts/58eeb5e1.html"/>
      <url>/posts/58eeb5e1.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、C语言学习之malloc"><a href="#一、C语言学习之malloc" class="headerlink" title="一、C语言学习之malloc"></a>一、C语言学习之malloc</h1><h2 id="1、函数详解"><a href="#1、函数详解" class="headerlink" title="1、函数详解"></a>1、函数详解</h2><ul><li><p>1.函数介绍</p><p>头文件: stdlib.h<br>malloc:<br>函数原型：void * malloc(size_t size);<br>size_t就是unsigned int（无符号整型）</p><p>这个函数的作用就是在动态存储区中分配一个长度为size个字节的连续空间，并返回指向该空间的指针。</p></li><li><p>2.返回参数</p><p>1）如果开辟成功，则返回一个指向开辟好空间的指针。<br>2）如果开辟失败，则返回一个NULL指针，因此malloc的返回值一定要做检查。<br>3）返回值的类型是void * ，所以malloc函数并不知道开辟空间的类型，具体在使用的时候使用者自己来决定。<br>4）如果参数size为0，malloc的行为是标准是未定义的，取决于编译器。</p></li></ul><h2 id="2、动态开辟的空间如何释放和回收呢？"><a href="#2、动态开辟的空间如何释放和回收呢？" class="headerlink" title="2、动态开辟的空间如何释放和回收呢？"></a>2、动态开辟的空间如何释放和回收呢？</h2><ul><li>C语言提供了一个专门完成这个功能的库函数— - free<br>free</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">函数原型：<span class="type">void</span> <span class="title function_">free</span><span class="params">(<span class="type">void</span>* p)</span></span><br></pre></td></tr></table></figure><ul><li><p>free的作用就是释放指针变量p所指向的动态空间，使这部分空间能够重新被利用。</p><p>1）如果参数ptr指向的空间不是动态开辟的，那free函数的行为是未  定义的。<br>2）如果参数 ptr是NULL指针，则函数什么事都不做。</p></li></ul><p>注意： 用malloc申请的空间，里面的内容是随机值，如果不初始化的话，可能就会得到一些意想不到的值；<br>理解：如果参数ptr指向的空间不是动态开辟的，那free函数的行为是未定义的。</p><h1 id="二、C语言学习之calloc"><a href="#二、C语言学习之calloc" class="headerlink" title="二、C语言学习之calloc"></a>二、C语言学习之calloc</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">函数原型：void * calloc(size_t num, size_t size);</span><br></pre></td></tr></table></figure><ul><li>函数的功能是为num 个大小为size的元素开辟一块空间，并且把空间的每个字节初始化为O</li><li>与函数ma1loc的区别只在于calloc会在返回地址之前把申请的空间的每个字节初始化为全0。</li></ul><h1 id="三、数组指针和指针数组学习"><a href="#三、数组指针和指针数组学习" class="headerlink" title="三、数组指针和指针数组学习"></a>三、数组指针和指针数组学习</h1><ul><li><p>数组指针：是指针</p></li><li><p>~~~c<br>例如:int (<em>p)[10] = &arr;<br>我们已经熟悉︰<br>整形指针 : int</em> i pint; 能够指向整形数据的指针。<br>浮点型指针 : float* pf; 能够指向浮点型数据的指针。<br>那数组指针应该是︰能够指向数组的指针。<br>数组指针和指针数组要区分开来。<br>整型指针— - 指向整型的指针</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">~~~c</span><br><span class="line">int a = 10;</span><br><span class="line">int* pa = &amp;a;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字符指针-- - 指向字符的指针</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> ch = <span class="string">&#x27;w&#x27;</span>;</span><br><span class="line"><span class="type">char</span>* pc = &amp;ch;</span><br></pre></td></tr></table></figure></li><li><p>数组指针— - 指向数组的指针</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> arr[<span class="number">10</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;</span><br><span class="line"><span class="comment">//int* p = arr;// 数组名是首元素地址</span></span><br><span class="line"><span class="comment">//数组指针 存放数组的指针变量</span></span><br><span class="line"><span class="type">int</span>(*p)[<span class="number">10</span>] = &amp;arr;<span class="comment">//(*p)代表p是指针变量</span></span><br><span class="line"><span class="comment">//该指针指向了一个数组，数组10个元素，每个元素的类型是int</span></span><br><span class="line"><span class="comment">//如果不用括号将*p括起来，写成int* p[10]，这是指针数组</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><pre><code>    函数指针和指针函数</code></pre><h2 id="3-1复习"><a href="#3-1复习" class="headerlink" title="3.1复习"></a>3.1复习</h2><h3 id="3-1常量字符串"><a href="#3-1常量字符串" class="headerlink" title="3.1常量字符串"></a>3.1常量字符串</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span></span><br><span class="line"><span class="comment">//arr = &amp;arr[0] 数组首地址</span></span><br><span class="line"><span class="comment">//&amp;arr 数组的地址</span></span><br><span class="line"><span class="number">2.</span></span><br><span class="line"><span class="type">char</span>* ps = <span class="string">&quot;bacf&quot;</span>;  最好写成<span class="type">const</span> <span class="type">char</span>* ps = <span class="string">&quot;bacf&quot;</span> </span><br><span class="line">常量区中的内容在整个程序的执行期间是不允许被修改的，且同一份常量字符串只会创建一份，不会重复创建存储。   </span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span>* ps = <span class="string">&quot;bacf&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,ps);</span><br><span class="line">这种方式是将字符串的首地址放到指针中，通过指针可以找到该字符串（千万不要理解成将字符串放到指针里面去，这是不可能的）。（类似与数组名就是首元素地址，但是跟数组还是有所区别的，这个字符串是一个常量字符串，无法被改变</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1:</span></span><br><span class="line"><span class="type">char</span> arr[<span class="number">5</span>];</span><br><span class="line"><span class="type">char</span>(*pa)[<span class="number">5</span>] = &amp;arr;</span><br><span class="line"><span class="comment">//2:</span></span><br><span class="line"><span class="type">char</span>* ch[<span class="number">8</span>];</span><br><span class="line"><span class="type">char</span>* (*pc)[<span class="number">8</span>] = &amp;ch;</span><br><span class="line"><span class="comment">//3:</span></span><br><span class="line"><span class="type">int</span>(*p)[<span class="number">10</span>];</span><br><span class="line"><span class="comment">//解释: p先和*结合，说明p是一个指针变量，然后指着指向的是一个大小为10个整型的数组。所以p是一个指针，指向一个数组，叫数组指针。</span></span><br><span class="line"><span class="comment">//这里要注意:[]的优先级要高于*号的，所以必须加上(）来保证p先和*结合。</span></span><br></pre></td></tr></table></figure><h3 id="3-2函数指针"><a href="#3-2函数指针" class="headerlink" title="3.2函数指针"></a>3.2函数指针</h3><ul><li>1.注意：<pre><code>&amp; 函数名 和 函数名均表示函数的地址！数组名 != &amp;数组名函数名 == &amp;函数名</code></pre></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> (*pd)(<span class="type">int</span>,<span class="type">int</span>) = &amp;Sdd;pd的类型是<span class="type">int</span> (*)(<span class="type">int</span>,<span class="type">int</span>)</span><br><span class="line"><span class="type">int</span> sum = (*pd)(<span class="number">2</span>,<span class="number">3</span>) 和 <span class="type">int</span> sum = pd(<span class="number">2</span>,<span class="number">30</span>)一样的</span><br><span class="line">注意:</span><br><span class="line">既然这个地方的 * 可以省略，那么我们在使用的时候 * 可以用多个，也可以不要， * 号在这里就是一个摆设，这个地方放 * 是为了方便理解+</span><br></pre></td></tr></table></figure><ul><li>学习指针。<br>函数指针数组<br>那要把函数的地址存到一个数组中，那这个数组就叫函数指针数组</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- <span class="type">int</span> (*parr1[<span class="number">10</span>])();</span><br><span class="line">  <span class="type">int</span>* parr2[<span class="number">10</span>]();</span><br><span class="line">  <span class="type">int</span> (*)() parr3[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>office windows 破解教程</title>
      <link href="/posts/ba300709.html"/>
      <url>/posts/ba300709.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、使用教程"><a href="#一、使用教程" class="headerlink" title="一、使用教程"></a>一、使用教程</h1><h2 id="1、下载链接"><a href="#1、下载链接" class="headerlink" title="1、下载链接"></a>1、下载链接</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">点击下方超链接打开百度网盘，保存下载安装一气呵成</span><br><span class="line">通过百度网盘分享的文件：HEU_KMS_…</span><br><span class="line">链接:https://pan.baidu.com/s/1jH9IfEJzWwDvWC5hPCjKHg?pwd=6gu7 </span><br><span class="line">提取码:6gu7</span><br><span class="line">复制这段内容打开「百度网盘APP 即可获取」</span><br></pre></td></tr></table></figure><p><a href="https://pan.baidu.com/s/1jH9IfEJzWwDvWC5hPCjKHg?pwd=6gu7">软件百度网盘链接</a></p><h2 id="2、破解流程"><a href="#2、破解流程" class="headerlink" title="2、破解流程"></a>2、破解流程</h2><h3 id="2-1进入软件页面"><a href="#2-1进入软件页面" class="headerlink" title="2.1进入软件页面"></a>2.1进入软件页面</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">综述：</span><br><span class="line">进入页面后 查看windows状态有个小^ 点击 选择你想要激活的软件</span><br><span class="line">eg:点击 查看office状态 之后 选中上面的开始按钮 </span><br><span class="line">然后会有一个进度条  可能有点慢 等到100% 之后 会出现激活的时长</span><br><span class="line">一般为半年  半年之后再次激活使用即可</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">软件如图所示：</span><br></pre></td></tr></table></figure><p><img src="https://c.1ovv.com/2023/04/04/oy507.png" alt="软件页面"></p><h3 id="2-2选中以下按钮"><a href="#2-2选中以下按钮" class="headerlink" title="2.2选中以下按钮"></a>2.2选中以下按钮</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">点击查看office激活状态</span><br></pre></td></tr></table></figure><p><img src="https://c.1ovv.com/2023/04/04/oyjS2.png" alt="选中查看office激活状态选项"></p><h3 id="2-3点击开始"><a href="#2-3点击开始" class="headerlink" title="2.3点击开始"></a>2.3点击开始</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">点击开始 </span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">详解:</span><br><span class="line">软件会自动识别windows和office的激活状态 一般软件会自动激活windows和office(也就是说选中查看office激活状态和查看windows激活状态都是一样的)</span><br></pre></td></tr></table></figure><p><img src="https://c.1ovv.com/2023/04/04/oyTuP.png" alt="出现下面弹框"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">恭喜你 成功完成破解</span><br><span class="line">180天之后再来找我吧 </span><br><span class="line">当然网上有直接破解的 你可以再去找找哦</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pojie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown学习</title>
      <link href="/posts/cd8aec95.html"/>
      <url>/posts/cd8aec95.html</url>
      
        <content type="html"><![CDATA[<h1 id="MarkDown语法快速入门"><a href="#MarkDown语法快速入门" class="headerlink" title="MarkDown语法快速入门"></a>MarkDown语法快速入门</h1><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码块语法</span></span><br><span class="line">~~~java 回车</span><br><span class="line">~~~shell 回车</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p><strong>2.shell代码</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//Linux下spring的用法</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">java -jar blog start</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>1.java代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-标题"><a href="#2-标题" class="headerlink" title="2.标题"></a>2.标题</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//标题语法</span></span><br><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">###三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="3-字体"><a href="#3-字体" class="headerlink" title="3.字体"></a>3.字体</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加粗</span></span><br><span class="line">**内容**</span><br><span class="line"><span class="comment">//代码高亮提醒</span></span><br><span class="line">==内容==</span><br><span class="line"><span class="comment">//删除线</span></span><br><span class="line">~~内容~~</span><br><span class="line"><span class="comment">//斜体</span></span><br><span class="line">*内容*</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>//加粗<br><strong>内容</strong><br>//代码高亮提醒<br>== 内容 ==</p><p>//删除线<br><del>内容</del><br>//斜体<br><em>内容</em></p><h2 id="4-引用"><a href="#4-引用" class="headerlink" title="4.引用"></a>4.引用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引用语法</span></span><br><span class="line">&gt;内容</span><br><span class="line">&gt;作者：芳子</span><br><span class="line">&gt;&gt;作者：芳子</span><br><span class="line">&gt;&gt;&gt;作者：芳子</span><br></pre></td></tr></table></figure><p>//引用语法</p><blockquote><p>内容<br>作者：芳子</p><blockquote><p>作者：芳子</p><blockquote><p>作者：芳子</p></blockquote></blockquote></blockquote><h2 id="5-分割线"><a href="#5-分割线" class="headerlink" title="5.分割线"></a>5.分割线</h2><figure class="highlight plaintext"><figcaption><span>a</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//分割线</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">//分割线2</span><br><span class="line">***</span><br></pre></td></tr></table></figure><hr><hr><h2 id="6-图片插入"><a href="#6-图片插入" class="headerlink" title="6.图片插入"></a>6.图片插入</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在线图片</span></span><br><span class="line">！[我的照片(名字)](地址)</span><br><span class="line">！[我的照片](/img/me.png)  --图片路径</span><br><span class="line"><span class="comment">//</span></span><br></pre></td></tr></table></figure><p><img src="https://picsum.photos/1920/942" alt="照片"></p><p><img src="C:\Users\18338\Pictures\weixin.jpg" alt="照片"></p><h2 id="7、超链接"><a href="#7、超链接" class="headerlink" title="7、超链接"></a>7、超链接</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//超链接语法</span></span><br><span class="line">[我的github地址](https:<span class="comment">//aixiaocainiao.github.io/)</span></span><br></pre></td></tr></table></figure><p>//超链接语法<br><a href="https://aixiaocainiao.github.io/">我的github地址</a></p><h2 id="8-列表"><a href="#8-列表" class="headerlink" title="8.列表"></a>8.列表</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//无序列表</span></span><br><span class="line">- 目录<span class="number">1</span></span><br><span class="line">- 目录<span class="number">2</span></span><br><span class="line">- 目录<span class="number">3</span></span><br><span class="line">短gang -</span><br><span class="line">按住空格</span><br><span class="line">- </span><br><span class="line"><span class="comment">//有序列表</span></span><br><span class="line">数字键+.+名称</span><br></pre></td></tr></table></figure><ul><li><p>无序列表</p></li><li><p>目录1</p></li><li>目录2</li><li>目录3</li></ul><p>1.首页</p><p>2.目录</p><h2 id="9-表格"><a href="#9-表格" class="headerlink" title="9.表格"></a>9.表格</h2><div class="table-container"><table><thead><tr><th>成绩</th><th>语文</th><th>数学</th></tr></thead><tbody><tr><td></td><td>78</td><td>88</td></tr><tr><td></td><td>25</td><td>56</td></tr><tr><td></td><td>89</td><td>84</td></tr></tbody></table></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//杂七杂八的语法</span></span><br><span class="line">ctrl+/ 可以看到所有的源码</span><br><span class="line">    </span><br><span class="line"><span class="comment">//表格插入</span></span><br><span class="line">直接鼠标右键</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客文章</title>
      <link href="/posts/b24dd347.html"/>
      <url>/posts/b24dd347.html</url>
      
        <content type="html"><![CDATA[<h2 id="这是第一篇文章"><a href="#这是第一篇文章" class="headerlink" title="这是第一篇文章"></a>这是第一篇文章</h2><div class="note default simple"><p>nice to meet you! My baby!</p></div>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第三篇博客文章</title>
      <link href="/posts/6f36dd99.html"/>
      <url>/posts/6f36dd99.html</url>
      
        <content type="html"><![CDATA[<h2 id="这是第三篇文章"><a href="#这是第三篇文章" class="headerlink" title="这是第三篇文章"></a>这是第三篇文章</h2>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第二篇博客文章</title>
      <link href="/posts/c1539048.html"/>
      <url>/posts/c1539048.html</url>
      
        <content type="html"><![CDATA[<h2 id="这是第二篇文章"><a href="#这是第二篇文章" class="headerlink" title="这是第二篇文章"></a>这是第二篇文章</h2>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 标签2 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>archives</title>
      <link href="/archives/index.html"/>
      <url>/archives/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<h1 id="遇见便是最好"><a href="#遇见便是最好" class="headerlink" title="遇见便是最好"></a>遇见便是最好</h1><h1 id="下次再见的时候一定要提前告诉我"><a href="#下次再见的时候一定要提前告诉我" class="headerlink" title="下次再见的时候一定要提前告诉我"></a>下次再见的时候一定要提前告诉我</h1><h1 id="这样我就可以开心更久了"><a href="#这样我就可以开心更久了" class="headerlink" title="这样我就可以开心更久了"></a>这样我就可以开心更久了</h1>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/cat.css"/>
      <url>/css/cat.css</url>
      
        <content type="html"><![CDATA[body::-webkit-scrollbar {    width: 0;}.neko {    width: 64px;    height: 64px;    background-image: url("https://bu.dusays.com/2022/07/20/62d812db74be9.png");    position: absolute;    right: 32px;    background-repeat: no-repeat;    background-size: contain;    transform: translateX(50%);    cursor: pointer;    font-family: tzy;    font-weight: 600;    font-size: 16px;    color: #6f42c1;    display: none;}.neko::after {    display: none;    width: 100px;    height: 100px;    background-image: url("https://bu.dusays.com/2022/07/20/62d812d95e6f5.png");    background-size: contain;    z-index: 9999;    position: absolute;    right: 50%;    text-align: center;    line-height: 100px;    top: -115%;}.neko.showMsg::after {    content: attr(data-msg);    display: block;    overflow: hidden;    text-overflow: ellipsis;}.neko:hover::after {    content: attr(data-msg);    display: block;    overflow: hidden;    text-overflow: ellipsis;}.neko.fontColor::after {    color: #333;}/** * @description: 滚动条样式  跟猫二选一 */@media screen and (max-width:992px) {    ::-webkit-scrollbar {        width: 8px !important;        height: 8px !important    }    ::-webkit-scrollbar-track {        border-radius: 2em;    }    ::-webkit-scrollbar-thumb {        background-color: rgb(255 255 255 / .3);        background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent);        border-radius: 2em    }    ::-webkit-scrollbar-corner {        background-color: transparent    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/dark%20span.css"/>
      <url>/css/dark%20span.css</url>
      
        <content type="html"><![CDATA[/* 萌娘百科 “黑幕” *//* 以下内容引用自萌娘百科 https://zh.moegirl.org.cn/MediaWiki:Gadget-site-styles.css，感谢！ *//* MoeGirl Start *//* 参考https://www.initbili.top/2022/dba42bb67415/ *//* <span class="heimu" title="你知道的太多了">内容</span> */.heimu,.heimu rt{    background-color:gray;}.heimu,.heimu a,a .heimu,a.new .heimu,span.heimu a.new,span.heimu a.external,span.heimu a.external:visited,span.heimu a.extiw,span.heimu a.extiw:visited,span.heimu a.mw-disambig,span.heimu a.mw-redirect{    transition:color 0.13s linear;    color:gray;    text-shadow:none;}span.heimu:hover,span.heimu:active{    color:white;}span.heimu:hover a,a:hover span.heimu{    color:lightblue;}span.heimu:hover a:visited,a:visited:hover span.heimu{    color:#C5CAE9;}span.heimu:hover a.new,a.new:hover span.heimu{    color:#FCC;}span.heimu a.new:hover:visited,a.new:hover:visited span.heimu{    color:#EF9A9A;}span.heimu:hover a.extiw:visited,a.extiw:visited:hover span.heimu{    color:#D1C4E9;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {    background: transparent !important;  }  #page-header {    background: transparent !important;  }    /* 白天模式遮罩透明 */  #footer::before {    background: transparent !important;  }  #page-header::before {    background: transparent !important;  }    /* 夜间模式遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }/* 小冰分类分类磁铁黑夜模式适配 *//* 一般状态 */[data-theme="dark"] .magnet_link_context {    background: #1e1e1e;    color: antiquewhite;  }  /* 鼠标悬浮状态 */  [data-theme="dark"] .magnet_link_context:hover {    background: #3ecdf1;    color: #f2f2f2;  }/* 自定义字体没有整 因为不会下载 不会整 先留下记号 方便后期整*//* 翻页按钮居中 */#pagination {    width: 100%;    margin: auto;  }/* 一级菜单居中 导航栏自定义魔改 */#nav .menus_items {    position: absolute !important;    width: fit-content !important;    left: 50% !important;    transform: translateX(-50%) !important;  }  /* 子菜单横向展示 */  #nav .menus_items .menus_item:hover .menus_item_child {    display: flex !important;  }  /* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */  .menus_items .menus_item:nth-child(5) .menus_item_child {    left: -38px;  }/* 日间模式不生效 黑夜霓虹灯2.0（纯CSS实现） */[data-theme="light"] #site-name,[data-theme="light"] #site-title,[data-theme="light"] #site-subtitle,[data-theme="light"] #post-info {  animation: none;}/* 夜间模式生效 */[data-theme="dark"] #site-name,[data-theme="dark"] #site-title {  animation: light_15px 10s linear infinite;}[data-theme="dark"] #site-subtitle {  animation: light_10px 10s linear infinite;}[data-theme="dark"] #post-info {  animation: light_5px 10s linear infinite;}/* 关键帧描述 */@keyframes light_15px {  0% {    text-shadow: #5636ed 0 0 15px;  }  12.5% {    text-shadow: #11ee5e 0 0 15px;  }  25% {    text-shadow: #f14747 0 0 15px;  }  37.5% {    text-shadow: #f1a247 0 0 15px;  }  50% {    text-shadow: #f1ee47 0 0 15px;  }  50% {    text-shadow: #b347f1 0 0 15px;  }  62.5% {    text-shadow: #002afa 0 0 15px;  }  75% {    text-shadow: #ed709b 0 0 15px;  }  87.5% {    text-shadow: #39c5bb 0 0 15px;  }  100% {    text-shadow: #5636ed 0 0 15px;  }}@keyframes light_10px {  0% {    text-shadow: #5636ed 0 0 10px;  }  12.5% {    text-shadow: #11ee5e 0 0 10px;  }  25% {    text-shadow: #f14747 0 0 10px;  }  37.5% {    text-shadow: #f1a247 0 0 10px;  }  50% {    text-shadow: #f1ee47 0 0 10px;  }  50% {    text-shadow: #b347f1 0 0 10px;  }  62.5% {    text-shadow: #002afa 0 0 10px;  }  75% {    text-shadow: #ed709b 0 0 10px;  }  87.5% {    text-shadow: #39c5bb 0 0 10px;  }  100% {    text-shadow: #5636ed 0 0 10px;  }}@keyframes light_5px {  0% {    text-shadow: #5636ed 0 0 5px;  }  12.5% {    text-shadow: #11ee5e 0 0 5px;  }  25% {    text-shadow: #f14747 0 0 5px;  }  37.5% {    text-shadow: #f1a247 0 0 15px;  }  50% {    text-shadow: #f1ee47 0 0 5px;  }  50% {    text-shadow: #b347f1 0 0 5px;  }  62.5% {    text-shadow: #002afa 0 0 5px;  }  75% {    text-shadow: #ed709b 0 0 5px;  }  87.5% {    text-shadow: #39c5bb 0 0 5px;  }  100% {    text-shadow: #5636ed 0 0 5px;  }}/* 侧边栏个人信息卡片动态渐变色 */#aside-content > .card-widget.card-info {    background: linear-gradient(      -45deg,      #e8d8b9,      #eccec5,      #a3e9eb,      #bdbdf0,      #eec1ea    );    box-shadow: 0 0 5px rgb(66, 68, 68);    position: relative;    background-size: 400% 400%;    -webkit-animation: Gradient 10s ease infinite;    -moz-animation: Gradient 10s ease infinite;    animation: Gradient 10s ease infinite !important;  }  @-webkit-keyframes Gradient {    0% {      background-position: 0% 50%;    }    50% {      background-position: 100% 50%;    }    100% {      background-position: 0% 50%;    }  }  @-moz-keyframes Gradient {    0% {      background-position: 0% 50%;    }    50% {      background-position: 100% 50%;    }    100% {      background-position: 0% 50%;    }  }  @keyframes Gradient {    0% {      background-position: 0% 50%;    }    50% {      background-position: 100% 50%;    }    100% {      background-position: 0% 50%;    }  }    /* 黑夜模式适配 */  [data-theme="dark"] #aside-content > .card-widget.card-info {    background: #191919ee;  }    /* 个人信息Follow me按钮 */  #aside-content > .card-widget.card-info > #card-info-btn {    background-color: #3eb8be;    border-radius: 8px;  }/* 文章页H1-H6图标样式效果 *//* 控制风车转动速度 4s那里可以自己调节快慢 */h1::before,h2::before,h3::before,h4::before,h5::before,h6::before {  -webkit-animation: ccc 4s linear infinite;  animation: ccc 4s linear infinite;}/* 控制风车转动方向 -1turn 为逆时针转动，1turn 为顺时针转动，相同数字部分记得统一修改 */@-webkit-keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}@keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}/* 设置风车颜色 */#content-inner.layout h1::before {  color: #ef50a8;  margin-left: -1.55rem;  font-size: 1.3rem;  margin-top: -0.23rem;}#content-inner.layout h2::before {  color: #fb7061;  margin-left: -1.35rem;  font-size: 1.1rem;  margin-top: -0.12rem;}#content-inner.layout h3::before {  color: #ffbf00;  margin-left: -1.22rem;  font-size: 0.95rem;  margin-top: -0.09rem;}#content-inner.layout h4::before {  color: #a9e000;  margin-left: -1.05rem;  font-size: 0.8rem;  margin-top: -0.09rem;}#content-inner.layout h5::before {  color: #57c850;  margin-left: -0.9rem;  font-size: 0.7rem;  margin-top: 0rem;}#content-inner.layout h6::before {  color: #5ec1e0;  margin-left: -0.9rem;  font-size: 0.66rem;  margin-top: 0rem;}/* s设置风车hover动效 6s那里可以自己调节快慢*/#content-inner.layout h1:hover,#content-inner.layout h2:hover,#content-inner.layout h3:hover,#content-inner.layout h4:hover,#content-inner.layout h5:hover,#content-inner.layout h6:hover {  color: var(--theme-color);}#content-inner.layout h1:hover::before,#content-inner.layout h2:hover::before,#content-inner.layout h3:hover::before,#content-inner.layout h4:hover::before,#content-inner.layout h5:hover::before,#content-inner.layout h6:hover::before {  color: var(--theme-color);  -webkit-animation: ccc 6s linear infinite;  animation: ccc 6s linear infinite;}/* 加载进入页面的动画效果 */.loading-img {  background: url(https://q1.qlogo.cn/g?b=qq&nk=1310446718&s=5) no-repeat center center;  background-size: cover;}/* rightMenu 鼠标右键美化*/[data-theme='light'] #rightMenu{  display: none;  position: fixed;  width: 160px;  height: fit-content;  top: 10%;  left: 10%;  background-color: var(--card-bg);  border: 1px solid rgb(210,210,210);;  border-radius: 8px;  z-index: 100;  box-shadow: 3px 3px 5px #88888894;  background-color: var(--zhshier-white-acrylic1);  backdrop-filter: blur(30px);}[data-theme='dark'] #rightMenu{  display: none;  position: fixed;  width: 160px;  height: fit-content;  top: 10%;  left: 10%;  background-color: var(--card-bg);  border: 1px solid rgb(210,210,210);;  border-radius: 8px;  z-index: 100;  box-shadow: 3px 3px 5px #88888894;  background-color: var(--zhshier-black-acrylic1);  backdrop-filter: blur(30px);}#rightMenu .rightMenu-group{  padding: 7px 6px;}#rightMenu .rightMenu-group:not(:nth-last-child(1)){  border-bottom: 1px solid rgb(180,180,180);}#rightMenu .rightMenu-group.rightMenu-small{  display: flex;  justify-content: space-between;}#rightMenu .rightMenu-group .rightMenu-item{  height: 30px;  line-height: 30px;  border-radius: 8px;  transition: 0.3s;  color: var(--font-color);}#rightMenu .rightMenu-group.rightMenu-line .rightMenu-item{  display: flex;  height: 40px;  line-height: 40px;  padding: 0 4px;}#rightMenu .rightMenu-group .rightMenu-item:hover{  background-color: var(--text-bg-hover);  box-shadow: 0px 0px 5px var(--zhshier-border);}#rightMenu .rightMenu-group .rightMenu-item i{  display: inline-block;  text-align: center;  line-height: 30px;  width: 30px;  height: 30px;  padding: 0 5px;}#rightMenu .rightMenu-group .rightMenu-item span{  line-height: 30px;}#rightMenu:hover{  border: 1px solid var(--zhshier-blue);  /* box-shadow:0 0 3px var(--zhshier-blue)!important; */}#rightMenu .rightMenu-group.rightMenu-line .rightMenu-item *{  height: 40px;  line-height: 40px;}.rightMenu-group.hide{  display: none;}.rightMenu-item:hover{  color:white!important;  background-color:var(--zhshier-blue)!important;}:root{  --zhshier-border:#c9c9c9;  --zhshier-blue:#6cf;  --zhshier-black-acrylic1: #0008;  --zhshier-white-acrylic1:#fffd;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/social_card.css"/>
      <url>/css/social_card.css</url>
      
        <content type="html"><![CDATA[div#author-info__sayhi {    text-align: left;    background: var(--zhsher-white-op);    color: var(--font-color);    border: var(--style-border);    font-size: 12px;    margin-right: auto;    padding: 5px 8px;    border-radius: 12px;    width: fit-content;    display: inline;    margin-left: -1px}.card-widget .author-info-top {    margin: 15px auto 0;    display: flex;    justify-content: center}.card-widget .card-info-avatar {    display: inline-block;    position: relative}.card-widget.card-info .banner-button-group {    margin: 5px 0;    display: flex}#aside-content .card-info .banner-button {    height: 40px;    width: 100%;    border-radius: 20px;    justify-content: center}.card-widget.card-info .banner-button-group .banner-button {    padding: 20px 12px;    background: var(--zhsher-theme);    border-radius: 12px;    color: var(--zhsher-white);    display: flex;    align-items: center;    z-index: 1;    transition: all .3s ease 0s;    cursor: pointer}.card-widget.card-info .banner-button-group .banner-button .fas.fa-circle-arrow-up-right {    font-size: 1.3rem;    margin-right: 10px}.card-widget.card-info .banner-button-group .banner-button:hover {    background: var(--zhsher-main-op-deep);    color: var(--zhsher-white)}.card-info-avatar .avatar-img {    width: 100px;    height: 100px;    display: block}.card-info-avatar .author-status-box {    position: absolute;    bottom: 0;    left: calc(100% - 28px);    width: 28px;    height: 28px;    border: var(--style-border);    border-radius: 2em;    background-color: var(--zhsher-card-bg);    transition: .3s;    overflow: hidden}.card-info-avatar .author-status-box .author-status {    display: flex;    align-items: center;    justify-content: center;    height: 28px;    padding: 0 5px}.card-info-avatar .author-status-box:hover {    width: 105px}.card-info-avatar .author-status-box:hover .author-status span {    width: 105px;    margin-left: 4px}.card-info-avatar .author-status-box .author-status span {    width: 0;    font-size: 12px;    height: 100%;    overflow: hidden;    text-overflow: ellipsis;    white-space: nowrap;    transition: .3s}#aside-content > .card-info {    background: #fff url(https://img02.anzhiy.cn/adminuploads/1/2022/10/26/6358a07bf21fc.webp) top -24% center no-repeat;    position: relative}[data-theme=dark] #aside-content > .card-info {    background: var(--zhsher-card-bg)}@media screen and (max-width: 992px) {    #aside-content > .card-info {        background-size: 100% 70%    }}.card-widget .author-info__name {    line-height: 1.5em;    margin: 4px 0}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/readPercent.css"/>
      <url>/css/readPercent.css</url>
      
        <content type="html"><![CDATA[/* 返回顶部 */button#go-up #percent {    display: none;    font-weight: bold;    font-size: 15px !important;}button#go-up span {    font-size: 12px!important;    margin-right: -1px;}/* 鼠标滑动到按钮上时显示返回顶部图标 */button#go-up:hover i {    display: block !important;}button#go-up:hover #percent {    display: none !important;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/progress_bar.css"/>
      <url>/css/progress_bar.css</url>
      
        <content type="html"><![CDATA[.pace {    -webkit-pointer-events: none;    pointer-events: none;    -webkit-user-select: none;    -moz-user-select: none;    user-select: none;    z-index: 2000;    position: fixed;    margin: auto;    top: 10px;    left: 0;    right: 0;    height: 8px;    border-radius: 8px;    width: 4rem;    background: #eaecf2;    border: 1px #e3e8f7;    overflow: hidden;  }    .pace-inactive .pace-progress {    opacity: 0;    transition: 0.3s ease-in;  }    .pace .pace-progress {    -webkit-box-sizing: border-box;    -moz-box-sizing: border-box;    -ms-box-sizing: border-box;    -o-box-sizing: border-box;    box-sizing: border-box;    -webkit-transform: translate3d(0, 0, 0);    -moz-transform: translate3d(0, 0, 0);    -ms-transform: translate3d(0, 0, 0);    -o-transform: translate3d(0, 0, 0);    transform: translate3d(0, 0, 0);    max-width: 200px;    position: absolute;    z-index: 2000;    display: block;    top: 0;    right: 100%;    height: 100%;    width: 100%;    background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);    animation: gradient 1.5s ease infinite;    background-size: 200%;  }    .pace.pace-inactive {    opacity: 0;    transition: 0.3s;    top: -8px;  }  @keyframes gradient {    0% {      background-position: 0% 50%;    }    50% {      background-position: 100% 50%;    }    100% {      background-position: 0% 50%;    }  }  ]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/universe.css"/>
      <url>/css/universe.css</url>
      
        <content type="html"><![CDATA[/* 背景宇宙星光  */#universe{    display: block;    position: fixed;    margin: 0;    padding: 0;    border: 0;    outline: 0;    left: 0;    top: 0;    width: 100%;    height: 100%;    pointer-events: none;    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */    z-index: -1;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/cat.js"/>
      <url>/js/cat.js</url>
      
        <content type="html"><![CDATA[if (document.body.clientWidth > 992) {    function getBasicInfo() {        /* 窗口高度 */        var ViewH = $(window).height();        /* document高度 */        var DocH = $("body")[0].scrollHeight;        /* 滚动的高度 */        var ScrollTop = $(window).scrollTop();        /* 可滚动的高度 */        var S_V = DocH - ViewH;        var Band_H = ScrollTop / (DocH - ViewH) * 100;        return {            ViewH: ViewH,            DocH: DocH,            ScrollTop: ScrollTop,            Band_H: Band_H,            S_V: S_V        }    };    function show(basicInfo) {        if (basicInfo.ScrollTop > 0.001) {            $(".neko").css('display', 'block');        } else {            $(".neko").css('display', 'none');        }    }    (function ($) {        $.fn.nekoScroll = function (option) {            var defaultSetting = {                top: '0',                scroWidth: 6 + 'px',                z_index: 9999,                zoom: 0.9,                borderRadius: 5 + 'px',                right: 60 + 'px',                // 这里可以换为你喜欢的图片，例如我就换为了雪人，但是要抠图                nekoImg: "https://bu.dusays.com/2022/07/20/62d812db74be9.png",                hoverMsg: "喵喵喵~",                color: "#6f42c1",                during: 500,                blog_body: "body",            };            var setting = $.extend(defaultSetting, option);            var getThis = this.prop("className") !== "" ? "." + this.prop("className") : this.prop("id") !== "" ? "#" +                this.prop("id") : this.prop("nodeName");            if ($(".neko").length == 0) {                this.after("<div class=\"neko\" id=" + setting.nekoname + " data-msg=\"" + setting.hoverMsg + "\"></div>");            }            let basicInfo = getBasicInfo();            $(getThis)                .css({                    'position': 'fixed',                    'width': setting.scroWidth,                    'top': setting.top,                    'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',                    'z-index': setting.z_index,                    'background-color': setting.bgcolor,                    "border-radius": setting.borderRadius,                    'right': setting.right,                    'background-image': 'url(' + setting.scImg + ')',                    'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',                    'background-size': 'contain'                });            $("#" + setting.nekoname)                .css({                    'position': 'fixed',                    'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',                    'z-index': setting.z_index * 10,                    'right': setting.right,                    'background-image': 'url(' + setting.nekoImg + ')',                });            show(getBasicInfo());            $(window)                .scroll(function () {                    let basicInfo = getBasicInfo();                    show(basicInfo);                    $(getThis)                        .css({                            'position': 'fixed',                            'width': setting.scroWidth,                            'top': setting.top,                            'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',                            'z-index': setting.z_index,                            'background-color': setting.bgcolor,                            "border-radius": setting.borderRadius,                            'right': setting.right,                            'background-image': 'url(' + setting.scImg + ')',                            'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',                            'background-size': 'contain'                        });                    $("#" + setting.nekoname)                        .css({                            'position': 'fixed',                            'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',                            'z-index': setting.z_index * 10,                            'right': setting.right,                            'background-image': 'url(' + setting.nekoImg + ')',                        });                    if (basicInfo.ScrollTop == basicInfo.S_V) {                        $("#" + setting.nekoname)                            .addClass("showMsg")                    } else {                        $("#" + setting.nekoname)                            .removeClass("showMsg");                        $("#" + setting.nekoname)                            .attr("data-msg", setting.hoverMsg);                    }                });            this.click(function (e) {                btf.scrollToDest(0, 500)            });            $("#" + setting.nekoname)                .click(function () {                    btf.scrollToDest(0, 500)                });            return this;        }    })(jQuery);    $(document).ready(function () {        //部分自定义        $("#myscoll").nekoScroll({            bgcolor: 'rgb(0 0 0 / .5)', //背景颜色，没有绳子背景图片时有效            borderRadius: '2em',            zoom: 0.9        }        );        //自定义（去掉以下注释，并注释掉其他的查看效果）        /*        $("#myscoll").nekoScroll({            nekoname:'neko1', //nekoname，相当于id            nekoImg:'img/猫咪.png', //neko的背景图片            scImg:"img/绳1.png", //绳子的背景图片            bgcolor:'#1e90ff', //背景颜色，没有绳子背景图片时有效            zoom:0.9, //绳子长度的缩放值            hoverMsg:'你好~喵', //鼠标浮动到neko上方的对话框信息            right:'100px', //距离页面右边的距离            fontFamily:'楷体', //对话框字体            fontSize:'14px', //对话框字体的大小            color:'#1e90ff', //对话框字体颜色            scroWidth:'8px', //绳子的宽度            z_index:100, //不用解释了吧            during:1200, //从顶部到底部滑动的时长        });        */    })}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/gulpfile.js"/>
      <url>/js/gulpfile.js</url>
      
        <content type="html"><![CDATA[//用到的各个插件var gulp = require('gulp');var cleanCSS = require('gulp-clean-css');var htmlmin = require('gulp-html-minifier-terser');var htmlclean = require('gulp-htmlclean');var fontmin = require('gulp-fontmin');// gulp-testervar terser = require('gulp-terser');// 压缩jsgulp.task('compress', async() =>{  gulp.src(['./public/**/*.js', '!./public/**/*.min.js'])    .pipe(terser())    .pipe(gulp.dest('./public'))});//压缩cssgulp.task('minify-css', () => {    return gulp.src(['./public/**/*.css'])        .pipe(cleanCSS({            compatibility: 'ie11'        }))        .pipe(gulp.dest('./public'));});//压缩htmlgulp.task('minify-html', () => {    return gulp.src('./public/**/*.html')        .pipe(htmlclean())        .pipe(htmlmin({            removeComments: true, //清除html注释            collapseWhitespace: true, //压缩html            collapseBooleanAttributes: true,            //省略布尔属性的值，例如：<input checked="true"/> ==> <input />            removeEmptyAttributes: true,            //删除所有空格作属性值，例如：<input id="" /> ==> <input />            removeScriptTypeAttributes: true,            //删除<script>的type="text/javascript"            removeStyleLinkTypeAttributes: true,            //删除<style>和<link>的 type="text/css"            minifyJS: true, //压缩页面 JS            minifyCSS: true, //压缩页面 CSS            minifyURLs: true  //压缩页面URL        }))        .pipe(gulp.dest('./public'))});//压缩字体function minifyFont(text, cb) {  gulp    .src('./public/fonts/*.ttf') //原字体所在目录    .pipe(fontmin({      text: text    }))    .pipe(gulp.dest('./public/fontsdest/')) //压缩后的输出目录    .on('end', cb);}gulp.task('mini-font', (cb) => {  var buffers = [];  gulp    .src(['./public/**/*.html']) //HTML文件所在目录请根据自身情况修改    .on('data', function(file) {      buffers.push(file.contents);    })    .on('end', function() {      var text = Buffer.concat(buffers).toString('utf-8');      minifyFont(text, cb);    });});// 运行gulp命令时依次执行以下任务gulp.task('default', gulp.parallel(  'compress', 'minify-css', 'minify-html','mini-font'))]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/gray.js"/>
      <url>/js/gray.js</url>
      
        <content type="html"><![CDATA[if(PublicSacrificeDay()){    document.getElementsByTagName("html")[0].setAttribute("style","filter:gray !important;filter:grayscale(100%);-webkit-filter:grayscale(100%);-moz-filter:grayscale(100%);-ms-filter:grayscale(100%);-o-filter:grayscale(100%);");  }    function PublicSacrificeDay(){      var PSFarr=new Array("0403","0404","0405","0406","0414","0512","0707","0807","0814","0909","0918","0930","1025","1213");      //2020年4月4日 新冠肺炎哀悼日，清明节      //2010年4月14日，青海玉树地震      //2008年5月12日，四川汶川地震      //1937年7月7日,七七事变 又称卢沟桥事变      //2010年8月7日，甘肃舟曲特大泥石流        //8月14日，世界慰安妇纪念日      //1976年9月9日，毛主席逝世        //1931年9月18日，九一八事变        //烈士纪念日为每年9月30日      //1950年10月25日，抗美援朝纪念日      //1937年12月13日，南京大屠杀      var currentdate = new Date();      var str = "";      var mm = currentdate.getMonth()+1;      if(currentdate.getMonth()>9){        str += mm;      }else{        str += "0" + mm;      }      if(currentdate.getDate()>9){        str += currentdate.getDate();      }else{        str += "0" + currentdate.getDate();      }      if(PSFarr.indexOf(str)>-1){          return 1;      }else{          return 0;      }  }    ]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/readPercent.js"/>
      <url>/js/readPercent.js</url>
      
        <content type="html"><![CDATA[window.onscroll = percent;// 执行函数// 页面百分比function percent() {    let a = document.documentElement.scrollTop || window.pageYOffset, // 卷去高度        b = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight) - document.documentElement.clientHeight, // 整个网页高度        result = Math.round(a / b * 100), // 计算百分比        up = document.querySelector("#go-up") // 获取按钮    if (result <= 95) {        up.childNodes[0].style.display = 'none'        up.childNodes[1].style.display = 'block'        up.childNodes[1].innerHTML = result;    } else {        up.childNodes[1].style.display = 'none'        up.childNodes[0].style.display = 'block'    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/run.js"/>
      <url>/js/run.js</url>
      
        <content type="html"><![CDATA[var now = new Date();function createtime() {  now.setTime(now.getTime() + 1e3);  var e = new Date("04/03/2023 00:24:00"),    t = Math.trunc(234e8 + ((now - e) / 1e3) * 17),    a = (t / 1496e5).toFixed(6),    o = new Date("04/03/2023 12:00:00"),    n = (now - o) / 1e3 / 60 / 60 / 24,    r = Math.floor(n),    i = (now - o) / 1e3 / 60 / 60 - 24 * r,    s = Math.floor(i);  1 == String(s).length && (s = "0" + s);  var d = (now - o) / 1e3 / 60 - 1440 * r - 60 * s,    l = Math.floor(d);  1 == String(l).length && (l = "0" + l);  var g = (now - o) / 1e3 - 86400 * r - 3600 * s - 60 * l,    b = Math.round(g);  1 == String(b).length && (b = "0" + b);  let c = "";  (c =    s < 18 && s >= 9      ? `<img class='boardsign' src='https://sourcebucket.s3.ladydaily.com/badge/F小屋-科研摸鱼中.svg' title='浑水摸鱼罢了~'><br> <div style="font-size:13px;font-weight:bold">本站运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 下辈子见 ${r-227} 天 🚀</div>`      : `<img class='boardsign' src='https://sourcebucket.s3.ladydaily.com/badge/F小屋-下班休息啦.svg' title='终于下班啦~'><br> <div style="font-size:13px;font-weight:bold">本站运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 下辈子见 ${r-227} 天 🚀</div>`),    document.getElementById("workboard") &&      (document.getElementById("workboard").innerHTML = c);}setInterval(() => {  createtime();}, 1e3);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/social_card.js"/>
      <url>/js/social_card.js</url>
      
        <content type="html"><![CDATA[var zhsher = {    getTimeState: function () {        var element = (new Date).getHours(), time = "";        return 0 <= element && element <= 5 ? time = "晚安😴" : 5 < element && element <= 10 ? time = "早上好👋" : 10 < element && element <= 14 ? time = "中午好👋" : 14 < element && element <= 18 ? time = "下午好👋" : 18 < element && element <= 24 && (time = "晚上好👋"), time    },    sayhi: function () {        var element = document.getElementById("author-info__sayhi");        element && (element.innerHTML = zhsher.getTimeState() + "！我是")    }}zhsher.sayhi();]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js"/>
      <url>/js/runtime.js</url>
      
        <content type="html"><![CDATA[var now = new Date();function createtime() {  var grt = new Date("04/02/2023 23:26:00");  now.setTime(now.getTime() + 250);  var days = (now - grt) / 1e3 / 60 / 60 / 24,    dnum = Math.floor(days),    hours = (now - grt) / 1e3 / 60 / 60 - 24 * dnum,    hnum = Math.floor(hours);  1 == String(hnum).length && (hnum = "0" + hnum);  var minutes = (now - grt) / 1e3 / 60 - 1440 * dnum - 60 * hnum,    mnum = Math.floor(minutes);  1 == String(mnum).length && (mnum = "0" + mnum);  var seconds = (now - grt) / 1e3 - 86400 * dnum - 3600 * hnum - 60 * mnum,    snum = Math.round(seconds);  1 == String(snum).length && (snum = "0" + snum);  let currentTimeHtml = "";  (currentTimeHtml =    hnum < 18 && hnum >= 9      ? `<img class='boardsign' src='https://sourcebucket.s3.ladydaily.com/badge/F小屋-科研摸鱼中.svg' title='距离月入25k也就还差一个大佬带我~'><span class='textTip'> <br> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`      : `<img class='boardsign' src='https://sourcebucket.s3.ladydaily.com/badge/F小屋-下班休息啦.svg' title='下班了就该开开心心的玩耍，嘿嘿~'><span class='textTip'> <br> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`),    document.getElementById("workboard") && (document.getElementById("workboard").innerHTML = currentTimeHtml);}setInterval(() => {  createtime();}, 250);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/title.js"/>
      <url>/js/title.js</url>
      
        <content type="html"><![CDATA[//动态标题var OriginTitile = document.title;var titleTime;document.addEventListener('visibilitychange', function () {  if (document.hidden) {    //离开当前页面时标签显示内容    document.title = '👀跑哪里去了~';    clearTimeout(titleTime);  } else {    //返回当前页面时标签显示内容    document.title = '🐖抓到你啦～';    //两秒后变回正常标题    titleTime = setTimeout(function () {      document.title = OriginTitile;    }, 2000);  }});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[function dark() {  window.requestAnimationFrame =    window.requestAnimationFrame ||    window.mozRequestAnimationFrame ||    window.webkitRequestAnimationFrame ||    window.msRequestAnimationFrame;  var n,    e,    i,    h,    t = 0.05,    s = document.getElementById("universe"),    o = !0,    a = "180,184,240",    r = "226,225,142",    d = "226,225,224",    c = [];  function f() {    (n = window.innerWidth),      (e = window.innerHeight),      (i = 0.216 * n),      s.setAttribute("width", n),      s.setAttribute("height", e);  }  function u() {    h.clearRect(0, 0, n, e);    for (var t = c.length, i = 0; i < t; i++) {      var s = c[i];      s.move(), s.fadeIn(), s.fadeOut(), s.draw();    }  }  function y() {    (this.reset = function () {      (this.giant = m(3)),        (this.comet = !this.giant && !o && m(10)),        (this.x = l(0, n - 10)),        (this.y = l(0, e)),        (this.r = l(1.1, 2.6)),        (this.dx = l(t, 6 * t) + (this.comet + 1 - 1) * t * l(50, 120) + 2 * t),        (this.dy = -l(t, 6 * t) - (this.comet + 1 - 1) * t * l(50, 120)),        (this.fadingOut = null),        (this.fadingIn = !0),        (this.opacity = 0),        (this.opacityTresh = l(0.2, 1 - 0.4 * (this.comet + 1 - 1))),        (this.do = l(5e-4, 0.002) + 0.001 * (this.comet + 1 - 1));    }),      (this.fadeIn = function () {        this.fadingIn &&          ((this.fadingIn = !(this.opacity > this.opacityTresh)),          (this.opacity += this.do));      }),      (this.fadeOut = function () {        this.fadingOut &&          ((this.fadingOut = !(this.opacity < 0)),          (this.opacity -= this.do / 2),          (this.x > n || this.y < 0) && ((this.fadingOut = !1), this.reset()));      }),      (this.draw = function () {        if ((h.beginPath(), this.giant))          (h.fillStyle = "rgba(" + a + "," + this.opacity + ")"),            h.arc(this.x, this.y, 2, 0, 2 * Math.PI, !1);        else if (this.comet) {          (h.fillStyle = "rgba(" + d + "," + this.opacity + ")"),            h.arc(this.x, this.y, 1.5, 0, 2 * Math.PI, !1);          for (var t = 0; t < 30; t++)            (h.fillStyle =              "rgba(" +              d +              "," +              (this.opacity - (this.opacity / 20) * t) +              ")"),              h.rect(                this.x - (this.dx / 4) * t,                this.y - (this.dy / 4) * t - 2,                2,                2              ),              h.fill();        } else          (h.fillStyle = "rgba(" + r + "," + this.opacity + ")"),            h.rect(this.x, this.y, this.r, this.r);        h.closePath(), h.fill();      }),      (this.move = function () {        (this.x += this.dx),          (this.y += this.dy),          !1 === this.fadingOut && this.reset(),          (this.x > n - n / 4 || this.y < 0) && (this.fadingOut = !0);      }),      setTimeout(function () {        o = !1;      }, 50);  }  function m(t) {    return Math.floor(1e3 * Math.random()) + 1 < 10 * t;  }  function l(t, i) {    return Math.random() * (i - t) + t;  }  f(),    window.addEventListener("resize", f, !1),    (function () {      h = s.getContext("2d");      for (var t = 0; t < i; t++) (c[t] = new y()), c[t].reset();      u();    })(),    (function t() {      document.getElementsByTagName("html")[0].getAttribute("data-theme") ==        "dark" && u(),        window.requestAnimationFrame(t);    })();}dark();]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/weather.js"/>
      <url>/js/weather.js</url>
      
        <content type="html"><![CDATA[WIDGET = {    "CONFIG": {      "modules": "01234",      "background": "1",      "tmpColor": "FFFFFF",      "tmpSize": "16",      "cityColor": "FFFFFF",      "citySize": "16",      "aqiColor": "FFFFFF",      "aqiSize": "16",      "weatherIconSize": "24",      "alertIconSize": "18",      "padding": "10px 10px 10px 10px",      "shadow": "0",      "language": "auto",      "fixed": "false",      "vertical": "top",      "horizontal": "left",      "city": "CN101050301",      "key": "304d70206a7a4bbcbe04b49f2a58d310"    }  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[<p><div class="addBtn"><button onclick="leonus.linkCom()"><i class="fa-solid fa-circle-plus"></i>快速申请 (默认样式)</button> <button onclick="leonus.linkCom(&quot;bf&quot;)"><i class="fa-solid fa-circle-plus"></i>快速申请 (Butterfly)</button></div></p><p><link rel="stylesheet" href="/css/kslink.css"></p><script src="/js/kslink.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>list</title>
      <link href="/list/index.html"/>
      <url>/list/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>留言板</title>
      <link href="/comments/index.html"/>
      <url>/comments/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>bangumis</title>
      <link href="/list/bangumis/index.html"/>
      <url>/list/bangumis/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>games</title>
      <link href="/list/games/index.html"/>
      <url>/list/games/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>books</title>
      <link href="/list/books/index.html"/>
      <url>/list/books/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/list/movies/index.html"/>
      <url>/list/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>songs</title>
      <link href="/list/songs/index.html"/>
      <url>/list/songs/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
