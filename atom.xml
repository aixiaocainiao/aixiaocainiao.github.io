<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>云不知</title>
  
  <subtitle>比起过往 前方也许更值得期待</subtitle>
  <link href="https://aixiaocainiao.github.io/atom.xml" rel="self"/>
  
  <link href="https://aixiaocainiao.github.io/"/>
  <updated>2023-12-21T13:13:07.945Z</updated>
  <id>https://aixiaocainiao.github.io/</id>
  
  <author>
    <name>fang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://aixiaocainiao.github.io/posts/0.html"/>
    <id>https://aixiaocainiao.github.io/posts/0.html</id>
    <published>2023-12-21T13:09:22.994Z</published>
    <updated>2023-12-21T13:13:07.945Z</updated>
    
    <content type="html"><![CDATA[<h2 id="emsp"><a href="#emsp" class="headerlink" title="&emsp;"></a>&emsp;</h2><p>title: Linux makiefile学习<br>tags:</p><ul><li>C++</li><li>C<br>categories: C++<br>toc_number: true<br>description: 可以使用vscode分文件编写</li></ul><hr><h1 id="makeifile"><a href="#makeifile" class="headerlink" title="makeifile"></a>makeifile</h1><h1 id="1-GCC-官方文档"><a href="#1-GCC-官方文档" class="headerlink" title="1 GCC 官方文档"></a>1 GCC 官方文档</h1><p>GCC 官方文档网站：<a href="https://gcc.gnu.org/onlinedocs/">https://gcc.gnu.org/onlinedocs/</a></p><ul><li>官方文档是最权威的，网上所有的答案都来自官方文档</li><li>适应英语阅读，中文是母语，很多词我们自己有根深蒂固的含义和概念，再重新赋予新含义非常不容易理解或有歧义</li><li>英语用词、逻辑比较严谨，网上的翻译水平参差不齐，坑很多</li><li>国内论坛找到好答案全凭运气，好的答案可以节省时间，没有好的答案还是得花时间看官方文档，所以还是自己靠谱一点，锻炼一下英语能力</li></ul><p>&emsp;</p><h1 id="2-GCC的介绍"><a href="#2-GCC的介绍" class="headerlink" title="2 GCC的介绍"></a>2 GCC的介绍</h1><p>&emsp;&emsp;GCC 是 GNU项目的一个产品。</p><p>&emsp;&emsp;GCC（GNU Compiler Collection，GNU编译程序集合）是最重要的开放源码软件。其他所有开放源码软件都在某种层次上依赖于它。甚至其他语言，例如 Python，都是由 C 语言开发的，由 GNU 编译程序编译的。</p><p>&emsp;&emsp;这个软件对于整个自由软件运动而言具有根本性的意义。如果没有它或类似的软件，就不可能有自由软件运动。GCC 为 Linux 的出现提供了可能性。</p><p>&emsp;&emsp;GCC 是由许多组件组成的，但它们也并不总是出现的。有些部分是和语言相关的，所以如果没有安装某种特定语言，系统中就不会出现相关的文件。</p><p>&emsp;</p><h2 id="2-1-GCC常见的组成部分"><a href="#2-1-GCC常见的组成部分" class="headerlink" title="2.1 GCC常见的组成部分"></a>2.1 GCC常见的组成部分</h2><ul><li><p><strong>c++：</strong> gcc 的一个版本，默认语言设置为 C++，而且在链接的时候自动包含标准 C++ 库。这和 g++ 一样     </p></li><li><p><strong>configure：</strong> GCC 源代码树根目录中的一个脚本。用于设置配置值和创建 GCC 编译程序必需的 make 程序文件</p></li></ul><ul><li><p><strong>g++：</strong> gcc 的一个版本，默认语言设置为 C++，而且在链接的时候自动包含标准 C++库。这和 c++ 一样</p></li><li><p><strong>gcc：</strong> 该驱动程序等同于执行编译程序和连接程序以产生需要的输出</p></li><li><p><strong>libgcc：</strong> 该库包含的例程被作为编译程序的一部分，是因为它们可被链接到实际的可执行程序中。它们是特殊的例程，链接到可执行程序，来执行基本的任务，例如浮点运算。这些库中的例程通常都是平台相关的</p></li><li><p><strong>libstdc++：</strong> 运行时库，包括定义为标准语言一部分的所有的 C++类和函数</p></li></ul><p>&emsp;</p><h2 id="2-2-GCC包含的常见的软件"><a href="#2-2-GCC包含的常见的软件" class="headerlink" title="2.2 GCC包含的常见的软件"></a>2.2 GCC包含的常见的软件</h2><ul><li><p><strong>ar：</strong> 这是一个程序，可通过从文档中增加、删除和析取文件来维护库文件。通常使用该工具是为了创建和管理连接程序使用的目标库文档。该程序是 binutils 包的一部分</p></li><li><p><strong>as：</strong> GNU 汇编器。实际上它是一族汇编器，因为它可以被编译或能够在各种不同平台上工作。该程序是 binutjls 包的一部分<br>autoconf：产生的 shell 脚本自动配置源代码包去编译某个特定版本的 UNIX</p></li></ul><ul><li><p><strong>gdb：</strong> GNU 调试器，可用于检查程序运行时的值和行为<br>GNATS：GNU 的调试跟踪系统（GNU Bug Tracking System）。一个跟踪 GCC和其他 GNU 软件问题的在线系统</p></li><li><p><strong>gprof：</strong> 该程序会监督编译程序的执行过程，并报告程序中各个函数的运行时间，可以根据所提供的配置文件来优化程序。该程序是 binutils 包的一部分</p></li><li><p><strong>ld：</strong> GNU 连接程序。该程序将目标文件的集合组合成可执行程序。该程序是 binutils 包的一部分</p></li><li><p><strong>libtool：</strong> 一个基本库，支持 make 程序的描述文件使用的简化共享库用法的脚本</p></li><li><p><strong>make：</strong> 一个工具程序，它会读 makefile 脚本来确定程序中的哪个部分需要编译和连接，然后发布必要的命令。它读出的脚本（叫做 makefile 或 Makefile）定义了文件关系和依赖关系</p></li></ul><p>&emsp;</p><h1 id="3-GCC默认头文件搜索路径"><a href="#3-GCC默认头文件搜索路径" class="headerlink" title="3 GCC默认头文件搜索路径"></a>3 GCC默认头文件搜索路径</h1><p>查看命令<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo | gcc -v -x c -E -</span><br></pre></td></tr></table></figure></p><ul><li>/usr/lib/gcc/x86_64-linux-gnu/7/include</li><li>/usr/local/include</li><li>/usr/lib/gcc/x86_64-linux-gnu/7/include-fixed</li><li>/usr/include/x86_64-linux-gnu</li><li>/usr/include</li></ul><p>&emsp;</p><h1 id="简单编译原理"><a href="#简单编译原理" class="headerlink" title="简单编译原理"></a>简单编译原理</h1><h1 id="1-hello-world在计算机的表示"><a href="#1-hello-world在计算机的表示" class="headerlink" title="1 hello, world在计算机的表示"></a>1 hello, world在计算机的表示</h1><p>hello 程序的生命周期是从一个源程序（或者说源文件）开始的，即程序员通过编辑器创建并保存的文本文件，文件名是 hello.c。源程序实际上就是一个由值 0 和 1组成的位（又称为比特）序列，8 个位被组织成一组，称为字节。每个字节表示程序中的某些文本字符</p><p>大部分计算机使用 ASCII 标准来表示文本字符</p><ul><li>用一个唯一的单字节大小的整数值息来表示每个字符</li><li>hello.c 程序是以字节序列的方式储存在文件中的</li></ul><p>hello.c 的表示方法说明了一个基本思想∶ 系统中所有的信息——包括磁盘文件、内存中的程序、内存中存放的用户数据以及网络上传送的数据，都是由一串比特表示的</p><div align='center'>    <image src='images/ASCII.png' width=600></div><p>&emsp;</p><h1 id="2-编译过程"><a href="#2-编译过程" class="headerlink" title="2 编译过程"></a>2 编译过程</h1><p>hello 程序的生命周期从一个高级 C 语言程序开始</p><p>为了在系统上运行 hello.c 程序，每条 C 语句都必须被其他程序转化为一系列的低级机器语言指令</p><p>然后这些指令按照一种称为可执行目标程序的格式打好包，并以二进制磁盘文件的形式存放起来</p><p>GCC 编译器读取源程序文件 hello.c，并把它翻译成一个可执行目标文件 hello。这个翻译过程可分为四个阶段完成，如下图所示</p><p>执行这四个阶段的程序（预处理器、编译器、汇编器和链接器）一起构成了编译系统（compilation system）</p><p>&lt;/div align=center&gt;<br>    <image src="images/compilesystem.png" width=800></p><div>&emsp;## 2.1 预处理阶段  `预处理器（cpp）`根据以字符#开头的命令，修改原始的 C 程序。比如 hello.c中第 1行的 `#include <stdio.h>` 命令告诉预处理器读取系统头文件 stdio.h 的内容，并把它直接插入程序文本中。结果就得到了另一个 C 程序，通常是以.i作为文件扩展名&emsp;## 2.2 编译阶段  `编译器（ccl）`将文本文件 hello.i翻译成文本文件 hello.s，它包含一个汇编语言程序。该程序包含函数 main 的定义，如下所示：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">main:</span><br><span class="line">subq    $8, %rsp </span><br><span class="line">mov1    $.LCO,%edi </span><br><span class="line">call    puts </span><br><span class="line">mov1    $0,%eax </span><br><span class="line">addq    $8,%rsp </span><br><span class="line">ret</span><br></pre></td></tr></table></figure>每条语句都以一种文本格式描述了一条低级机器语言指令。汇编语言非常有用，它为不同高级语言的不同编译器提供了通用的输出语言&emsp;## 2.3 汇编阶段   `汇编器（as）`将 hello.s 翻译成机器语言指令，把这些指令打包成一种叫做可重定位目标程序（relocatable object program）的格式，并将结果保存在目标文件 hello.o中。hello.o 文件是一个二进制文件，它包含的17 个字节是函数 main的指令编码。如果我们在文本编辑器中打开 hello.o文件，将看到一堆乱码。&emsp;## 2.4 链接阶段 注意，hello程序调用了 printf 函数，它是每个 C 编译器都提供的标准 C 库中的一个函数。printf 函数存在于一个名为 printf.o 的单独的预编译好了的目标文件中，而这个文件必须以某种方式合并到我们的 hello.o 程序中。`链接器（ld）`就负责处理这种合并。结果就得到 hello 文件，它是一个可执行目标文件（或者简称为可执行文件），可以被加载到内存中，由系统执行。&emsp;# 3 hello, world 的执行过程## 第一步- shell 等待我们输入一个命令- 当我们在键盘上输入字符串"./hello"（注意这里是编译好的可执行目标文件）后- shell 程序将字符逐一读入寄存器- 再把它存放到内存中  <div align=center><image src='images/hello_1.png' width=500></div><p>&emsp;</p><h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><ul><li>当我们在键盘上敲回车键时，shell 程序就知道我们已经结束了命令的输人</li><li>然后 shell 执行一系列指令来加载可执行的 hello 文件</li><li>这些指令将 hello 目标文件中的代码和数据从磁盘复制到主存</li><li>数据包括最终会被输出的字符串”hello，world\n”。</li></ul><div align=center><image src='images/hello_2.png' width=500></div><p>&emsp;</p><h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><ul><li>一旦目标文件 hello 中的代码和数据被加载到主存</li><li>处理器就开始执行 hello 程序的 main 程序中的机器语言指令</li><li>这些指令将 “hello，world\n” 字符串中的字节从主存复制到寄存器文件</li><li>再从寄存器文件中复制到显示设备，最终显示在屏幕上</li></ul><div align=center><image src='images/hello_3.png' width=500></div><p>&emsp;</p><p>&emsp;</p><h1 id="4-程序在计算机内的存储"><a href="#4-程序在计算机内的存储" class="headerlink" title="4 程序在计算机内的存储"></a>4 程序在计算机内的存储</h1><p>上面的例子揭示了一个重要的问题，即系统“似乎”花费了大量的时间和步骤把信息从一个地方挪到另一个地方</p><ul><li>hello程序的机器指令最初是存放在磁盘上   </li><li>当程序加载时，它们被复制到主存</li><li>当处理器运行程序时，指令又从主存复制到处理器</li></ul><p>相似地，数据串 “hello，world\n”开始时在磁盘上，然后被复制到主存，最后从主存上复制到显示设备</p><p>&emsp;</p><h1 id="1-Fundamental-Compiling"><a href="#1-Fundamental-Compiling" class="headerlink" title="1 Fundamental Compiling"></a>1 Fundamental Compiling</h1><blockquote><p>编译 C 语言相关的后缀</p></blockquote><div align=center><image src='imgs/filenamesuffixes1.png' width=900></div><p>&emsp;</p><p>&emsp;</p><h1 id="2-Compiling-C"><a href="#2-Compiling-C" class="headerlink" title="2 Compiling C"></a>2 Compiling C</h1><h2 id="2-1-Preprocessing"><a href="#2-1-Preprocessing" class="headerlink" title="2.1 Preprocessing"></a>2.1 Preprocessing</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">不会生成 .i 文件</span></span><br><span class="line">gcc -E main.c</span><br><span class="line">gcc -E main.c -o helloworld.i</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>-E 选项告诉编译器只进行预处理操作</li><li>-o 选项把预处理的结果输出到指定文件      </li></ul><p>&emsp;</p><h2 id="2-2-Generating-Assembly-Language"><a href="#2-2-Generating-Assembly-Language" class="headerlink" title="2.2 Generating Assembly Language"></a>2.2 Generating Assembly Language</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc -S main.c</span><br><span class="line">gcc -S main.c -o xxx.s</span><br></pre></td></tr></table></figure><ul><li>-S 选项告诉编译器，进行预处理和编译成汇编语言操作</li></ul><p>每个平台对应的汇编语言的形式是不同的，例如有很多型号的开发板，有很多型号的 CPU</p><p>&emsp;</p><h2 id="2-3-Source-File-to-Object-File"><a href="#2-3-Source-File-to-Object-File" class="headerlink" title="2.3 Source File to Object File"></a>2.3 Source File to Object File</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gcc -c main.c</span><br><span class="line">gcc -c main.c -o xxx.o</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译多个 .c 文件</span></span><br><span class="line">gcc -c main.c add.c minus.c</span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="2-4-Single-Source-to-Executable"><a href="#2-4-Single-Source-to-Executable" class="headerlink" title="2.4 Single Source to Executable"></a>2.4 Single Source to Executable</h2><ul><li>注意：后面三个命令执行后并没有按编译过程出现 .i .s 或 .o 文件，并不意味着没有经历这些过程</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc main.c</span><br><span class="line">gcc main.c -o xxx</span><br></pre></td></tr></table></figure><p>执行程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./可执行文件</span><br></pre></td></tr></table></figure><h2 id="2-5-Multiple-Sources-to-Executable"><a href="#2-5-Multiple-Sources-to-Executable" class="headerlink" title="2.5 Multiple Sources to Executable"></a>2.5 Multiple Sources to Executable</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc main.c add.c minus.c -o exec</span><br><span class="line">./exec</span><br></pre></td></tr></table></figure><p>&emsp;</p><h1 id="3-Creating-a-Static-Library"><a href="#3-Creating-a-Static-Library" class="headerlink" title="3 Creating a Static Library"></a>3 Creating a Static Library</h1><ul><li><p>编译成 .o 的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gcc -c [.c] -o [自定义文件名] </span><br><span class="line">gcc -c [.c] [.c] ...</span><br><span class="line"></span><br><span class="line">//两个.c文件 add.c minus.c链接成静态库 程序执行前就完成了</span><br><span class="line">gcc -c add.c minus.c </span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>编静态库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ar -r [lib自定义库名.a] [.o] [.o] ...</span><br><span class="line"></span><br><span class="line">ar -r liboperator.a add.o minus.o</span><br></pre></td></tr></table></figure></li></ul><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 链接成可执行文件</span><br><span class="line"></span><br><span class="line">  ```shell</span><br><span class="line">  gcc [.c] [.a] -o [自定义输出文件名]</span><br><span class="line">  gcc [.c] -o [自定义输出文件名] -l[库名] -L[库所在路径]</span><br><span class="line">  </span><br><span class="line">  gcc main.c liboperator -o test</span><br><span class="line">  gcc main.c -o test01 -loperator -L/home/xinyue/makefile学习/GNC-Tutorial/copy_path/src</span><br><span class="line">  库的路径  直接复制路径就行(看库在那个文件下)</span><br></pre></td></tr></table></figure></code></pre><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">for ex:</span><br><span class="line">gcc -c add.c minus.c </span><br><span class="line">xinyue@xinyuezi:~/makefile学习/GNC-Tutorial/Test copy/src$ ar -r liboperator add.o minus.o</span><br><span class="line">ar: 正在创建 liboperator</span><br><span class="line">xinyue@xinyuezi:~/makefile学习/GNC-Tutorial/Test copy/src$ gcc main.c liboperator -o test</span><br><span class="line">xinyue@xinyuezi:~/makefile学习/GNC-Tutorial/Test copy/src$ ls</span><br><span class="line">add.c  add.o  helloworld.i  liboperator  main  main.c  main.o  minus.c  minus.o  test  xxx.s</span><br><span class="line">xinyue@xinyuezi:~/makefile学习/GNC-Tutorial/Test copy/src$ ./test </span><br><span class="line">c = 30</span><br><span class="line">c = 10</span><br><span class="line">Hello World!</span><br><span class="line"></span><br><span class="line">或者 </span><br><span class="line">gcc -c main.c add.c minus.c</span><br><span class="line">gcc main.o add.o minus.o -o test</span><br><span class="line">结果:</span><br><span class="line">xinyue@xinyuezi:~/makefile学习/GNC-Tutorial/Test copy/src$ gcc -c main.c add.c minus.c</span><br><span class="line">xinyue@xinyuezi:~/makefile学习/GNC-Tutorial/Test copy/src$ gcc main.o add.o minus.o -o test</span><br><span class="line">xinyue@xinyuezi:~/makefile学习/GNC-Tutorial/Test copy/src$ ls</span><br><span class="line">add.c  add.o  helloworld.i  liboperator  main  main.c  main.o  minus.c  minus.o  test  xxx.s</span><br><span class="line">xinyue@xinyuezi:~/makefile学习/GNC-Tutorial/Test copy/src$ ./test </span><br><span class="line">c = 30</span><br><span class="line">c = 10</span><br><span class="line">Hello World!</span><br></pre></td></tr></table></figure><p>&emsp;</p><h1 id="4-Creating-a-Shared-Library"><a href="#4-Creating-a-Shared-Library" class="headerlink" title="4 Creating a Shared Library"></a>4 Creating a Shared Library</h1><blockquote><p>编译二进制.o文件</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -c -fpic [.c/.cpp][.c/.cpp]... </span><br></pre></td></tr></table></figure><blockquote><p>编库</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -shared [.o][.o]... -o [lib自定义库名.so]</span><br></pre></td></tr></table></figure><ul><li>链接库到可执行文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc [.c/.cpp] -o [自定义可执行文件名]  -l[库名] -L[库路径] -Wl,-rpath=[库路径]</span><br></pre></td></tr></table></figure><p>&emsp;</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="1-编译过程"><a href="#1-编译过程" class="headerlink" title="1 编译过程"></a>1 编译过程</h2><p>源文件.c文件 -&gt; 预编译成.i文件 -&gt; 编译成汇编语言.s -&gt; 汇编成.o文件 -&gt; 链接成可执行文件（名字自定义，后缀没关系）</p><h2 id="2-编译过程命令"><a href="#2-编译过程命令" class="headerlink" title="2 编译过程命令"></a>2 编译过程命令</h2><ul><li><p>预处理： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -E [.c源文件] -o [自定义输出文件名.i]</span><br></pre></td></tr></table></figure></li><li><p>编译成汇编语言(隐藏了预处理操作) :</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -S [.c源文件] </span><br></pre></td></tr></table></figure></li><li><p>会变成.o的object文件（二进制文件，可用于链接） :</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -c [.c源文件] [.c源文件] [...] (可选选项：-o [自定文件名])</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-库"><a href="#3-库" class="headerlink" title="3 库"></a>3 库</h2><blockquote><p>静态库</p></blockquote><ul><li><p>编库（先转成.o文件，再编成lib[自定库名].a）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -c [.c源文件] [.c源文件] [...] (可选选项：-o [自定文件名])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ar -r lib[自定库名].a [.o文件] [.o文件] [...]</span><br></pre></td></tr></table></figure></li><li><p>链接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc [main文件] -o [自定义输出可执行文件名] -l[库名] -L[库的路径]</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>动态库</p><ul><li><p>编库      </p><ul><li><p>第一种做法， 先转成.o文件，再编成.so文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -c -fpic [.c源文件] [.c源文件] [...]</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -shared [.o文件] [.o文件] [...] -o lib[库名].so</span><br></pre></td></tr></table></figure></li><li><p>第二种做法，直接转成.so</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -fpic -shared [.c源文件] [.c源文件] [...] -o lib[库名].so</span><br></pre></td></tr></table></figure></li></ul></li></ul></blockquote><ul><li><p>链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc [main文件] -o [自定义输出可执行文件名] -l[库名] -L[库所在路径] -Wl,-rpath=[库所在路径]</span><br></pre></td></tr></table></figure></li></ul><p>&emsp;</p><h1 id="1-Fundamental-Compiling-1"><a href="#1-Fundamental-Compiling-1" class="headerlink" title="1 Fundamental Compiling"></a>1 Fundamental Compiling</h1><blockquote><p>编译 C++ 语言相关的后缀</p></blockquote><div align=center><image src='imgs/fundamentalcpp.png' width=900></div><p>&emsp;</p><h1 id="2-Compiling-C-1"><a href="#2-Compiling-C-1" class="headerlink" title="2 Compiling C++"></a>2 Compiling C++</h1><h2 id="2-1-Preprocessing-1"><a href="#2-1-Preprocessing-1" class="headerlink" title="2.1 Preprocessing"></a>2.1 Preprocessing</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">g++ -E helloworld.c</span><br><span class="line">g++ -E helloworld.c -o helloworld.i</span><br></pre></td></tr></table></figure><ul><li>-E 选项告诉编译器只进行预处理操作</li><li>-o 选项把预处理的结果输出到指定文件      </li></ul><p>&emsp;</p><h2 id="2-2-Generating-Assembly-Language-1"><a href="#2-2-Generating-Assembly-Language-1" class="headerlink" title="2.2 Generating Assembly Language"></a>2.2 Generating Assembly Language</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">g++ -S helloworld.c</span><br><span class="line">g++ -S helloworld.c -o helloworld.s</span><br></pre></td></tr></table></figure><ul><li>-S 选项告诉编译器，进行预处理和编译成汇编语言操作</li></ul><p>每个平台对应的汇编语言的形式是不同的，例如有很多型号的开发板，有很多型号的 CPU</p><p>&emsp;</p><h2 id="2-3-Source-File-to-Object-File-1"><a href="#2-3-Source-File-to-Object-File-1" class="headerlink" title="2.3 Source File to Object File"></a>2.3 Source File to Object File</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">g++ -c helloworld.c</span><br><span class="line">g++ -c helloworld.c -o harumph.o</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译多个 .c 文件</span></span><br><span class="line">g++ -c helloworld.c helloworld1.c helloworld2.c</span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="2-4-Single-Source-to-Executable-1"><a href="#2-4-Single-Source-to-Executable-1" class="headerlink" title="2.4 Single Source to Executable"></a>2.4 Single Source to Executable</h2><ul><li>注意：后面三个命令执行后并没有按编译过程出现 .i .s 或 .o 文件，并不意味着没有经历这些过程</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">g++ helloworld.c</span><br><span class="line">g++ helloworld.c -o howdy</span><br></pre></td></tr></table></figure><p>执行程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./可执行文件</span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="2-5-Multiple-Source-to-Executable"><a href="#2-5-Multiple-Source-to-Executable" class="headerlink" title="2.5 Multiple Source to Executable"></a>2.5 Multiple Source to Executable</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ g++ hellomain.c sayhello.c -o hello</span><br></pre></td></tr></table></figure><p>&emsp;</p><h1 id="3-Creating-a-Static-Library-1"><a href="#3-Creating-a-Static-Library-1" class="headerlink" title="3 Creating a Static Library"></a>3 Creating a Static Library</h1><ul><li><p>编译成 .o 的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">g++ -c [.c] -o [自定义文件名] </span><br><span class="line">g++ -c [.c] [.c] ...</span><br></pre></td></tr></table></figure></li><li><p>编静态库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ar -r [lib自定义库名.a] [.o] [.o] ...</span><br></pre></td></tr></table></figure></li><li><p>链接成可执行文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">g++ [.c] [.a] -o [自定义输出文件名]</span><br><span class="line">g++ [.c] -o [自定义输出文件名] -l[库名] -L[库所在路径]</span><br></pre></td></tr></table></figure></li></ul><p>&emsp;</p><h1 id="4-Creating-a-Shared-Library-1"><a href="#4-Creating-a-Shared-Library-1" class="headerlink" title="4 Creating a Shared Library"></a>4 Creating a Shared Library</h1><ul><li><p>编译二进制.o文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ -c -fpic [.c/.cpp][.c/.cpp]... </span><br></pre></td></tr></table></figure></li><li><p>编库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ -shared [.o][.o]... -o [lib自定义库名.so]</span><br></pre></td></tr></table></figure></li><li><p>连接动态库到可执行文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ [.c/.cpp] -o [自定义可执行文件名]  -l[库名] -L[库路径] -Wl,-rpath=[库路径]</span><br></pre></td></tr></table></figure></li></ul><p>&emsp;</p><h1 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h1><h2 id="1-编译过程-1"><a href="#1-编译过程-1" class="headerlink" title="1 编译过程"></a>1 编译过程</h2><p>源文件.c文件 -&gt; 预编译成.i文件 -&gt; 编译成汇编语言.s -&gt; 汇编成.o文件 -&gt; 链接成可执行文件（名字自定义，后缀没关系）</p><h2 id="2-编译过程命令-1"><a href="#2-编译过程命令-1" class="headerlink" title="2 编译过程命令"></a>2 编译过程命令</h2><ul><li><p>预处理： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ -E [.c源文件] -o [自定义输出文件名.i]</span><br></pre></td></tr></table></figure></li><li><p>编译成汇编语言(隐藏了预处理操作) :</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ -S [.c源文件] </span><br></pre></td></tr></table></figure></li><li><p>会变成.o的object文件（二进制文件，可用于链接） :</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ -c [.c源文件] [.c源文件] [...] (可选选项：-o [自定文件名])</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-库-1"><a href="#3-库-1" class="headerlink" title="3 库"></a>3 库</h2><blockquote><p>静态库</p></blockquote><ul><li><p>编库（先转成.o文件，再编成lib[自定库名].a）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ -c [.c源文件] [.c源文件] [...] (可选选项：-o [自定文件名])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ar -r lib[自定库名].a [.o文件] [.o文件] [...]</span><br></pre></td></tr></table></figure></li><li><p>链接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ [main文件] -o [自定义输出可执行文件名] -l[库名] -L[库的路径]</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>动态库</p><ul><li><p>编库      </p><ul><li><p>第一种做法， 先转成.o文件，再编成.so文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ -c -fpic [.c源文件] [.c源文件] [...]</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ -shared [.o文件] [.o文件] [...] -o lib[库名].so</span><br></pre></td></tr></table></figure></li><li><p>第二种做法，直接转成.so</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ -fpic -shared [.c源文件] [.c源文件] [...] -o lib[库名].so</span><br></pre></td></tr></table></figure></li></ul></li></ul></blockquote><ul><li><p>链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ [main文件] -o [自定义输出可执行文件名] -l[库名] -L[库所在路径] -Wl,-rpath=[库所在路径]</span><br></pre></td></tr></table></figure></li></ul><p>&emsp;</p><h1 id="Makefile"><a href="#Makefile" class="headerlink" title="Makefile"></a>Makefile</h1><ul><li>GNU Make 官方网站：<a href="https://www.gnu.org/software/make/">https://www.gnu.org/software/make/</a>        </li><li>GNU Make 官方文档下载地址：<a href="https://www.gnu.org/software/make/manual/">https://www.gnu.org/software/make/manual/</a></li><li>Makefile Tutorial：<a href="https://makefiletutorial.com/">https://makefiletutorial.com/</a></li></ul><p>&emsp;</p><h2 id="1-基本格式"><a href="#1-基本格式" class="headerlink" title="1 基本格式"></a>1 基本格式</h2><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">targets : prerequisties</span><br><span class="line">[tab键]command</span><br></pre></td></tr></table></figure><ul><li>target：目标文件，可以是 OjectFile，也可以是执行文件，还可以是一个标签（Label），对于标签这种特性，在后续的“伪目标”章节中会有叙述。</li><li>prerequisite：要生成那个 target 所需要的文件或是目标。</li><li>command：是 make 需要执行的命令，</li></ul><p>&emsp;</p><h2 id="2-Makefile-规则"><a href="#2-Makefile-规则" class="headerlink" title="2 Makefile 规则"></a>2 Makefile 规则</h2><ul><li>make 会在当前目录下找到一个名字叫 <code>Makefile</code> 或 <code>makefile</code> 的文件</li><li>如果找到，它会找文件中第一个目标文件（target），并把这个文件作为最终的目标文件</li><li>如果 target 文件不存在，或是 target 文件依赖的 .o 文件(prerequities)的文件修改时间要比 target 这个文件新，就会执行后面所定义的命令 command 来生成 target 这个文件      </li><li>如果 target 依赖的 .o 文件（prerequisties）也存在，make 会在当前文件中找到 target 为 .o 文件的依赖性，如果找到，再根据那个规则生成 .o 文件</li></ul><p>&emsp;</p><h2 id="3-伪目标"><a href="#3-伪目标" class="headerlink" title="3 伪目标"></a>3 伪目标</h2><p>为了避免 target 和 Makefile 同级目录下 <code>文件/文件夹</code> 重名的这种情况，我们可以使用一个特殊的标记 <code>.PHONY</code> 来显式地指明一个目标是 “伪目标”，向 make 说明，不管是否有这个文件/文件夹，这个目标就是 “伪目标”</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.PHONY : clean</span><br></pre></td></tr></table></figure><p>只要有这个声明，不管是否有 “clean” 文件/文件夹，要运行 “clean” 这个目标，只有”make clean” 这个命令</p><blockquote><p>注意</p></blockquote><ul><li>对于有 prerequisties 的 target</li></ul><p>&emsp;</p><h1 id="Makefile-的变量"><a href="#Makefile-的变量" class="headerlink" title="Makefile 的变量"></a>Makefile 的变量</h1><p>变量在声明时需要给予初值，而在使用时，需要给在变量名前加上 <code>$</code> 符号，并用小括号 <code>()</code> 把变量给包括起来。</p><p>&emsp;</p><h2 id="1-变量的定义"><a href="#1-变量的定义" class="headerlink" title="1 变量的定义"></a>1 变量的定义</h2><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cpp := src/main.cpp </span><br><span class="line">obj := objs/main.o</span><br></pre></td></tr></table></figure><h2 id="2-变量的引用"><a href="#2-变量的引用" class="headerlink" title="2 变量的引用"></a>2 变量的引用</h2><ul><li>可以用 <code>()</code> 或 <code>&#123;&#125;</code></li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cpp := src/main.cpp </span><br><span class="line">obj := objs/main.o</span><br><span class="line"></span><br><span class="line"><span class="variable">$(obj)</span> : $&#123;cpp&#125;</span><br><span class="line">@g++ -c <span class="variable">$(cpp)</span> -o <span class="variable">$(obj)</span></span><br><span class="line"></span><br><span class="line">compile : <span class="variable">$(obj)</span></span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="3-预定义变量"><a href="#3-预定义变量" class="headerlink" title="3 预定义变量"></a>3 预定义变量</h2><ul><li><code>$@</code>: 目标(target)的完整名称</li><li><code>$&lt;</code>: 第一个依赖文件（prerequisties）的名称</li><li><code>$^</code>: 所有的依赖文件（prerequisties），以空格分开，不包含重复的依赖文件</li></ul><figure class="highlight make"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cpp := src/main.cpp </span><br><span class="line">obj := objs/main.o</span><br><span class="line"></span><br><span class="line"><span class="variable">$(obj)</span> : $&#123;cpp&#125;</span><br><span class="line">@g++ -c <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line">@echo <span class="variable">$^</span></span><br><span class="line"></span><br><span class="line">compile : <span class="variable">$(obj)</span></span><br><span class="line">.PHONY : compile</span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><p>&emsp;</p><h1 id="Makefile-常用符号"><a href="#Makefile-常用符号" class="headerlink" title="Makefile 常用符号"></a>Makefile 常用符号</h1><h2 id="1"><a href="#1" class="headerlink" title="*1 ="></a>*1 =</h2><ul><li>简单的赋值运算符</li><li>用于将右边的值分配给左边的变量</li><li>如果在后面的语句中重新定义了该变量，则将使用新的值</li></ul><blockquote><p>示例</p></blockquote><figure class="highlight make"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HOST_ARCH   = aarch64</span><br><span class="line">TARGET_ARCH = <span class="variable">$(HOST_ARCH)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改了变量 a</span></span><br><span class="line">HOST_ARCH   = amd64</span><br><span class="line"></span><br><span class="line"><span class="section">debug:</span></span><br><span class="line">@echo <span class="variable">$(TARGET_ARCH)</span></span><br></pre></td></tr></table></figure><h2 id="2"><a href="#2" class="headerlink" title="2 :="></a>2 :=</h2><ul><li>立即赋值运算符</li><li>用于在定义变量时立即求值</li><li>该值在定义后不再更改</li><li>即使在后面的语句中重新定义了该变量</li></ul><blockquote><p>示例</p></blockquote><figure class="highlight make"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HOST_ARCH   := aarch64</span><br><span class="line">TARGET_ARCH := <span class="variable">$(HOST_ARCH)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改了变量 a</span></span><br><span class="line">HOST_ARCH := amd64</span><br><span class="line"></span><br><span class="line"><span class="section">debug:</span></span><br><span class="line">@echo <span class="variable">$(TARGET_ARCH)</span></span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="3"><a href="#3" class="headerlink" title="*3 ?="></a>*3 ?=</h2><ul><li>默认赋值运算符</li><li>如果该变量已经定义，则不进行任何操作</li><li>如果该变量尚未定义，则求值并分配</li></ul><figure class="highlight make"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HOST_ARCH  = aarch64</span><br><span class="line">HOST_ARCH ?= amd64</span><br><span class="line"></span><br><span class="line"><span class="section">debug:</span></span><br><span class="line">    @echo <span class="variable">$(HOST_ARCH)</span></span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="4-累加"><a href="#4-累加" class="headerlink" title="4 累加 +="></a>4 累加 +=</h2><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CXXFLAGS := -m64 -fPIC -g -O0 -std=c++11 -w -fopenmp</span><br><span class="line"></span><br><span class="line">CXXFLAGS += <span class="variable">$(include_paths)</span></span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="5"><a href="#5" class="headerlink" title="5 \"></a>5 \</h2><ul><li>续行符</li></ul><blockquote><p>示例</p></blockquote><figure class="highlight make"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LDLIBS := cudart opencv_core \</span><br><span class="line">          gomp nvinfer protobuf cudnn pthread \</span><br><span class="line">          cublas nvcaffe_parser nvinfer_plugin </span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="6-与"><a href="#6-与" class="headerlink" title="6 * 与 %"></a>6 * 与 %</h2><ul><li><code>*</code>: 通配符表示匹配任意字符串，可以用在目录名或文件名中</li><li><code>%</code>: 通配符表示匹配任意字符串，并将匹配到的字符串作为变量使用</li></ul><p>&emsp;</p><h1 id="Makefile-的常用函数"><a href="#Makefile-的常用函数" class="headerlink" title="Makefile 的常用函数"></a>Makefile 的常用函数</h1><p>函数调用，很像变量的使用，也是以 “$” 来标识的，其语法如下：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(fn, arguments) or $&#123;fn, arguments&#125;</span><br></pre></td></tr></table></figure><ul><li>fn: 函数名</li><li>arguments: 函数参数，参数间以逗号 <code>,</code> 分隔，而函数名和参数之间以“空格”分隔</li></ul><p>&emsp;</p><h2 id="1-shell"><a href="#1-shell" class="headerlink" title="1 shell"></a>1 shell</h2><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">shell</span> &lt;command&gt; &lt;arguments&gt;)</span></span><br></pre></td></tr></table></figure><ul><li>名称：shell 命令函数 —— shell</li><li>功能：调用 shell 命令 command</li><li>返回：函数返回 shell 命令 command 的执行结果</li></ul><blockquote><p>示例</p><figure class="highlight makefile"><figcaption><span>src 为路径 ./src 和 makefile因为是同级关系才这样写的</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></blockquote><h1 id="shell-指令，src-文件夹下找到-cpp-文件"><a href="#shell-指令，src-文件夹下找到-cpp-文件" class="headerlink" title="shell 指令，src 文件夹下找到 .cpp 文件"></a>shell 指令，src 文件夹下找到 .cpp 文件</h1><p>cpp_srcs := $(shell find src -name “*.cpp”) </p><h1 id="shell-指令-获取计算机架构"><a href="#shell-指令-获取计算机架构" class="headerlink" title="shell 指令, 获取计算机架构"></a>shell 指令, 获取计算机架构</h1><p>HOST_ARCH := $(shell uname -m)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&amp;emsp;</span><br><span class="line">## 2 subst</span><br><span class="line">```makefile</span><br><span class="line">$(subst &lt;from&gt;,&lt;to&gt;,&lt;text&gt;)</span><br></pre></td></tr></table></figure><ul><li>名称：字符串替换函数——subst</li><li>功能：把字串 \<text> 中的 \<from> 字符串替换成 \<to></li><li>返回：函数返回被替换过后的字符串</li></ul><blockquote><p>示例：</p></blockquote><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cpp_srcs := <span class="variable">$(<span class="built_in">shell</span> find src -name &quot;*.cpp&quot;)</span></span><br><span class="line">cpp_objs := <span class="variable">$(<span class="built_in">subst</span> src/,objs/,<span class="variable">$(cpp_objs)</span>)</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p>cpp_objs := $(subst src,objs,$(cpp_srcs))</p><p>cpp_objs := $(subst .cpp,.o,$(cpp_objs))</p><p>&emsp;</p><h2 id="3-patsubst"><a href="#3-patsubst" class="headerlink" title="3 patsubst"></a>3 patsubst</h2><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">patsubst</span> &lt;pattern&gt;,&lt;replacement&gt;,&lt;text&gt;)</span></span><br></pre></td></tr></table></figure><ul><li>名称：模式字符串替换函数 —— patsubst</li><li>功能：通配符 <code>%</code>，表示任意长度的字串，从 text 中取出 patttern， 替换成 replacement</li><li>返回：函数返回被替换过后的字符串</li></ul><blockquote><p>示例</p></blockquote><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cpp_srcs := <span class="variable">$(<span class="built_in">shell</span> find src -name &quot;*.cpp&quot;)</span> <span class="comment">#shell指令，src文件夹下找到.cpp文件</span></span><br><span class="line">cpp_objs := <span class="variable">$(<span class="built_in">patsubst</span> %.cpp,%.o,<span class="variable">$(cpp_srcs)</span>)</span> <span class="comment">#cpp_srcs变量下cpp文件替换成 .o文件</span></span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="4-foreach"><a href="#4-foreach" class="headerlink" title="4 foreach"></a>4 foreach</h2><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">foreach</span> &lt;var&gt;,&lt;list&gt;,&lt;text&gt;)</span></span><br></pre></td></tr></table></figure><ul><li>名称：循环函数——foreach。</li><li>功能：把字串\<list>中的元素逐一取出来，执行\<text>包含的表达式</li><li>返回：\<text>所返回的每个字符串所组成的整个字符串（以空格分隔）</li></ul><blockquote><p>示例：</p></blockquote><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">library_paths := /datav/shared/100_du/03.08/lean/protobuf-3.11.4/lib \</span><br><span class="line">                 /usr/local/cuda-10.1/lib64</span><br><span class="line"></span><br><span class="line">library_paths := <span class="variable">$(<span class="built_in">foreach</span> item,<span class="variable">$(library_paths)</span>,-L<span class="variable">$(item)</span>)</span></span><br></pre></td></tr></table></figure><blockquote><p>同等效果</p></blockquote><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">I_flag := $(include_paths:%=-I%)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">library_paths := /usr/include \</span><br><span class="line">usr/include/opencv2/core</span><br><span class="line"></span><br><span class="line">library_paths := $(foreach item,$(library_paths),-I$(item))</span><br><span class="line"></span><br><span class="line">伪代码</span><br><span class="line"></span><br><span class="line">for iteam in library_paths</span><br><span class="line"></span><br><span class="line">iteam += &quot;-I&quot;</span><br><span class="line"></span><br><span class="line">I_flag := $(library_paths:%=-I%)</span><br><span class="line">debug:</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">@<span class="built_in">echo</span> $(library_paths)</span></span><br><span class="line">@echo $(I_flag)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="5-dir"><a href="#5-dir" class="headerlink" title="5 dir"></a>5 dir</h2><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">dir</span> &lt;names...&gt;)</span></span><br></pre></td></tr></table></figure><ul><li>名称：取目录函数——dir。</li><li>功能：从文件名序列<names>中取出目录部分。目录部分是指最后一个反斜杠（“/”）之前<br>的部分。如果没有反斜杠，那么返回“./”。</li><li>返回：返回文件名序列<names>的目录部分。</li><li>示例： </li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">dir</span> src/foo.c hacks)</span>    <span class="comment"># 返回值是“src/ ./”。</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">cpp_path := $(shell find src -name &quot;*.c&quot;)</span><br><span class="line">cpp_objs := $(patsubst src/%.c,objs/%.o,$(cpp_path))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">objs/%.o:src/%.c</span><br><span class="line">@mkdir -p $(dir $@)</span><br><span class="line">g++ -c $^ -o $@</span><br><span class="line"></span><br><span class="line">comple:$(cpp_objs)</span><br><span class="line"></span><br><span class="line">cpp_objs = objs/main.o objs/minus.o objs/add.o</span><br><span class="line"></span><br><span class="line">comple:$(cpp_objs)</span><br><span class="line"></span><br><span class="line">debug:</span><br><span class="line">@echo $(cpp_path)</span><br><span class="line">@echo $(cpp_objs)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.PHONY:</span><br><span class="line"> debug comple </span><br></pre></td></tr></table></figure><hr><p>&emsp;</p><h2 id="6-notdir"><a href="#6-notdir" class="headerlink" title="6 notdir"></a>6 notdir</h2><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">notdir</span> &lt;names...&gt;)</span></span><br></pre></td></tr></table></figure><blockquote><p>示例</p></blockquote><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">libs   := <span class="variable">$(<span class="built_in">notdir</span> $(<span class="built_in">shell</span> find /usr/lib -name lib*)</span>)</span><br></pre></td></tr></table></figure><hr><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">只要动态库和静态库 不要路径</span><br><span class="line"></span><br><span class="line">将动态库和静态库的库名字取出来</span><br><span class="line"></span><br><span class="line">lib := $(shell find /usr/lib -name lib*)</span><br><span class="line"></span><br><span class="line">lib := $(notdir $(lib))</span><br><span class="line"></span><br><span class="line">lib := $(notdir $(shell find /usr/lib -name lib*))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">debug:</span><br><span class="line">@echo $(lib)</span><br><span class="line">.PHONY:</span><br><span class="line">debug</span><br><span class="line"></span><br><span class="line">/usr/liblibdatrie.so.1.3.3     变为 liblibdatrie.so</span><br></pre></td></tr></table></figure><hr><p>&emsp;</p><h2 id="7-filter"><a href="#7-filter" class="headerlink" title="7 filter"></a>7 filter</h2><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">filter</span> &lt;names...&gt;)</span></span><br></pre></td></tr></table></figure><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">libs    := <span class="variable">$(<span class="built_in">notdir</span> $(<span class="built_in">shell</span> find /usr/lib -name lib*)</span>)</span><br><span class="line">a_libs  := <span class="variable">$(<span class="built_in">filter</span> %.a,<span class="variable">$(libs)</span>)</span></span><br><span class="line">so_libs := <span class="variable">$(<span class="built_in">filter</span> %.so,<span class="variable">$(libs)</span>)</span></span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="8-basename"><a href="#8-basename" class="headerlink" title="8 basename"></a>8 basename</h2><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$(<span class="built_in">basename</span> &lt;names...&gt;)</span></span><br></pre></td></tr></table></figure><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">libs    := <span class="variable">$(<span class="built_in">notdir</span> $(<span class="built_in">shell</span> find /usr/lib -name lib*)</span>)</span><br><span class="line">a_libs  := <span class="variable">$(<span class="built_in">subst</span> lib,,$(<span class="built_in">basename</span> $(<span class="built_in">filter</span> %.a,<span class="variable">$(libs)</span>)</span>))</span><br><span class="line">so_libs := <span class="variable">$(<span class="built_in">subst</span> lib,,$(<span class="built_in">basename</span> $(<span class="built_in">filter</span> %.so,<span class="variable">$(libs)</span>)</span>))</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">将动态库和静态库的库名字取出来</span><br><span class="line"></span><br><span class="line">lib := $(shell find /usr/lib -name lib*)</span><br><span class="line"></span><br><span class="line">lib := $(notdir $(lib))</span><br><span class="line"></span><br><span class="line">lib := $(notdir $(shell find /usr/lib -name lib*))</span><br><span class="line">a_lib := $(subst lib,,$(basename $(filter %.a,$(lib))))</span><br><span class="line">so_lib := $(patsubst lib%,%,$(basename $(filter %.so,$(lib))))</span><br><span class="line"></span><br><span class="line">debug:</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">@<span class="built_in">echo</span> $(a_lib)</span></span><br><span class="line">@echo $(so_lib)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.PHONY:</span><br><span class="line">debug</span><br><span class="line"></span><br><span class="line">/usr/libdatrie.so.1.3.3     变为 libdatrie.so   basename  后变为libdatrie去掉.so 经过subst去掉lib </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="9-filter-out"><a href="#9-filter-out" class="headerlink" title="9 filter-out"></a>9 filter-out</h2><ul><li>剔除不想要的字符串</li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">objs := objs/add.o objs/minus.o objs/main.o</span><br><span class="line">cpp_objs := <span class="variable">$(<span class="built_in">filter</span>-out objs/main.o, <span class="variable">$(objs)</span>)</span></span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="10-wildcard"><a href="#10-wildcard" class="headerlink" title="10 wildcard"></a>10 wildcard</h2><ul><li>The wildcard function expands to a space-separated list of filenames that match the given patterns</li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cpp_srcs := <span class="variable">$(<span class="built_in">wildcard</span> src/*.cc src/*.cpp src/*.c)</span></span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><blockquote><p>boost.mk</p></blockquote><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ROOT := /usr</span><br><span class="line"></span><br><span class="line">sys_INCLUDE := <span class="variable">$(ROOT)</span>/<span class="keyword">include</span></span><br><span class="line">sys_LIB_DIR := /usr/lib/x86_64-linux-gnu</span><br><span class="line">full_paths := <span class="variable">$(<span class="built_in">shell</span> find <span class="variable">$(sys_LIB_DIR)</span> -name &quot;libboost_*&quot;)</span></span><br><span class="line">sys_LIBS = <span class="variable">$(<span class="built_in">filter</span> %.a %.so, <span class="variable">$(full_paths)</span>)</span></span><br><span class="line"><span class="comment"># sys_LIBS := $(wildcard $(sys_LIBS)*.a $(sys_LIBS)*.so)</span></span><br><span class="line">sys_LIBS := <span class="variable">$(<span class="built_in">basename</span> $(<span class="built_in">notdir</span> <span class="variable">$(sys_LIBS)</span>)</span>)</span><br><span class="line">sys_LIBS := <span class="variable">$(<span class="built_in">patsubst</span> lib%,%,<span class="variable">$(sys_LIBS)</span>)</span></span><br></pre></td></tr></table></figure><p>&emsp;</p><h1 id="Conditional-Rules"><a href="#Conditional-Rules" class="headerlink" title="Conditional Rules"></a>Conditional Rules</h1><blockquote><p>注意：</p></blockquote><ul><li>Condition 语句里面全部不能用 Tab 缩进, 你看到的 Makefile 如果好像有 “Tab”, 那全部是空格</li><li>使用 Tab 会报错：<em>*</em> commands commence before first target</li></ul><h2 id="1-ifeq-else-endif"><a href="#1-ifeq-else-endif" class="headerlink" title="1 ifeq / else / endif"></a>1 ifeq / else / endif</h2><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># build flags</span></span><br><span class="line"><span class="keyword">ifeq</span> (<span class="variable">$(TARGET_OS)</span>,darwin)</span><br><span class="line">    LDFLAGS += -rpath <span class="variable">$(CUDA_PATH)</span>/lib</span><br><span class="line">    CCFLAGS += -arch <span class="variable">$(HOST_ARCH)</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">ifeq</span> (<span class="variable">$(HOST_ARCH)</span>-<span class="variable">$(TARGET_ARCH)</span>-<span class="variable">$(TARGET_OS)</span>,x86_64-armv7l-linux)</span><br><span class="line">    LDFLAGS += --dynamic-linker=/lib/ld-linux-armhf.so.3</span><br><span class="line">    CCFLAGS += -mfloat-abi=hard</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">ifeq</span> (<span class="variable">$(TARGET_OS)</span>,android)</span><br><span class="line">    LDFLAGS += -pie</span><br><span class="line">    CCFLAGS += -fpie -fpic -fexceptions</span><br><span class="line"><span class="keyword">endif</span></span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="2-ifneq-else-endif"><a href="#2-ifneq-else-endif" class="headerlink" title="2 ifneq / else / endif"></a>2 ifneq / else / endif</h2><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">HOST_ARCH   := <span class="variable">$(<span class="built_in">shell</span> uname -m)</span></span><br><span class="line">TARGET_ARCH ?= <span class="variable">$(HOST_ARCH)</span></span><br><span class="line">temp := <span class="variable">$(<span class="built_in">filter</span> <span class="variable">$(TARGET_ARCH)</span>,x86_64 aarch64 sbsa ppc64le armv7l)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ifneq</span> (,<span class="variable">$(<span class="built_in">filter</span> <span class="variable">$(TARGET_ARCH)</span>,x86_64 aarch64 sbsa ppc64le armv7l)</span>)</span><br><span class="line">    <span class="keyword">ifneq</span> (<span class="variable">$(TARGET_ARCH)</span>,<span class="variable">$(HOST_ARCH)</span>)</span><br><span class="line">        <span class="keyword">ifneq</span> (,<span class="variable">$(<span class="built_in">filter</span> <span class="variable">$(TARGET_ARCH)</span>,x86_64 aarch64 sbsa ppc64le)</span>)</span><br><span class="line">            TARGET_SIZE := 64</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">ifneq</span> (,<span class="variable">$(<span class="built_in">filter</span> <span class="variable">$(TARGET_ARCH)</span>,armv7l)</span>)</span><br><span class="line">            TARGET_SIZE := 32</span><br><span class="line">        <span class="keyword">endif</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        TARGET_SIZE := <span class="variable">$(<span class="built_in">shell</span> getconf LONG_BIT)</span></span><br><span class="line">    <span class="keyword">endif</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="variable">$(<span class="built_in">error</span> ERROR - unsupported <span class="built_in">value</span> <span class="variable">$(TARGET_ARCH)</span> for TARGET_ARCH!)</span></span><br><span class="line"><span class="keyword">endif</span></span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="3-ifdef-else-endif"><a href="#3-ifdef-else-endif" class="headerlink" title="3 ifdef / else / endif"></a>3 ifdef / else / endif</h2><figure class="highlight make"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ifdef</span> TARGET_OVERRIDE <span class="comment"># cuda toolkit targets override</span></span><br><span class="line">    NVCCFLAGS += -target-dir <span class="variable">$(TARGET_OVERRIDE)</span></span><br><span class="line"><span class="keyword">endif</span></span><br></pre></td></tr></table></figure><p>&emsp;</p><h1 id="Compile"><a href="#Compile" class="headerlink" title="Compile"></a>Compile</h1><h1 id="1-编译过程-2"><a href="#1-编译过程-2" class="headerlink" title="1 编译过程"></a>1 编译过程</h1><h2 id="1-1-预处理"><a href="#1-1-预处理" class="headerlink" title="1.1 预处理"></a>1.1 预处理</h2><blockquote><p>示例</p></blockquote><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cpp_srcs := <span class="variable">$(<span class="built_in">shell</span> find src -name *.cpp)</span></span><br><span class="line">pp_files := <span class="variable">$(<span class="built_in">patsubst</span> src/%.cpp,src/%.i,<span class="variable">$(cpp_srcs)</span>)</span></span><br><span class="line"></span><br><span class="line">src/%.i : src/%.cpp</span><br><span class="line">@g++ -E <span class="variable">$^</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line">preprocess : <span class="variable">$(pp_files)</span></span><br><span class="line"></span><br><span class="line">clean :</span><br><span class="line">@rm -f src/*.i</span><br><span class="line"></span><br><span class="line">debug :</span><br><span class="line">@echo <span class="variable">$(pp_files)</span></span><br><span class="line"></span><br><span class="line">.PHONY : debug preprocess clean</span><br></pre></td></tr></table></figure><hr><p>cpp_srcs := $(shell find src -name “*.cpp”)</p><p>cpp_objs := $(subst /src,/objs,$(cpp_srcs))</p><p>cpp_objs := $(subst .cpp,.o,$(cpp_objs))</p><p>cpp_objs := $(patsubst src/%.cpp,objs/%.i,$(cpp_srcs))</p><h2 id="3-预定义变量-1"><a href="#3-预定义变量-1" class="headerlink" title="3 预定义变量"></a>3 预定义变量</h2><p> <code>$@</code>: 目标(target)的完整名称</p><p><code>$&lt;</code>: 第一个依赖文件（prerequisties）的名称</p><p><code>$^</code>: 所有的依赖文件（prerequisties），以空格分开，不包含重复的依赖文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">objs/%</span><span class="language-bash">.i:src/%.cpp</span></span><br><span class="line">@mkdir -p $(dir $@)</span><br><span class="line">@g++ -E $&lt; -o $@</span><br><span class="line"></span><br><span class="line">process:$(cpp_objs)</span><br><span class="line"></span><br><span class="line">clean:</span><br><span class="line">rm -rf objs/*.i</span><br><span class="line"></span><br><span class="line">debug:</span><br><span class="line">@echo $(cpp_srcs)</span><br><span class="line">@echo $(cpp_objs)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.PHONY:</span><br><span class="line">clean debug process </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">&amp;emsp;</span><br></pre></td></tr></table></figure><h2 id="1-2-编译成汇编语言"><a href="#1-2-编译成汇编语言" class="headerlink" title="1.2 编译成汇编语言"></a>1.2 编译成汇编语言</h2><blockquote><p>示例</p></blockquote><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cpp_srcs := <span class="variable">$(<span class="built_in">shell</span> find src -name *.cpp)</span></span><br><span class="line">as_files := <span class="variable">$(<span class="built_in">patsubst</span> src/%.cpp,src/%.s,<span class="variable">$(cpp_srcs)</span>)</span></span><br><span class="line"></span><br><span class="line">src/%.s : src/%.cpp</span><br><span class="line">@g++ -S <span class="variable">$^</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line">assemble : <span class="variable">$(as_files)</span></span><br><span class="line"></span><br><span class="line">clean :</span><br><span class="line">@rm -f src/*.s</span><br><span class="line"></span><br><span class="line">debug :</span><br><span class="line">@echo <span class="variable">$(as_files)</span></span><br><span class="line"></span><br><span class="line">.PHONY : debug assemble clean</span><br></pre></td></tr></table></figure><hr><h2 id="3-预定义变量-2"><a href="#3-预定义变量-2" class="headerlink" title="3 预定义变量"></a>3 预定义变量</h2><ul><li><p><code>$@</code>: 目标(target)的完整名称</p></li><li><p><code>$&lt;</code>: 第一个依赖文件（prerequisties）的名称</p></li><li><p><code>$^</code>: 所有的依赖文件（prerequisties），以空格分开，不包含重复的依赖文件</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cpp_srcs := $(shell find src -name &quot;*.cpp&quot;)</span><br><span class="line">cpp_objs := $(patsubst src/%.cpp,objs/%.s,$(cpp_srcs))</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">objs/%</span><span class="language-bash">.s:src/%.cpp</span></span><br><span class="line">@g++ -S $&lt; -o $@</span><br><span class="line">assemble:$(cpp_objs)</span><br><span class="line"></span><br><span class="line">clean:</span><br><span class="line">rm -rf objs/*.s</span><br><span class="line"></span><br><span class="line">debug:</span><br><span class="line">@echo $(cpp_srcs)</span><br><span class="line">@echo $(cpp_objs)</span><br><span class="line"></span><br><span class="line">.PHONY:</span><br></pre></td></tr></table></figure><pre><code>clean debug assemble</code></pre><hr><p>&emsp;</p><h2 id="1-3-编译成目标文件"><a href="#1-3-编译成目标文件" class="headerlink" title="1.3 编译成目标文件"></a>1.3 编译成目标文件</h2><blockquote><p>示例</p></blockquote><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cpp_srcs := <span class="variable">$(<span class="built_in">shell</span> find src -name *.cpp)</span></span><br><span class="line">cpp_objs := <span class="variable">$(<span class="built_in">patsubst</span> src/%.cpp,objs/%.o,<span class="variable">$(cpp_srcs)</span>)</span></span><br><span class="line"></span><br><span class="line">objs/%.o : src/%.cpp</span><br><span class="line">@mkdir -p <span class="variable">$(<span class="built_in">dir</span> <span class="variable">$@</span>)</span></span><br><span class="line">@g++ -c <span class="variable">$^</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line">objects : <span class="variable">$(cpp_objs)</span></span><br><span class="line"></span><br><span class="line">clean :</span><br><span class="line">@rm -rf objs src/*.o</span><br><span class="line"></span><br><span class="line">debug :</span><br><span class="line">@echo <span class="variable">$(as_files)</span></span><br><span class="line"></span><br><span class="line">.PHONY : debug objects clean</span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="1-4-链接可执行文件"><a href="#1-4-链接可执行文件" class="headerlink" title="1.4 链接可执行文件"></a>1.4 链接可执行文件</h2><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">cpp_srcs := <span class="variable">$(<span class="built_in">shell</span> find src -name *.cpp)</span></span><br><span class="line">cpp_objs := <span class="variable">$(<span class="built_in">patsubst</span> src/%.cpp,objs/%.o,<span class="variable">$(cpp_srcs)</span>)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">objs/%.o : src/%.cpp</span><br><span class="line">@mkdir -p <span class="variable">$(<span class="built_in">dir</span> <span class="variable">$@</span>)</span></span><br><span class="line">@g++ -c <span class="variable">$^</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line">workspace/exec : <span class="variable">$(cpp_objs)</span></span><br><span class="line">@mkdir workspace/exec</span><br><span class="line">@g++ <span class="variable">$^</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line">run : workspace</span><br><span class="line">@./<span class="variable">$&lt;</span></span><br><span class="line"></span><br><span class="line">clean :</span><br><span class="line">@rm -rf objs workspace/exec</span><br><span class="line"></span><br><span class="line">debug :</span><br><span class="line">@echo <span class="variable">$(as_files)</span></span><br><span class="line"></span><br><span class="line">.PHONY : debug run clean</span><br></pre></td></tr></table></figure><hr><h2 id="3-预定义变量-3"><a href="#3-预定义变量-3" class="headerlink" title="3 预定义变量"></a>3 预定义变量</h2><ul><li><code>$@</code>: 目标(target)的完整名称</li><li><p>$&lt;`: 第一个依赖文件（prerequisties）的名称</p></li><li><p><code>$^</code>: 所有的依赖文件（prerequisties），以空格分开，不包含重复的依赖文件</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">cpp_srcs := $(shell find src -name &quot;*.cpp&quot;)</span><br><span class="line"></span><br><span class="line">cpp_o := $(patsubst src/%.cpp,objs/%.o,$(cpp_srcs))</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">objs/%</span><span class="language-bash">.o : src/%.cpp</span></span><br><span class="line">@mkdir -p $(dir $@)</span><br><span class="line">@g++ -c $&lt; -o $@</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">workspace/exec : $(cpp_o)</span><br><span class="line">@mkdir -p $(dir $@)</span><br><span class="line">@g++ $^ -o $@</span><br><span class="line"></span><br><span class="line">run : workspace/exec</span><br><span class="line">@./$&lt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">debug:</span><br><span class="line">@echo $(cpp_srcs)</span><br><span class="line">@echo $(cpp_o)</span><br><span class="line">clean:</span><br><span class="line">rm -rf objs workspace/exec</span><br><span class="line"></span><br><span class="line">.PHONY:</span><br></pre></td></tr></table></figure><pre><code>debug workspace/exec run</code></pre><hr><p>&emsp;</p><h1 id="2-编译选项"><a href="#2-编译选项" class="headerlink" title="2 编译选项"></a>2 编译选项</h1><blockquote><p>编译选项</p></blockquote><ul><li><code>-m64</code>: 指定编译为 64 位应用程序</li><li><code>-std=</code>: 指定编译标准，例如：-std=c++11、-std=c++14</li><li><code>-g</code>: 包含调试信息</li><li><code>-w</code>: 不显示警告</li><li><code>-O</code>: 优化等级，通常使用：-O3</li><li><code>-I</code>: 加在头文件路径前</li><li><code>fPIC</code>: (Position-Independent Code), 产生的没有绝对地址，全部使用相对地址，代码可以被加载到内存的任意位置，且可以正确的执行。这正是共享库所要求的，共享库被加载时，在内存的位置不是固定的</li></ul><blockquote><p>链接选项</p></blockquote><ul><li><code>-l</code>: 加在库名前面</li><li><code>-L</code>: 加在库路径前面</li><li><code>-Wl,&lt;选项&gt;</code>: 将逗号分隔的 &lt;选项&gt; 传递给链接器</li><li><code>-rpath=</code>: “运行” 的时候，去找的目录。运行的时候，要找 .so 文件，会从这个选项里指定的地方去找</li></ul><p>&emsp;</p><h1 id="3-Implicit-Rules"><a href="#3-Implicit-Rules" class="headerlink" title="3 Implicit Rules"></a>3 Implicit Rules</h1><ul><li>CC: Program for compiling C programs; default cc</li><li>CXX: Program for compiling C++ programs; default g++</li><li>CFLAGS: Extra flags to give to the C compiler</li><li>CXXFLAGS: Extra flags to give to the C++ compiler</li><li>CPPFLAGS: Extra flags to give to the C preprocessor</li><li>LDFLAGS: Extra flags to give to compilers when they are supposed to invoke the linker</li></ul><p>&emsp;</p><h1 id="4-编译带头文件的程序"><a href="#4-编译带头文件的程序" class="headerlink" title="4 编译带头文件的程序"></a>4 编译带头文件的程序</h1><blockquote><p>add.hpp</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> ADD_HPP</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ADD_HPP</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// ADD_HPP</span></span></span><br></pre></td></tr></table></figure><blockquote><p>add.cpp</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>minus.hpp</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MINUS_HPP</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MINUS_HPP</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">minus</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// MINUS_HPP</span></span></span><br></pre></td></tr></table></figure><blockquote><p>minus.cpp</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">minus</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a-b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>main.cpp</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;add.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;minus.hpp&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">10</span>; <span class="type">int</span> b=<span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> res = <span class="built_in">add</span>(a, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a + b = %d\n&quot;</span>, res);</span><br><span class="line">    res = <span class="built_in">minus</span>(a, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a - b = %d\n&quot;</span>, res);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Makefile</p></blockquote><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">cpp_srcs := <span class="variable">$(<span class="built_in">shell</span> find src -name *.cpp)</span></span><br><span class="line">cpp_objs := <span class="variable">$(<span class="built_in">patsubst</span> src/%.cpp,objs/%.o,<span class="variable">$(cpp_srcs)</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 你的头文件所在文件夹路径（建议绝对路径）</span></span><br><span class="line">include_paths := </span><br><span class="line">I_flag        := $(include_paths:%=-I%)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">objs/%.o : src/%.cpp</span><br><span class="line">@mkdir -p <span class="variable">$(<span class="built_in">dir</span> <span class="variable">$@</span>)</span></span><br><span class="line">@g++ -c <span class="variable">$^</span> -o <span class="variable">$@</span> <span class="variable">$(I_flag)</span></span><br><span class="line"></span><br><span class="line">workspace/exec : <span class="variable">$(cpp_objs)</span></span><br><span class="line">@mkdir -p <span class="variable">$(<span class="built_in">dir</span> <span class="variable">$@</span>)</span></span><br><span class="line">@g++ <span class="variable">$^</span> -o <span class="variable">$@</span> </span><br><span class="line"></span><br><span class="line">run : workspace/exec</span><br><span class="line">@./<span class="variable">$&lt;</span></span><br><span class="line"></span><br><span class="line">debug :</span><br><span class="line">@echo <span class="variable">$(I_flag)</span></span><br><span class="line"></span><br><span class="line">clean :</span><br><span class="line">@rm -rf objs</span><br><span class="line"></span><br><span class="line">.PHONY : debug run</span><br></pre></td></tr></table></figure><p>&emsp;</p><h1 id="Makefile-静态库编译"><a href="#Makefile-静态库编译" class="headerlink" title="Makefile 静态库编译"></a>Makefile 静态库编译</h1><h2 id="1-程序"><a href="#1-程序" class="headerlink" title="1 程序"></a>1 程序</h2><blockquote><p>add.hpp</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> ADD_HPP</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ADD_HPP</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// ADD_HPP</span></span></span><br></pre></td></tr></table></figure><blockquote><p>add.cpp</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>minus.hpp</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MINUS_HPP</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MINUS_HPP</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">minus</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// MINUS_HPP</span></span></span><br></pre></td></tr></table></figure><blockquote><p>minus.cpp</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">minus</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a-b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>main.cpp</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;add.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;minus.hpp&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">10</span>; <span class="type">int</span> b=<span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> res = <span class="built_in">add</span>(a, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a + b = %d\n&quot;</span>, res);</span><br><span class="line">    res = <span class="built_in">minus</span>(a, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a - b = %d\n&quot;</span>, res);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="2-编译过程-1"><a href="#2-编译过程-1" class="headerlink" title="2 编译过程"></a>2 编译过程</h2><ul><li><p>源文件[.c/cpp] -&gt; Object文件[.o]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ -c [.c/cpp][.c/cpp]... -o [.o][.o]... -I[.h/hpp] -g</span><br></pre></td></tr></table></figure></li><li><p>Object文件[.o] -&gt; 静态库文件[lib库名.a]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ar -r [lib库名.a] [.o][.o]...</span><br></pre></td></tr></table></figure></li><li><p>main 文件[.c/cpp] -&gt; Object 文件[.o]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ -c [main.c/cpp] -o [.o] -I[.h/hpp] </span><br></pre></td></tr></table></figure></li><li><p>链接 main 的 Object 文件与静态库文件 [lib库名.a]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ [main.o] -o [可执行文件] -l[库名] -L[库路径]</span><br></pre></td></tr></table></figure></li></ul><p>&emsp;</p><h1 id="动态库（共享库）"><a href="#动态库（共享库）" class="headerlink" title="动态库（共享库）"></a>动态库（共享库）</h1><h2 id="1-编库"><a href="#1-编库" class="headerlink" title="1 编库"></a>1 编库</h2><blockquote><p>编译 .c 文件<br>源文件[.c/cpp] -&gt; Object文件[.o]</p></blockquote><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ -c [.c/cpp][.c/cpp]... -o [.o][.o]... -I[.h/hpp] -g -fpic</span><br></pre></td></tr></table></figure><blockquote><p>Object文件[.o] -&gt; 动态库文件[lib库名.so]</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ -shared [.o][.o]... -o [lib库名.so] </span><br></pre></td></tr></table></figure><blockquote><p>main文件[.c/cpp] -&gt; Object文件[.o]</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ -c [main.c/cpp] -o [.o] -I[.h/hpp] -g</span><br></pre></td></tr></table></figure><p>&emsp;</p><h2 id="2-链接"><a href="#2-链接" class="headerlink" title="2 链接"></a>2 链接</h2><blockquote><p>链接 main 的 Object 文件与动态库文件[lib库名.so]</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ [main.o] -o [可执行文件] -l[库名] -L[库路径] -Wl,-rpath=[库路径]</span><br></pre></td></tr></table></figure><h1 id="常见-Error"><a href="#常见-Error" class="headerlink" title="常见 Error"></a>常见 Error</h1><blockquote><p><em>*</em> missing separator.  Stop.</p></blockquote><ul><li>原因: Makefile 语法出错</li><li>解决方法: 根据报错的行数，检查 tab 缩进，空格问题</li></ul><blockquote><p><em>*</em> commands commence before first target.  Stop</p></blockquote><ul><li>原因: if等语句里面用了 tab 缩进</li><li>解决方法: 缩进的地方全部改为空格</li></ul><h1 id="GNC-Tutorial"><a href="#GNC-Tutorial" class="headerlink" title="GNC-Tutorial"></a>GNC-Tutorial</h1><p>Linux 下编译与 Makefile 的教程</p><h1 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a>Contents</h1><h2 id="0-Intro"><a href="#0-Intro" class="headerlink" title="0 Intro"></a>0 Intro</h2><ul><li>GCC 的介绍</li><li>编译系统</li></ul><h2 id="1-C"><a href="#1-C" class="headerlink" title="1 C"></a>1 C</h2><p>C 程序的编译过程</p><h2 id="2-C"><a href="#2-C" class="headerlink" title="2 C++"></a>2 C++</h2><p>C++ 程序的编译过程</p><h2 id="3-Makefile"><a href="#3-Makefile" class="headerlink" title="3 Makefile"></a>3 Makefile</h2><ul><li>Intro: </li><li>Variable: Makefile 中变量的写法</li><li>Operator&amp;Symbols: 操作符和 Makefile 常用的符号</li><li>Functions: 常用函数</li><li>Conditional Statement: 条件语句</li><li>Compile: 编译过程与编译选项</li><li>Static Library: 静态库的编译与链接</li><li>Shared Library: 共享库/动态库的编译与链接</li><li>Errors: 常见的一些错误</li></ul><p>&emsp;</p><div align=center>    <img src="./imgs/QRcode.png" width=150>    <h4>If u wanna buy me a cup of coffee.</h></div><p>&emsp;</p><h1 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h1><p>&emsp;</p><h1 id="1-基本介绍"><a href="#1-基本介绍" class="headerlink" title="1 基本介绍"></a>1 基本介绍</h1><h2 id="1-1-Linux"><a href="#1-1-Linux" class="headerlink" title="1.1 Linux"></a>1.1 Linux</h2><ul><li>文件目录</li><li>基本操作命令</li><li>vim 基本操作命令</li></ul><p>&emsp;</p><h1 id="2-编译过程-2"><a href="#2-编译过程-2" class="headerlink" title="2 编译过程"></a>2 编译过程</h1><h2 id="2-1-C-语言编译"><a href="#2-1-C-语言编译" class="headerlink" title="2.1 C 语言编译"></a>2.1 C 语言编译</h2><ul><li><p>预编译</p><p>把 .c源文件编译成 .i 预处理文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -E [源文件.c] -o [自定义名.i]</span><br></pre></td></tr></table></figure></li><li><p>编译成汇编语言</p><p>把 .i 文件编译成 .s 汇编语言文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -S [源文件.c] </span><br></pre></td></tr></table></figure><ul><li>注意：隐藏了预编译、删除预处理i文件的过程</li></ul></li><li><p>编译成二进制<br>把 .s 编译成二进制.o 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -c [源文件.c] -o [自定义文件名.o] [编译选项]</span><br></pre></td></tr></table></figure><ul><li>注意：隐藏了。。。</li></ul></li><li><p>链接成可执行文件<br>把 .o 文件，链接成可执行的二进制文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc [.o] -o [自定义文件名] [链接选项]</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-2-C-语言编译"><a href="#2-2-C-语言编译" class="headerlink" title="2.2 C++ 语言编译"></a>2.2 C++ 语言编译</h2><ul><li><p>预编译</p><p>把 .c源文件编译成 .ii 预处理文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -E [源文件.c] -o [自定义名.ii]</span><br></pre></td></tr></table></figure></li><li><p>编译成汇编语言</p><p>把 .i 文件编译成 .s 汇编语言文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -S [源文件.c] </span><br></pre></td></tr></table></figure><ul><li>注意：隐藏了预编译、删除预处理i文件的过程</li></ul></li><li><p>编译成二进制<br>把 .s 编译成二进制.o 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -c [源文件.c] -o [自定义文件名.o] [编译选项]</span><br></pre></td></tr></table></figure><ul><li>注意：隐藏了。。。</li></ul></li><li><p>链接成可执行文件<br>把 .o 文件，链接成可执行的二进制文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc [.o] -o [自定义文件名] [链接选项]</span><br></pre></td></tr></table></figure><p>&emsp;</p></li></ul><h1 id="3-GCC"><a href="#3-GCC" class="headerlink" title="3 GCC"></a>3 GCC</h1><p>&emsp;</p><h1 id="4-Makefile"><a href="#4-Makefile" class="headerlink" title="4 Makefile"></a>4 Makefile</h1><h2 id="4-1-基础语法"><a href="#4-1-基础语法" class="headerlink" title="4.1 基础语法"></a>4.1 基础语法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">target : prequisties</span><br><span class="line">    @command</span><br></pre></td></tr></table></figure><h2 id="4-2-变量使用"><a href="#4-2-变量使用" class="headerlink" title="4.2 变量使用"></a>4.2 变量使用</h2><p>先赋初值，调用语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(变量名)</span><br></pre></td></tr></table></figure><h2 id="4-3-函数"><a href="#4-3-函数" class="headerlink" title="4.3 函数"></a>4.3 函数</h2><h3 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h3><ul><li>使用Linux命令</li></ul><h3 id="patsubst"><a href="#patsubst" class="headerlink" title="patsubst"></a>patsubst</h3><ul><li>按照一定的模式替换字符串</li></ul><h3 id="subst"><a href="#subst" class="headerlink" title="subst"></a>subst</h3><ul><li>直接替换字符串</li></ul><h3 id="dir"><a href="#dir" class="headerlink" title="dir"></a>dir</h3><ul><li>取父级目录</li></ul><h2 id="4-4-其它"><a href="#4-4-其它" class="headerlink" title="4.4 其它"></a>4.4 其它</h2><p>（1）增加编译选项的方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">include_paths := /datav/Lean/opencv4/include/opencv4 \</span><br><span class="line">                 /datav/Lean/OpenBLAS/include</span><br><span class="line"></span><br><span class="line">I_option := $(include_paths:%=-I%)</span><br></pre></td></tr></table></figure><p>（2）伪目标.PHONY<br>告诉 Make 在.PHONY 后面的都是伪目标（命令），不用生成文件，每次都会执行下面的 command（如果有 command 的话）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;emsp&quot;&gt;&lt;a href=&quot;#emsp&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&quot;&gt;&lt;/a&gt;&amp;emsp;&lt;/h2&gt;&lt;p&gt;title: Linux makiefile学习&lt;br&gt;tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C++&lt;/li&gt;
&lt;l</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux C语言进阶</title>
    <link href="https://aixiaocainiao.github.io/posts/c48ba556.html"/>
    <id>https://aixiaocainiao.github.io/posts/c48ba556.html</id>
    <published>2023-12-16T13:41:47.892Z</published>
    <updated>2023-12-16T13:43:24.537Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux-C语言进阶"><a href="#Linux-C语言进阶" class="headerlink" title="Linux C语言进阶"></a>Linux C语言进阶</h1><h2 id="一、linux-高级C语言"><a href="#一、linux-高级C语言" class="headerlink" title="一、linux 高级C语言"></a>一、linux 高级C语言</h2><p>路由器   openrt linux发型版本</p><p>操作系统 目前都是c语言写的了</p><p>unix操作系统 (不开源)</p><p>GNU/Linux  完整名字</p><p>linux是一个仿造unix系统写的 函数名 功能都一样 </p><p>但是一个商业 不开源  一个开源</p><p>ubuntu 图形优化最好 桌面好</p><h2 id="二、linux的体系架构"><a href="#二、linux的体系架构" class="headerlink" title="二、linux的体系架构"></a>二、linux的体系架构</h2><h3 id="1、内核空间-用户空间"><a href="#1、内核空间-用户空间" class="headerlink" title="1、内核空间 用户空间"></a>1、内核空间 用户空间</h3><ul><li><p>写的c语言代码   gcc编译生成的可执行程序  为应用层程序</p></li><li><p>驱动为内核编程</p></li></ul><h3 id="2、结构-不容易随意访问到内层-应用层程序员可以通过系统调用函数访问底层"><a href="#2、结构-不容易随意访问到内层-应用层程序员可以通过系统调用函数访问底层" class="headerlink" title="2、结构:不容易随意访问到内层 应用层程序员可以通过系统调用函数访问底层"></a>2、结构:不容易随意访问到内层 应用层程序员可以通过系统调用函数访问底层</h3><p>应用程序编程  gcc  </p><p>驱动 内核空间</p><p>总结：应用层的程序是提需求的  真正完成功能 的是驱动或者操作系统</p><h3 id="3、linux四大组件"><a href="#3、linux四大组件" class="headerlink" title="3、linux四大组件"></a>3、linux四大组件</h3><p>shell             命令行解释器</p><p>文件系统      管理磁盘上的文件</p><p>应用程序</p><p>Linux内核</p><p>​      文件系统管理</p><p>​      内存管理</p><p>​      进程调度</p><p>​      驱动管理</p><p>​      网络协议</p><h3 id="4、终端程序"><a href="#4、终端程序" class="headerlink" title="4、终端程序"></a>4、终端程序</h3><p>ctrl+alt+t 新开终端</p><p>ctrl+shift+n  旁边出现终端 多开</p><h3 id="5、流行-的两种软件软件包管理机制"><a href="#5、流行-的两种软件软件包管理机制" class="headerlink" title="5、流行 的两种软件软件包管理机制"></a>5、流行 的两种软件软件包管理机制</h3><p>deb rpm</p><h3 id="6、软件包的类型-二进制软件包-源码包"><a href="#6、软件包的类型-二进制软件包-源码包" class="headerlink" title="6、软件包的类型:二进制软件包    源码包"></a>6、软件包的类型:二进制软件包    源码包</h3><h3 id="7、软件包的命令遵循如下约定"><a href="#7、软件包的命令遵循如下约定" class="headerlink" title="7、软件包的命令遵循如下约定"></a>7、软件包的命令遵循如下约定</h3><p>Filename_Version-Reversion_Architecture.deb</p><p>软件包名称 软件版本  修订版本  体系结构</p><h3 id="8、dpkg相关命令"><a href="#8、dpkg相关命令" class="headerlink" title="8、dpkg相关命令"></a>8、dpkg相关命令</h3><ul><li><p>dpkg -i package  安装</p></li><li><p>dpkg -r Filename  移除一个已经安装的软件包</p></li><li><p>dpkg -P Filename 移除已经安装的软甲包及其配置文件</p></li><li><p>dpkg -L Filename 列出按照的软件包清单</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">xinyue@xinyuezi:~/下载$ sudo dpkg -L code</span><br><span class="line">[sudo] xinyue 的密码： </span><br><span class="line">/.</span><br><span class="line">/usr</span><br></pre></td></tr></table></figure><ul><li>dpkg -s package 显出软件包的安装状态</li></ul><h3 id="8、apt工作原理？"><a href="#8、apt工作原理？" class="headerlink" title="8、apt工作原理？"></a>8、apt工作原理？</h3><p>ubuntu中使用软件源配置文件/etc/apt/sources.list列出最合适的访问的镜像站点地址</p><p>软件源配置文件只是告知系统可以访问的镜像站点地址 但是站点拥有什么资源不清  若是按照一个软件包 就寻找一遍  效率低下  于是  为软件资源列个清单 (建立索引文件)以便本地主机查询 这就是apt软件管理器的工作原理</p><p>注意:sudo vim /etc/apt/sources.list 如果修改了文件</p><p>需要使用apt-get update更新一下索引 </p><h3 id="9、软件管理相关命令"><a href="#9、软件管理相关命令" class="headerlink" title="9、软件管理相关命令"></a>9、软件管理相关命令</h3><p>卸载软件包</p><ul><li>不完全卸载</li></ul><p>apt-get remove</p><ul><li>完全卸载</li></ul><p>apt-get —purge remove 卸载软件包及其配置文件</p><p>问题:</p><p>1、什么是GPL？</p><p>2、Linux和unix有什么区别？</p><p>3、dpkg和apt软件包管理器有什么区别？</p><p>dpkg最初并没有考虑到软件的依赖关系 </p><h2 id="三、vim编辑器的使用"><a href="#三、vim编辑器的使用" class="headerlink" title="三、vim编辑器的使用"></a>三、vim编辑器的使用</h2><p>vim demo.c</p><p>插入模式</p><p>单击一个i  可以编写代码</p><p>四、shell基本命令的使用</p><h3 id="一、shell简介"><a href="#一、shell简介" class="headerlink" title="一、shell简介"></a>一、shell简介</h3><p>1、shell (贝壳) </p><p>Linux中的shell就是Linux内核的一个外层保护工具 并负责完成用户和内核之间的交互</p><p>命令行解释器 - 将用户命令解析为操作系统所能理解的指令  实现用户和操作系统的交互</p><p>当徐亚重复执行若干命令  可以将这些命令集合起来  加入一定的控制语句  编辑成为shell脚本文件  交个shell批量处理</p><p>2、选择shell程序</p><p>Bourne Shell(简称sh) 用的最多</p><p>3、简单命令</p><p>关机: sudo shutdowm -h now</p><p>重启:sudo shutdowm -r now</p><p>​         sudo reboot now</p><p>定时关机:sudo shutdown -h +45 “That is all,game over”</p><p>(下载软件 方便出门)</p><p>定时重启:sudo shutdowm -r  +45  “That is all,game over”</p><h3 id="二、shell命令格式"><a href="#二、shell命令格式" class="headerlink" title="二、shell命令格式"></a>二、shell命令格式</h3><p>1、username@hostname:direction$</p><p>用户名        主机名       目录名</p><p>direction:目录名  显示当前所处 的路径当在根目录下显示为”/“  当在用户主目录下  显示为”~”</p><p>例如:xinyue@xinyuezi:~$ </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">xinyue@xinyuezi:~$ whoami</span><br><span class="line">xinyue</span><br><span class="line">xinyue@xinyuezi:~$ hostname</span><br><span class="line">xinyuezi</span><br><span class="line">xinyue@xinyuezi:~$ pwd</span><br><span class="line">/home/xinyue</span><br></pre></td></tr></table></figure><p>2、shell命令格式<br>通常一条命令包含三个要素：命令名称  选项  参数<br>命令名称是必须的<br>选项和参数都可以是可选的  </p><ul><li>命令格式如下<br>$ command [-options] Argument1  Argument ..<br>指令     选项   参数1 参数2<br>$  shell提示符  如果当前用户为超级用户  提示符为# 其他用户的提示符均为$<br>Command 命令名称  shell命令或程序  严格区分大小写<br>options 命令选项  用于改变命令执行动作的类型 由-引导 可以同时带有多个选项<br>Argument  命令参数  指出命令作用的对象或目标  有的命令允许带多个参数 </li></ul><p>注意：一条命令的三要素之间用空格隔开  </p><p>若将多个命令在一行书写  用分号；将各命令隔开<br>如果一条命令不能在一行写完  在杭尾使用反斜杠\标明该条命令未结束</p><p>3、命令行操作</p><ul><li>补齐命令与文件名<br>一个tab  文件补齐<br>两个tab  命令补齐 再按一下用于文件名补齐</li><li>查询命令历史<br>上下箭头<br>history  number（多少行）<br>例如 history  10</li><li>打印历史记录<br>echo  $HISTSIZE  显示历史容量</li><li>临时修改<br>HISTSIZE=50   修改历史容量<br>echo  $HISTSIZE    显示50</li><li>永久修改<br>vi .bashrc<br>HISTSIZE=50<br>source .bashrc<br>echo  $HISTSIZE</li></ul><p>4、  shell中的通配符<br>批量处理文件<br>同一类型  就一个不一样</p><ul><li>file_*.txt    file_we.txt   file_re.txt<br>三 shell管道<br>可以把一系列命令连接起来  意味着第一个命令的输出将作为第二个命令的输入  通过管道  传递给第二个命令  第二个命令的输出又作为第三个命令的输入  以此类推即可   通过使用  |  符号连接成一个管道<br>命令wc </li></ul><p>（进程间通信）<br>ls /usr/bin | wc -w</p><p>思考题<br>shell中有哪些特殊字符<br>shell中管道的作用<br>shell中 grep命令和管道如何结合</p><p>输入输出重定向<br>输入输出重定向是改变shell命令或程序默认的标注输入\输出目标  重新定向到新的目标</p><ul><li>ctrl+d结束键盘输入</li></ul><p>疑问:定义变量时  不分配内存空间<br>只有在使用时  才会分配内存空间</p><h2 id="五、结构体"><a href="#五、结构体" class="headerlink" title="五、结构体"></a>五、结构体</h2><h3 id="1、结构体两种类型-结构题数组一样"><a href="#1、结构体两种类型-结构题数组一样" class="headerlink" title="1、结构体两种类型(结构题数组一样)"></a>1、结构体两种类型(结构题数组一样)</h3><ul><li>常用格式</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line"><span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="type">char</span> sex;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>无名结构体  常用在嵌套结构体</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line"><span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="type">char</span> sex;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">            <span class="type">int</span> num;</span><br><span class="line">            <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">            <span class="type">char</span> sex;</span><br><span class="line">            <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">          &#123;</span></span><br><span class="line">            <span class="type">int</span> num;</span><br><span class="line">            <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">            <span class="type">char</span> sex;</span><br><span class="line">         &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="2、结构体两种初始化"><a href="#2、结构体两种初始化" class="headerlink" title="2、结构体两种初始化"></a>2、结构体两种初始化</h3><ul><li>直接全部给值初始化</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line"><span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="type">char</span> sex;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">sarr</span>=</span> &#123; <span class="number">1001</span>,<span class="string">&quot;wr1&quot;</span>,<span class="string">&#x27;m&#x27;</span>&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>先定义 再初始化</li></ul><p>注意 :</p><p>对结构体中字符数组赋值时，出现表达式必须是可修改的左值的问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">struct student</span><br><span class="line">&#123;</span><br><span class="line">int num;</span><br><span class="line">char name[20];</span><br><span class="line">char sex;</span><br><span class="line">&#125;;</span><br><span class="line">struct student sar;</span><br><span class="line">// char name[20];name是数组名</span><br><span class="line">// sar.name = &quot;he&quot;;//表达式必须是可修改的左值</span><br><span class="line">strcpy(sar.name,&quot;Tom&quot;);</span><br><span class="line">sar.num = 10;</span><br><span class="line">sar.sex = &#x27;m&#x27;;</span><br></pre></td></tr></table></figure><ul><li>结构体字符数组赋值问题解决</li></ul><p>在C++中为结构体中的字符数组赋值时，出现”表达式必须是可修改的左值“的错误提醒，编译报错“不可指定数据类型”</p><p>结构体中定义的数组：char brand[20]，使用 t-&gt;brand=”adc”是无法进行赋值的。因为brand是字符数组名，而“adc”字符串常量，字符数组名不无法修改的！ 可以在对结构体初始化时用字符串常量进行赋值。</p><ul><li>1、用字符指针替代字符数组</li><li>2、使用strcpy对结构体数组赋值</li><li>3、使用string</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stu</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="comment">/* data */</span></span><br><span class="line"><span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="comment">// 1、方法1</span></span><br><span class="line"><span class="type">char</span> *name1;</span><br><span class="line"><span class="comment">// 方式3  </span></span><br><span class="line"> <span class="built_in">string</span> name2;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">void</span> <span class="title function_">test</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stu</span> <span class="title">s1</span>;</span></span><br><span class="line">s1.name = <span class="string">&quot;he&quot;</span>;<span class="comment">//报错  表达式必须是可修改的左值</span></span><br><span class="line">s1.name1 = <span class="string">&quot;he&quot;</span>;</span><br><span class="line"><span class="comment">// 方式2</span></span><br><span class="line"><span class="built_in">strcpy</span>(s1.name1,<span class="string">&quot;he&quot;</span>);</span><br><span class="line"><span class="comment">// 方式3</span></span><br><span class="line">    s1.name2 = <span class="string">&quot;he&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、typedef + 结构体</p><ul><li>常用</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">typedef struct Student</span><br><span class="line">&#123;</span><br><span class="line">   int no;</span><br><span class="line">   char name[12];</span><br><span class="line">&#125;Stu,student;</span><br></pre></td></tr></table></figure><ul><li>无名</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">typedef struct</span><br><span class="line">&#123;</span><br><span class="line">   int no;</span><br><span class="line">   char name[12];</span><br><span class="line">&#125;Stu;</span><br></pre></td></tr></table></figure><p>4、typedef+结构体指针</p><p>(一)、结构体指针用法1：</p><p>结构体要自引用时，Student1是错误用法。</p><p>解释：</p><ul><li><p>错误使用</p><p>试想引用成员next是另一个完整的结构，其内部还将包含它自己的成员next,</p></li></ul><p>这第二个成员又包含一个完整的结构，它还将包括它自己的成员next，这样重复下去永无休止，内存都用光了。所以不合法。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">非法</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student1</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> age;</span><br><span class="line">            <span class="class"><span class="keyword">struct</span> <span class="title">Student1</span> <span class="title">next</span>;</span></span><br><span class="line">    &#125;; </span><br></pre></td></tr></table></figure><ul><li>正确用法是：</li></ul><p>结构体自引用 ，只能自引用指针。编译器在结构的长度确定之前就已经知道指针的长度，所以这种自引用是合法的。结构体的自引用在实现链表，树等高级的操作时用处很大。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student1</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line">​    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">​    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> *<span class="title">next</span>;</span> </span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>错误使用无名结构体</li></ul><p>结构体指针用法注意：这样是不行的，虽然Student1代表了结构体，但是Student1类型名的声明是在末尾定义，当要声明struct{ }时，内部无法识别Student1类型。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line">​    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">​    Student1 *next; </span><br><span class="line"></span><br><span class="line">&#125;Student1,*StudentPtr;</span><br></pre></td></tr></table></figure><p>(二)、结构体指针用法2：</p><p>注意此时，Student1是struct Student{}的别名，StudentPtr是Student的指针</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Student1</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line">​    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">​    Student1 *next; </span><br><span class="line"></span><br><span class="line">&#125;Student1,*StudentPtr;</span><br></pre></td></tr></table></figure><p>我使用StudentPtr时出现了个有意思现象，结构体指针若不手动分分配内存，讲道理是不能用的。</p><p>当定义了两个结构体指针s1,s2，两个结构体指针都不分配内存，给其中一个赋值，然后使用没有问题，输出良好。</p><p>(三)、总结：</p><ul><li><p>结构体定义的时候不写名字  只能做全局变量</p></li><li><p>因为 struct name  这两个才是一个数据类型</p></li><li><p>结构体只有在初始化的时候才可以全部赋值  加个大括号   一旦定义了  换行就不能大括号全部赋值了<br>无名结构体往往用于嵌套结构体 代码补一下</p></li></ul><ul><li>struct student *pstu</li></ul><p>​      pstu指向的事struct student结构体类型的指针  结构体指针的说明规定了它的数据特性 并未结构体指针本身分配了一定的内存空间  但是指针的内容尚未确定  即它指向随机的对象</p><ul><li><p>明天看一下  变量在什么时候分配内存空间</p></li><li><p>p+i  数组 指针</p></li></ul><h2 id="六、union共用体"><a href="#六、union共用体" class="headerlink" title="六、union共用体"></a>六、union共用体</h2><p>定义：在c语言中  不同数据类型的数据可以使用共同的存储区域 这种构造类型称为共用体简称共用，又称联合体。和结构体使用和说明类似 </p><ul><li><p>两者本质上的不同仅仅在于使用内存的方式上<br>union  数据中 内存最大那个作为储存<br>struct是所有数据内存之和</p></li><li><p>共用同一块内存  存在内存覆盖的问题<br>也就是数据只会保持最后那一次 地址相同</p></li></ul><p>简单代码如下:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">syt</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">/* data */</span></span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">int</span> number;</span><br><span class="line">    <span class="type">short</span> average;</span><br><span class="line">    <span class="comment">// double average;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">void</span> <span class="title function_">test_ui</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">union</span> <span class="title">syt</span> <span class="title">ss</span>;</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;char value = %ld\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">char</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;int value = %ld\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;double value = %ld\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">short</span>));</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;union syt value = %ld\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">union</span> syt));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;union syt value = %ld\n&quot;</span>,<span class="keyword">sizeof</span>(ss));</span><br><span class="line">    </span><br><span class="line">    ss.ch = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    ss.number = <span class="number">10</span>;</span><br><span class="line">    ss.average = <span class="number">8</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ss.ch = %d ss.number = %d ss.average = %d\n&quot;</span>,ss.ch,ss.number,ss.average);</span><br><span class="line">    ss.number = <span class="number">0x12345678</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p %p %p\n&quot;</span>,&amp;ss.average,&amp;ss.ch,&amp;ss.number);</span><br><span class="line"><span class="type">char</span> *p;</span><br><span class="line">    p = (<span class="type">char</span>*)&amp;ss;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(<span class="keyword">union</span> syt); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* code */</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%#x\n&quot;</span>,*p);</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">结果:</span><br><span class="line"><span class="type">char</span> value = <span class="number">1</span></span><br><span class="line"><span class="type">int</span> value = <span class="number">4</span></span><br><span class="line"><span class="type">double</span> value = <span class="number">2</span></span><br><span class="line"><span class="keyword">union</span> syt value = <span class="number">4</span></span><br><span class="line"><span class="keyword">union</span> syt value = <span class="number">4</span></span><br><span class="line">ss.ch = <span class="number">8</span> ss.number = <span class="number">8</span> ss.average = <span class="number">8</span></span><br><span class="line"><span class="number">0x7ffc2dd6a8f4</span> <span class="number">0x7ffc2dd6a8f4</span> <span class="number">0x7ffc2dd6a8f4</span></span><br><span class="line"><span class="number">0x78</span></span><br><span class="line"><span class="number">0x56</span></span><br><span class="line"><span class="number">0x34</span></span><br><span class="line"><span class="number">0x12</span></span><br></pre></td></tr></table></figure><h2 id="七、条件编译"><a href="#七、条件编译" class="headerlink" title="七、条件编译"></a>七、条件编译</h2><p>看代码</p><h1 id="if"><a href="#if" class="headerlink" title="if  "></a>if  <macro></h1><h1 id="else"><a href="#else" class="headerlink" title="else"></a>else</h1><h1 id="endif"><a href="#endif" class="headerlink" title="endif"></a>endif</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _DEBUG_ 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> _DEBUG</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ZZZZZ&quot;</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ZZZZZ&quot;</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="未完成："><a href="#未完成：" class="headerlink" title="未完成："></a>未完成：</h2><p>变量在什么时候分配内存空间</p>]]></content>
    
    
    <summary type="html">关于Linux高级C语言的学习</summary>
    
    
    
    <category term="C++" scheme="https://aixiaocainiao.github.io/categories/C/"/>
    
    
    <category term="C++" scheme="https://aixiaocainiao.github.io/tags/C/"/>
    
    <category term="C" scheme="https://aixiaocainiao.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu系统卸载</title>
    <link href="https://aixiaocainiao.github.io/posts/677099ed.html"/>
    <id>https://aixiaocainiao.github.io/posts/677099ed.html</id>
    <published>2023-08-21T09:10:42.132Z</published>
    <updated>2023-04-18T23:51:53.189Z</updated>
    
    <content type="html"><![CDATA[<p>下载磁盘精灵</p><p>解压缩 找到 exe 右键管理员打开</p><p>找到esp(3)这个 下面是Linux图标 四个全部删除  邮件删除分区</p><p>删除完毕后</p><p>点击保存</p><p>找到F盘 扩容分区 保存 </p>]]></content>
    
    
    <summary type="html">ubuntu系统卸载的流程</summary>
    
    
    
    <category term="SF" scheme="https://aixiaocainiao.github.io/categories/SF/"/>
    
    
    <category term="ubuntu" scheme="https://aixiaocainiao.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>C语言学习-void*详解</title>
    <link href="https://aixiaocainiao.github.io/posts/5e2c870d.html"/>
    <id>https://aixiaocainiao.github.io/posts/5e2c870d.html</id>
    <published>2023-08-21T09:10:42.129Z</published>
    <updated>2023-04-10T14:08:37.759Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、void-指针"><a href="#一、void-指针" class="headerlink" title="一、void*指针"></a>一、void*指针</h1><h2 id="1、C语言void-指针用法"><a href="#1、C语言void-指针用法" class="headerlink" title="1、C语言void*指针用法"></a>1、C语言void*指针用法</h2><h3 id="1-1、void-指针类型用来定义变量"><a href="#1-1、void-指针类型用来定义变量" class="headerlink" title="1.1、void*指针类型用来定义变量"></a>1.1、void*指针类型用来定义变量</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意:void*指针表示无类型指针 4字节</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">void* p;</span><br><span class="line">p = NULL;</span><br></pre></td></tr></table></figure><h3 id="1-2、C语言专用语法"><a href="#1-2、C语言专用语法" class="headerlink" title="1.2、C语言专用语法"></a>1.2、C语言专用语法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">注意:</span><br><span class="line">void*指针（无类型指针）但可以指向任何一种类型的数据，即其他类型的指针可以不通过强制类型转换直接赋值给void*指针</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> *p;</span><br><span class="line"><span class="type">int</span>* a;</span><br><span class="line">p =a;</span><br><span class="line"><span class="type">float</span> *f;</span><br><span class="line">p = g;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意:在 C 语言当中，对指针类型的转换要求不是那么严苛，可以不通过强制转换就可以进行相互间的赋值</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>* a = <span class="literal">NULL</span>;</span><br><span class="line"><span class="type">float</span>* b= <span class="literal">NULL</span>;</span><br><span class="line"><span class="type">char</span>* c = <span class="literal">NULL</span>;</span><br><span class="line">a = b;</span><br><span class="line">b = c;</span><br><span class="line">c = a;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注意:</span><br><span class="line">虽然编译器（gcc 6.3版本）不会显示有错误，编译照常会通过。只是会给出类似下面的警告：</span><br><span class="line">警告 C4133 “=”: 从“float *”到“int *”的类型不兼容</span><br></pre></td></tr></table></figure><h2 id="2、C-void-指针用法"><a href="#2、C-void-指针用法" class="headerlink" title="2、C++void*指针用法"></a>2、C++void*指针用法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">注意：</span><br><span class="line">而在 C++ 当中，这一点要求就明显比较严格了。它不允许两个不同的类型指针相互赋值，除了 void * 指针。</span><br></pre></td></tr></table></figure><h3 id="2-1、c语言和C-不同之处"><a href="#2-1、c语言和C-不同之处" class="headerlink" title="2.1、c语言和C++不同之处"></a>2.1、c语言和C++不同之处</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1、其他的类型指针可以把值直接赋给 void * 指针，但反过来，void * 指针的值想要赋值给其他类型的指针，也需要通过强制转换。</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ex:</span><br><span class="line"><span class="type">void</span> *p = <span class="literal">NULL</span>;</span><br><span class="line"><span class="type">int</span>* a = (<span class="type">int</span>*)p;<span class="comment">//通过</span></span><br><span class="line"><span class="type">float</span> *b = p;<span class="comment">//错误</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2、void * 指针还有一个非常强大之处，在函数定义的时候，作为参数。当调用的时候，无论什么类型的类型指针或数组都可以正常运行。</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">test</span><span class="params">(<span class="type">void</span>* dst)</span>&#123; &#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *c = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    <span class="type">int</span> arr[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line">    test(c)；  <span class="comment">//正常编译</span></span><br><span class="line">    test(arr);<span class="comment">//正常编译</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">注意:</span><br><span class="line">不过 void * 指针也有一个致命的缺点，当对该指针进行算数操作，就会显示以下这个错误。</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="type">void</span> *p;</span><br><span class="line">   p++;<span class="comment">//错误</span></span><br><span class="line">   <span class="comment">//表达式必须是指向完整对象类型的指针</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">根据 ANSI C 标准规定，进行算数操作的指针，必须明确知道该指针所指向的数据类型大小。也就是所指向的数据，都必须是具体的类型，而不是空泛的 void 类型</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">C和C++关于void*指针的用法学习</summary>
    
    
    
    <category term="C++" scheme="https://aixiaocainiao.github.io/categories/C/"/>
    
    
    <category term="C++" scheme="https://aixiaocainiao.github.io/tags/C/"/>
    
    <category term="C" scheme="https://aixiaocainiao.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>blog记录流程</title>
    <link href="https://aixiaocainiao.github.io/posts/e258dd8e.html"/>
    <id>https://aixiaocainiao.github.io/posts/e258dd8e.html</id>
    <published>2023-08-21T09:10:42.113Z</published>
    <updated>2023-04-09T08:21:39.847Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo-blog教程"><a href="#hexo-blog教程" class="headerlink" title="hexo-blog教程"></a>hexo-blog教程</h1><h2 id="一、流程"><a href="#一、流程" class="headerlink" title="一、流程"></a>一、流程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">g 底部 gg顶部</span><br><span class="line">cmd </span><br><span class="line">然后</span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line">cnpm install hexo-cli -g</span><br><span class="line">创建目录:</span><br><span class="line">cd blog</span><br><span class="line">cnpm install -g hexo -cli</span><br><span class="line">hexo init</span><br><span class="line">hexo s</span><br><span class="line"></span><br><span class="line">hexo n 博客名字</span><br><span class="line">cd _posts/</span><br><span class="line">ls</span><br><span class="line">vim 博客 进行编辑</span><br><span class="line">cd ..</span><br><span class="line">cd .. 回退到blog文件夹</span><br><span class="line">hexo clean</span><br><span class="line">hexo g 部署成功</span><br><span class="line">hexo s</span><br><span class="line">打开给的端口网址</span><br><span class="line">部署到GitHub上</span><br><span class="line">创建同名仓库 aixiaocainiao.github.io(必须是这个名字)</span><br><span class="line">然后回来 </span><br><span class="line">cd blog (保证这个文件夹下）</span><br><span class="line">cnpm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">ll</span><br><span class="line">vim _config.yml</span><br><span class="line">esc g 底部 i 编写</span><br><span class="line">type: &#x27;git&#x27;</span><br><span class="line">  repo: https://github.com/aixiaocainiao/aixiaocainiao.github.io.git</span><br><span class="line">  branch: main</span><br><span class="line">hexo g</span><br><span class="line">hexo s 一下</span><br><span class="line">hexo d 部署到github</span><br><span class="line">此时就可以访问同名网址了</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> 页脚不行的</span><br></pre></td></tr></table></figure><h2 id="二、密匙"><a href="#二、密匙" class="headerlink" title="二、密匙"></a>二、密匙</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">见password那篇 第四篇文章 加密设置</span><br></pre></td></tr></table></figure><h2 id="三、可用的url图片可以借助于云图床"><a href="#三、可用的url图片可以借助于云图床" class="headerlink" title="三、可用的url图片可以借助于云图床"></a>三、可用的url图片可以借助于云图床</h2><h3 id="3-1图片引入"><a href="#3-1图片引入" class="headerlink" title="3.1图片引入"></a>3.1图片引入</h3><ul><li><p>安装成功后可在【C:/Hexo-Blog/blog-demo/node_modules】文件夹下找到hexo-theme-butterfly文件夹<br>default_cover:</p><ul><li><p><a href="https://picsum.photos/id/1018/470/315">https://picsum.photos/id/1018/470/315</a></p><p><img src="https://picsum.photos/id/1018/470/315" alt="图片url"></p></li><li><p>ttps://picsum.photos/id/1044/470/315</p></li><li><p><img src="https://picsum.photos/id/1044/470/315" alt="图片url"></p></li><li><p><a href="https://picsum.photos/id/1056/470/315">https://picsum.photos/id/1056/470/315</a></p></li></ul><p><img src="https://picsum.photos/id/1056/470/315" alt="图片url"></p><h3 id="3-2解决方法如下："><a href="#3-2解决方法如下：" class="headerlink" title="3.2解决方法如下："></a>3.2解决方法如下：</h3></li></ul><p>1、右击VSCode图标，选择以管理员身份运行；</p><p>2、在vscode终端中执行get-ExecutionPolicy，显示Restricted，状态是禁止的；</p><p>3、这时执行set-ExecutionPolicy RemoteSigned；</p><p>4、再执行get-ExecutionPolicy，显示RemoteSigned，状态解禁，可以运行。</p><ul><li><p>descr: Ubuntu指南</p><pre><code>cover: https://source.fomal.cc/img/default_cover_43.webp</code></pre><p><img src="https://source.fomal.cc/img/default_cover_43.webp" alt="图片url"></p><ul><li><p>descr: 玩转Win10<br>cover: <a href="https://source.fomal.cc/img/default_cover_44.webp">https://source.fomal.cc/img/default_cover_44.webp</a></p></li><li><p><img src="https://source.fomal.cc/img/default_cover_44.webp" alt="图片url"></p></li><li><p>descr: 长篇小说连载</p></li><li><p>cover: <a href="https://source.fomal.cc/img/default_cover_45.webp">https://source.fomal.cc/img/default_cover_45.webp</a></p><p><img src="https://source.fomal.cc/img/default_cover_45.webp" alt="图片url"></p></li><li><p>descr: 个人日记</p></li><li><p>cover: <a href="https://source.fomal.cc/img/default_cover_46.webp">https://source.fomal.cc/img/default_cover_46.webp</a></p><p><img src="https://source.fomal.cc/img/default_cover_46.webp" alt="url"></p></li></ul></li></ul><pre><code>  自定义字体在魔改5 自己还没有执行</code></pre><p>$web-bg = hexo-config(‘background’) &amp;&amp; unquote(hexo-config(‘background’))</p><p> fab fa-qq: <a href="http://wpa.qq.com/msgrd?v=3&amp;uin=1310446718&amp;site=qq&amp;menu=yes">http://wpa.qq.com/msgrd?v=3&amp;uin=1310446718&amp;site=qq&amp;menu=yes</a> || QQ<br> fas fa-envelope-open-text: mailto:1310446718@qq.com || Email</p><p><a href="http://wpa.qq.com/msgrd?v=3&amp;uin=3051247944&amp;site=qq&amp;menu=yes">http://wpa.qq.com/msgrd?v=3&amp;uin=3051247944&amp;site=qq&amp;menu=yes</a></p>]]></content>
    
    
    <summary type="html">关于hexo搭建blog的记录流程</summary>
    
    
    
    <category term="SF" scheme="https://aixiaocainiao.github.io/categories/SF/"/>
    
    
    <category term="blog" scheme="https://aixiaocainiao.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>总结</title>
    <link href="https://aixiaocainiao.github.io/posts/c8d0539d.html"/>
    <id>https://aixiaocainiao.github.io/posts/c8d0539d.html</id>
    <published>2023-08-21T09:10:42.103Z</published>
    <updated>2023-06-08T05:23:31.455Z</updated>
    
    <content type="html"><![CDATA[<p>char <em>p = (char</em>)&a;<br>将变量a的地址强制转换为char<em>的地址 赋值给char</em>型指针</p>]]></content>
    
    
    <summary type="html">总结</summary>
    
    
    
    <category term="C++" scheme="https://aixiaocainiao.github.io/categories/C/"/>
    
    
    <category term="c" scheme="https://aixiaocainiao.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>导航原理</title>
    <link href="https://aixiaocainiao.github.io/posts/cb0cb908.html"/>
    <id>https://aixiaocainiao.github.io/posts/cb0cb908.html</id>
    <published>2023-08-21T09:10:42.099Z</published>
    <updated>2023-06-08T05:23:31.452Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="e8de34628c018b29a13099ee578c8e0afc85748381d76db12fc9b0cced3d1dc6">bf77d8818ecf38b4f77c36bf1e782c181c1165c890833abf2f2b018033fded3977d894175abb120937486a6b9f855f9a3b0ae6d9c895d4fe0532395a92e164366c045b10770b918cd4ead6ddb3189b54df999a3076bfa132377955214d7b57b3216527a6959a0d073122b738e11abb86e935960b3ab50248451a6ffe7f9e274755f884e650445ee15e38cb2317d19bf0b22b4d59139c21f461558045b9a4eec0d3694e1746d0efbb3f60a33227615f6134da9d525d5ae6167a394d74c37c1d649d7f7378aaa29c34cc62b4c79259f6aef75eaa7a859a0365b21263ee5775cc33103f2a0d8a8738232b47008ad246d8c4342fd15f7c1329b6f5cf4486557a9dea73fde9b8dc8fe9e4040df3666fbf3b2b3022fa0c4d2002b017ea98abf2202140bc45fe54b0f9c607d0b8578a463ddc3c782236672f572b5a08f4dec4d62650b002921f4aa8ec84837d32ac0980d9e0c5f7aa130860569284daaa0150ee11c4c3883d58f15987496ef482335a84612b8ffa7e077b84c1701df249c4d42029d3d6fdc363d3fab4b1eceff7426c7291a71db3df631e6f00494a74f935af9fc2f6c58280505e4f981fec2d919402abf36e897a2b88e1dd19c72ea392e6eab5a6a3ab9624f0e2a9a089b27cc9e17e95688431c14e1bd2bfa756d63fe81bb54abffcfd29ce6953989efc4f5b5c2fb0384ddbbaee9610f5f7bba64b2c696cc2a1bad8b3365d3a0cb531c48ac3b2e141365e59d92b8c73fb11bf1c02519f84fc124acd5c3630f320ae443a277c05283a3df977a9487ce372cc91aa045005193c499d62c56bc6eb6b1fc24e6d68f8eb7842c84302a4a8e46097fe538131af3051c913ce3ef72a6f0bfde01d2087a1f80acdb96402ddd7a977cf89a1d97c927482391f3c8a60b761c6ced0c88b60dd7720fb281a0b9a3c489274ec9993e50febd73d033dc6b28219253e72faf28d59218d9782282ae1cfef5a899f9f4ac1c4e0e29a6ce59e4b02567df251bb270e327f02a62854365c0ebdef009fd5eafc49a5542566ffbd0e1ca729f50b3e8733171e820cdfc328226ad2e7d0797269d6bd8990fb992ff2e854c2623221f674b93709e1c7730c169a619d93133c6942bfb133acfe24bdd196a1f50b4601435a13abe3eb67b7ba0278500e32ebcb2ecb3805b3f7ea0280a5eed2095b48e6a21acbccd7a1a9deaefc7db5a099d803bfd7966ad8e280b4896b28a471f068581e4a67c4f42364bb3a365d4b6b949ac25391329ec6f6c9c71184a9a53f9da27253cb37337905eaa9f44db88ddb44e0751b8f8d617e857b96e1de9f2c00746527447d420fe243d1a5d895ca00d048ab62bfb42e312eecc81645262fba6a557dc273904096e426605d1824920091a5d36f81559ae54de8f33e69353a9a355d22f57b9c5517090cc42929069b0b7099c0573c2e3143039a08b884f6dc3a6d7355a220f84056424b541d3f8e9245b60b670b6f145573ec1c0ea99bfef3bdb445a3fb4d525692af97ebc8a6d695cfca45488dbcad205266c79213aff0ecc6333b4d7c028eea68c1ba7d8b2e91aabaa6810f5ee12f598d4a5bd1a74ce69a75ce533bb671e0c5ad311fbedce817a41a5e0521362379577bb9c9d712591b481b12d3e861f986b88b1fb45d6e9f89efee2c068d1c8f053aa0a17bae15ce5fdf550344578070e936d6a1376603c165a73912c4008c1ff4d1f10c22764a549b3a588914cec9f222130295a5ad3d155ba2fc464a33ee8ec924121beb073e31b9610731b3f1abd89367e1a6cf6a7e57202ab2c90f1f42e77f1e8e780d765b45697c48b176e518e0328529cfaa4304d9de393ebcadd0b5a985f80ad94f8420fa3baf4566f6ed251766d0a4d66159b6a1c9c325b0051e19f28b00207a12baa6df3eda131c7b9dfccce28d251f47de8dd1e9787e38c8af6c14a2384c82a457bedf039ac2a82a7bc742dadd597d1368ad23fd6b4192ce074b1899db53ee43b5e9d1d0</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="Slam" scheme="https://aixiaocainiao.github.io/categories/Slam/"/>
    
    
    <category term="token" scheme="https://aixiaocainiao.github.io/tags/token/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu通用 搜狗安装</title>
    <link href="https://aixiaocainiao.github.io/posts/9e9ea3d6.html"/>
    <id>https://aixiaocainiao.github.io/posts/9e9ea3d6.html</id>
    <published>2023-08-21T09:10:42.094Z</published>
    <updated>2023-06-08T05:23:31.443Z</updated>
    
    <content type="html"><![CDATA[<p>安装fcitx<br>sudo apt-get install fcitx-bin </p><p>第一步，安装sogoupinyin_4.0.1.2800_x86_64.deb包；<br>通过命令行重新安装搜狗输入法，安装包官网下载链接<br>sudo dpkg –i sogoupinyin_4.0.1.2800_x86_64.deb<br>安装中文支持包</p><p>打开setting－&gt; Region &amp; Lannguage -&gt; InputSource下的Manage installation Language</p><p>点击Installation/ Remove Language<br>勾选中文（简体），并点击应用</p><p>keyboard input method system选择：fcitx<br>————————————————<br>点击应用到全局，然后重启</p><p>1、通过命令行更新系统（如果因网络连接问题无法更新，可以选择换源）</p><p>sudo apt-get update<br>sudo apt-get upgrade</p><p>2、通过命令行安装aptitude</p><p>sudo apt-get install aptitude</p><p>3、通过命令行利用aptitude 安装fcitx、qt</p><p>sudo aptitude install fcitx-bin fcitx-table fcitx-config-gtk fcitx-config-gtk2 fcitx-frontend-all<br>sudo aptitude install qt5-default qtcreator qml-module-qtquick-controls2</p><p>4、如果右上角没有出现fcitx，在终端中输入im-config进行配置</p><p>5、通过命令行重新安装搜狗输入法</p><p>sudo dpkg –i sogoupinyin_4.0.1.2800_x86_64.deb</p><p>第二步，安装依赖。因为我之前安装好deb包后直接以为安装完成了，忽略了第二步要安装依赖。（这步骤很关键）<br>安装官网给出的两条命令，在终端执行</p><p>sudo apt install libqt5qml5 libqt5quick5 libqt5quickwidgets5 qml-module-qtquick2</p><p>sudo apt install libgsettings-qt1<br>最后卸载ibus<br>sudo apt-get purge ibus<br>6、重启完成即可使用（如果没有，需在右上角fcitx配置中添加搜狗输入法）<br>————————————————</p>]]></content>
    
    
    <summary type="html">ubuntu通用 搜狗安装</summary>
    
    
    
    <category term="SF" scheme="https://aixiaocainiao.github.io/categories/SF/"/>
    
    
    <category term="sougou" scheme="https://aixiaocainiao.github.io/tags/sougou/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu18 pycharm2021.3激活流程</title>
    <link href="https://aixiaocainiao.github.io/posts/88c40122.html"/>
    <id>https://aixiaocainiao.github.io/posts/88c40122.html</id>
    <published>2023-08-21T09:10:42.089Z</published>
    <updated>2023-06-08T05:23:31.447Z</updated>
    
    <content type="html"><![CDATA[<p>如何在Ubuntu安装pycharm的专业版，保姆级教学</p><p>一、下载Pycharm2021.3版本</p><pre><code>    进入pycharm官网，点击Download下载按钮</code></pre><p><a href="https://img-blog.csdnimg.cn/3cc019fbca954a5590106a31ee7c07ca.png">https://img-blog.csdnimg.cn/3cc019fbca954a5590106a31ee7c07ca.png</a><br>     这里我们选择Other version，其他版本<br><a href="https://img-blog.csdnimg.cn/cec1e7cca3ae4b9fb3661ee31fb4a7bf.png">https://img-blog.csdnimg.cn/cec1e7cca3ae4b9fb3661ee31fb4a7bf.png</a><br>        下拉选择2021.3版本（注意别选错了，其他版本不知道有没有用）<br><a href="https://img-blog.csdnimg.cn/eebfbe2261ad48a2b4286666539ec24f.png">https://img-blog.csdnimg.cn/eebfbe2261ad48a2b4286666539ec24f.png</a><br> 点击下载（注意：下载的是2021.3 - Linux (tar.gz)）<br><a href="https://img-blog.csdnimg.cn/5379a28e41f24c6e89d5fb1d9eeb423e.png">https://img-blog.csdnimg.cn/5379a28e41f24c6e89d5fb1d9eeb423e.png</a><br>    下载完成后，我们可以在下载文件夹下看到安装包<br><a href="https://img-blog.csdnimg.cn/2603a06c9d3e4a2196c20d8b78867a0a.png">https://img-blog.csdnimg.cn/2603a06c9d3e4a2196c20d8b78867a0a.png</a><br>二、安装pycharm2021.3 </p><pre><code>    由于我们下载的安装包是压缩的形式，我们先把它提取出来 ,这里我预先已经提取出来了</code></pre><p><a href="https://img-blog.csdnimg.cn/58d774aef9c44199bf69d31b163dde0a.png">https://img-blog.csdnimg.cn/58d774aef9c44199bf69d31b163dde0a.png</a><br> 现在我们来看一下提取出来的文件结构：</p><pre><code>              双击进去的第一层是“pycharm-2021.3”</code></pre><p><a href="https://img-blog.csdnimg.cn/b03fbf9391d04bada412067da83a5a54.png">https://img-blog.csdnimg.cn/b03fbf9391d04bada412067da83a5a54.png</a><br>       这里为了后面好操作我将其移动到“主目录”  下，就是“用户文件夹”下<br><a href="https://img-blog.csdnimg.cn/8c8c34f331e74790a2c1f3a6649758c6.png">https://img-blog.csdnimg.cn/8c8c34f331e74790a2c1f3a6649758c6.png</a><br><a href="https://img-blog.csdnimg.cn/3329149da1e742aaa9c0197fb2aeef8b.png">https://img-blog.csdnimg.cn/3329149da1e742aaa9c0197fb2aeef8b.png</a><br>  进入“pycharm-2021.3”可看到这些结构，找到bin这个文件夹：<br><a href="https://img-blog.csdnimg.cn/747779f9793142eab088b426c3750782.png">https://img-blog.csdnimg.cn/747779f9793142eab088b426c3750782.png</a><br>这里我们选择bin这个文件继续进去 ，找到pycharm.sh和pycharm64.vmoptions这2个文件</p><pre><code>    其中pycharm.sh是运行文件，pycharm64.vmoptions是配置文件</code></pre><p>   我们先来修改一下配置文件 pycharm64.vmoptions：</p><pre><code>    将下面这段代码添加上去  注：-javaagent: 后面加的是文件fineagent.jar的路径    文件在文章最后有提供。</code></pre><p>-javaagent:/home/用户名/fineagent.jar<br><a href="https://img-blog.csdnimg.cn/1d19259dce59418eac8f57eb9c016b44.png">https://img-blog.csdnimg.cn/1d19259dce59418eac8f57eb9c016b44.png</a><br> 添加好上面这段代码之后，我们将文件 fineagent.jar复制到“主目录”  下，就是“用户文件夹”下<br><a href="https://img-blog.csdnimg.cn/7c729511478a4cb4a10b89c58fdaa45e.png">https://img-blog.csdnimg.cn/7c729511478a4cb4a10b89c58fdaa45e.png</a><br>三、运行pycharm </p><pre><code>    在终端进入pycharm的bin文件夹 ：</code></pre><p><a href="https://img-blog.csdnimg.cn/4e910984b78a4fb6bf2be541245c610b.png">https://img-blog.csdnimg.cn/4e910984b78a4fb6bf2be541245c610b.png</a><br><a href="https://img-blog.csdnimg.cn/ef0ec50c440f4a2e93291979084f0e6b.png">https://img-blog.csdnimg.cn/ef0ec50c440f4a2e93291979084f0e6b.png</a><br> 通过下列命令运行pycharm<br>./pycharm.sh<br>四、运行成功，输入破解码激活 </p><pre><code>    复制下列代码：</code></pre><p>5AYV1D1RE5-eyJsaWNlbnNlSWQiOiI1QVlWMUQxUkU1IiwibGljZW5zZWVOYW1lIjoiaHR0cHM6Ly93d3cuaml3ZWljaGVuZ3podS5jb20iLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJJSSIsImZhbGxiYWNrRGF0ZSI6IjIwOTktMTItMzEiLCJwYWlkVXBUbyI6IjIwOTktMTItMzEifSx7ImNvZGUiOiJBQyIsImZhbGxiYWNrRGF0ZSI6IjIwOTktMTItMzEiLCJwYWlkVXBUbyI6IjIwOTktMTItMzEifSx7ImNvZGUiOiJEUE4iLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiUFMiLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiR08iLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiRE0iLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiQ0wiLCJmYWxsYmFja0RhdGUiOiIyMDk5LTEyLTMxIiwicGFpZFVwVG8iOiIyMDk5LTEyLTMxIn0seyJjb2RlIjoiUlMwIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJDIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJEIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlBDIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJNIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IldTIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IkRCIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IkRDIiwiZmFsbGJhY2tEYXRlIjoiMjA5OS0xMi0zMSIsInBhaWRVcFRvIjoiMjA5OS0xMi0zMSJ9LHsiY29kZSI6IlJTVSIsImZhbGxiYWNrRGF0ZSI6IjIwOTktMTItMzEiLCJwYWlkVXBUbyI6IjIwOTktMTItMzEifV0sImhhc2giOiIxMjc5Njg3Ny8wIiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-HNPogO0kWkHCVMnsjmBXUqQt87UPHqdkYqZGveSJtu8hb2V2Yq7gHsHenp4UuEd3jwEwC+YrUIf7U5yDA/56F5Sdn0RLUHZX5DHeQbJPbmYCBsDRT7m8rnmMFOSZn3vwNatvv1cooZbcGOk3Wwxx6bF7XcgaIrmXRcmZMZgv2PZehr0WS1HxNKe3X4nbGP3MwiSbg4ypmxNDrljmgv+Si9QDDwNLDffqeO0Lce0FqEJuMWmvBS42S0aeIYF8IS5bp4+LFKLJ8T7tF40OxKYDurBb9+9c43GZBscM/eLB8Jos66jNGFwgebFUlvhzJKVHZtuc/N8zGeEnTq6K0T/B8w==-MIIDTjCCAjagAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMCAXDTE4MTEwMTEyMjk0NloYDzIwOTkwODA5MDIyNjA3WjAfMR0wGwYDVQQDDBRwcm9kMnktZnJvbS0yMDIwMTAxOTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMK3eyr0+Oys/TwcQO+qYaXWGBmXcEP4fR0bHHzZd/4WNGltXhecM80OWthA38BQRYAJBCKz/dSkO2Kj1H2y+7KB5cIaOiJEyTESfTSgzQdot6laRBU8oxy9mmagI46M8zEEmplPybY4YJj4HOwZiBsMQEMxoTgMDLpuHX6uASoVhSj6koB55lOj4wEgsQBeAMWTAXmTl88ixE179J8aBUkBGpL8w/tZzl9BJXZNF15gPfkS58rw8cdPzXLS0Yym37A2/KKFhfHzJc5KhbaxqYzmkAfTMqPsIqCQ1lQUAqfiPn2gN2I1Z3/cQuEW27M55fXVr2DduQe5DWzYJs85L50CAwEAAaOBmTCBljAJBgNVHRMEAjAAMB0GA1UdDgQWBBQk2hEilvWFQcCTR+gxI0z0wIQC/zBIBgNVHSMEQTA/gBSjnrZIZ0ISNkG9beC5tKBSi5fxs6EcpBowGDEWMBQGA1UEAwwNSmV0UHJvZmlsZSBDQYIJANJssYOyg3nhMBMGA1UdJQQMMAoGCCsGAQUFBwMBMAsGA1UdDwQEAwIFoDANBgkqhkiG9w0BAQsFAAOCAQEAsCQBjO5wttco/Z5cj/o4GBrku8UtBBBVFq4xsBanshTHm4deVxcTvta4aScV0TPKcaLqGqWx8A9v8XXO8dBbCuyXvWZteZ/C2Covg1xXiM99lz7VxqpjVmLdKanZn5u0gQSiYJdcfF+TdbmEIeSOnN/kLXNq2hXdJQK2zk2J25UZqu5EibRtTbdOzw6ZcfwJ8uOntXfsmAhnNICP3Wf/4wR/mwB0Ka4S+JA3IbF5MUmUZ/fjUaFarnin70us+Vxf/sZUi7u67wilvwVV0NAqDpthHUV0NRc4q+yOr2Dt/uCHdy4XRXLJfAv/z9/xBwNZZALNz3EtQL6IeIWWJByl3g==</p><p><a href="https://img-blog.csdnimg.cn/7da38dc5cd5b413e815bc9213b2b94e8.png">https://img-blog.csdnimg.cn/7da38dc5cd5b413e815bc9213b2b94e8.png</a><br><a href="https://img-blog.csdnimg.cn/373e6474f69e438f92553476f1c2ac02.png">https://img-blog.csdnimg.cn/373e6474f69e438f92553476f1c2ac02.png</a><br>     激活成功实例：<br><a href="https://img-blog.csdnimg.cn/d18f50b6be804b608a918d951e7ce483.png">https://img-blog.csdnimg.cn/d18f50b6be804b608a918d951e7ce483.png</a><br>到这里我们就已经成功在Ubuntu系统上激活pycharm专业版了， 欢迎大家在评论区讨论！！！</p><p>文章所需要的pycharm版本和资料如下 ，我已经放在了网盘，有需要也可以加我微信发你！！！！</p><p> 链接：<a href="https://pan.baidu.com/s/1uZteOE7OcXfwP4mHC2hlrg">https://pan.baidu.com/s/1uZteOE7OcXfwP4mHC2hlrg</a></p><p>提取码：x7x7 </p><p>微信 如下：<br>————————————————<br>版权声明：本文为CSDN博主「@xuxin_2000」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_52466870/article/details/128134511">https://blog.csdn.net/qq_52466870/article/details/128134511</a><br><a href="https://img-blog.csdnimg.cn/4115133912824e0a8c9bdb62bafe9fc3.png">https://img-blog.csdnimg.cn/4115133912824e0a8c9bdb62bafe9fc3.png</a><br>注：如果文件pycharm64.vmoptions没有配置错误和文件fineagent.jar添加正确，pycharm是正常运行的 </p>]]></content>
    
    
    <summary type="html">ubuntu18 pycharm2021.3激活流程</summary>
    
    
    
    <category term="SF" scheme="https://aixiaocainiao.github.io/categories/SF/"/>
    
    
    <category term="Pycharm" scheme="https://aixiaocainiao.github.io/tags/Pycharm/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://aixiaocainiao.github.io/posts/0.html"/>
    <id>https://aixiaocainiao.github.io/posts/0.html</id>
    <published>2023-08-21T09:10:42.077Z</published>
    <updated>2023-06-08T05:23:31.459Z</updated>
    
    <content type="html"><![CDATA[<!DOCTYPE html><!-- saved from url=(0134)http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/674-kinectxin-xi-fang-zhen-yi-ji-xian-shi.html --><html lang="zh-hans"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">                        <title>6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程</title>        <meta http-equiv="X-UA-Compatible" content="IE=edge">        <meta name="description" content="">        <meta name="generator" content="GitBook 3.2.3">        <meta name="author" content="Autolabor-赵虚左">                        <link rel="stylesheet" href="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/style.css">                                                <link rel="stylesheet" href="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/expandable-chapters.css">                                                            <link rel="stylesheet" href="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/search.css">                                                            <link rel="stylesheet" href="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/splitter.css">                                                            <link rel="stylesheet" href="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/website.css">                                                            <link rel="stylesheet" href="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/website(1).css">                                                                                                                                        <meta name="HandheldFriendly" content="true">    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">    <meta name="apple-mobile-web-app-capable" content="yes">    <meta name="apple-mobile-web-app-status-bar-style" content="black">    <link rel="apple-touch-icon-precomposed" sizes="152x152" href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/gitbook/images/apple-touch-icon-precomposed-152.png">    <link rel="shortcut icon" href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/gitbook/images/favicon.ico" type="image/x-icon">            <style>#csdn-plugin-note-btn{      position: fixed;      z-index: 100;      width: 25px;      box-sizing: content-box;      right: 0px;      top: 20%;      color: rgb(255, 255, 255);      background: #fff;      cursor: pointer;      border-bottom-left-radius: 6px;      padding: 10px 5px;      border-top-left-radius: 6px;      font-size: 16px;      letter-spacing: 4px;      box-shadow: 0px 2px 12px 0px rgba(123,123,123,0.26);    }    #csdn-plugin-note-btn img.logo{      display: block; width:25px; height:25px; margin-bottom:2px;    }    #csdn-plugin-note-btn img.close{      display: none; padding: 5px 5px 10px 5px; width: 15px; height: 15px; box-sizing: content-box; opacity:0.8;    }    #csdn-plugin-note-btn img.close:hover{opacity:1;}    #csdn-plugin-note-btn:hover img.close{display: block;}     #csdn-plugin-note-btn:hover{ padding-bottom: 0;}     #csdn-plugin-note-btn span{      color: #484848; font-size: 15px; width: 25px; display: block; text-align: center; word-break: break-all; line-height: 18px; font-weight: 600;padding-left: 2px;    }</style><style type="text/css">#_copy{align-items:center;background:#4494d5;border-radius:3px;color:#fff;cursor:pointer;display:flex;font-size:13px;height:30px;justify-content:center;position:absolute;width:60px;z-index:1000}#select-tooltip,#sfModal,.modal-backdrop,div[id^=reader-helper]{display:none!important}.modal-open{overflow:auto!important}._sf_adjust_body{padding-right:0!important}.enable_copy_btns_div{position:fixed;width:154px;left:10px;top:45%;background:#e7f1ff;border:2px solid #4595d5;font-weight:600;border-radius:2px;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,PingFang SC,Hiragino Sans GB,Microsoft YaHei,Helvetica Neue,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;z-index:5000}.enable_copy_btns_logo{width:100%;background:#4595d5;text-align:center;font-size:12px;color:#e7f1ff;line-height:30px;height:30px}.enable_copy_btns_btn{display:block;width:128px;height:28px;background:#7f5711;border-radius:4px;color:#fff;font-size:12px;border:0;outline:0;margin:8px auto;font-weight:700;cursor:pointer;opacity:.9}.enable_copy_btns_btn:hover{opacity:.8}.enable_copy_btns_btn:active{opacity:1}</style><link rel="prev" href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/673-she-xiang-tou-xin-xi-fang-zhen-yi-ji-xian-shi.html"><link rel="next" href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/68-ben-zhang-xiao-jie.html"></head>    <body inmaintabuse="1">        <div class="book without-animation with-summary font-size-2 font-family-1">    <div class="book-summary" style="width: 300px; left: 0px; position: absolute;">                    <div id="book-search-input" role="search">    <input type="text" placeholder="输入并搜索"></div>                            <nav role="navigation">                <ul class="summary">                                            <li class="chapter " data-level="1.1">                            <a target="_blank" href="http://www.autolabor.com.cn/">                                                    Autolabor主站                            </a>                                </li>                        <li class="divider"></li>                            <li class="chapter expanded" data-level="2.1" data-path="../../">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/">                                                    Introduction                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.1.1">                            <a target="_blank" href="https://www.bilibili.com/video/BV1Ci4y1L7ZZ/">                                                    课程视频                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.2" data-path="../../chapter1.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1.html">                                                    第 1 章 ROS概述与环境搭建                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.2.1" data-path="../../chapter1/11-rosjian-jie-yu-an-zhuang.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/11-rosjian-jie-yu-an-zhuang.html">                                                    1.1 ROS简介                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.2.1.1" data-path="../../chapter1/11-rosjian-jie-yu-an-zhuang/111rosgai-nian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/11-rosjian-jie-yu-an-zhuang/111rosgai-nian.html">                                                    1.1.1ROS概念                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.1.2" data-path="../../chapter1/11-rosjian-jie-yu-an-zhuang/112rosshe-ji-mu-biao.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/11-rosjian-jie-yu-an-zhuang/112rosshe-ji-mu-biao.html">                                                    1.1.2ROS设计目标                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.1.3" data-path="../../chapter1/11-rosjian-jie-yu-an-zhuang/113rosfa-zhan-li-cheng.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/11-rosjian-jie-yu-an-zhuang/113rosfa-zhan-li-cheng.html">                                                    1.1.3ROS发展历程                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.2.2" data-path="../../chapter1/12-roskai-fa-gong-ju-an-zhuang.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/12-roskai-fa-gong-ju-an-zhuang.html">                                                    1.2 ROS安装                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.2.2.1" data-path="../../chapter1/12-roskai-fa-gong-ju-an-zhuang/121-an-zhuang-xu-ni-ji-ruan-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/12-roskai-fa-gong-ju-an-zhuang/121-an-zhuang-xu-ni-ji-ruan-jian.html">                                                    1.2.1 安装虚拟机软件                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.2.2" data-path="../../chapter1/12-roskai-fa-gong-ju-an-zhuang/122-xu-ni-yi-tai-zhu-ji.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/12-roskai-fa-gong-ju-an-zhuang/122-xu-ni-yi-tai-zhu-ji.html">                                                    1.2.2 虚拟一台主机                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.2.3" data-path="../../chapter1/12-roskai-fa-gong-ju-an-zhuang/123-an-zhuang-ubuntu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/12-roskai-fa-gong-ju-an-zhuang/123-an-zhuang-ubuntu.html">                                                    1.2.3 安装 ubuntu                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.2.4" data-path="../../chapter1/12-roskai-fa-gong-ju-an-zhuang/124-an-zhuang-ros.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/12-roskai-fa-gong-ju-an-zhuang/124-an-zhuang-ros.html">                                                    1.2.4 安装 ROS                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.2.5" data-path="../../chapter1/12-roskai-fa-gong-ju-an-zhuang/125-ce-shi-ros.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/12-roskai-fa-gong-ju-an-zhuang/125-ce-shi-ros.html">                                                    1.2.5 测试 ROS                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.2.6" data-path="../../chapter1/12-roskai-fa-gong-ju-an-zhuang/127-zi-65993a-qi-ta-ros-ban-ben-an-zhuang.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/12-roskai-fa-gong-ju-an-zhuang/127-zi-65993a-qi-ta-ros-ban-ben-an-zhuang.html">                                                    1.2.6 资料:其他ROS版本安装                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.2.3" data-path="../../chapter1/13-rosji-cheng-kai-fa-huan-jing-da-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/13-rosji-cheng-kai-fa-huan-jing-da-jian.html">                                                    1.3 ROS快速体验                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.2.3.1" data-path="../../chapter1/13-rosji-cheng-kai-fa-huan-jing-da-jian/131-helloworldshi-xian-jian-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/13-rosji-cheng-kai-fa-huan-jing-da-jian/131-helloworldshi-xian-jian-jie.html">                                                    1.3.1 HelloWorld实现简介                            </a>                                </li>            <li class="chapter " data-level="2.2.3.2" data-path="../../chapter1/13-rosji-cheng-kai-fa-huan-jing-da-jian/131-helloworldc724829.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/13-rosji-cheng-kai-fa-huan-jing-da-jian/131-helloworldc724829.html">                                                    1.3.2 HelloWorld实现A(C++)                            </a>                                </li>            <li class="chapter " data-level="2.2.3.3" data-path="../../chapter1/13-rosji-cheng-kai-fa-huan-jing-da-jian/132-helloworldpython724829.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/13-rosji-cheng-kai-fa-huan-jing-da-jian/132-helloworldpython724829.html">                                                    1.3.3 HelloWorld实现B(Python)                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.2.4" data-path="../../chapter1/14-ros-ji-cheng-kai-fa-huan-jing-da-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/14-ros-ji-cheng-kai-fa-huan-jing-da-jian.html">                                                    1.4 ROS集成开发环境搭建                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.2.4.1" data-path="../../chapter1/14-ros-ji-cheng-kai-fa-huan-jing-da-jian/141-an-zhuang-zhong-duan.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/14-ros-ji-cheng-kai-fa-huan-jing-da-jian/141-an-zhuang-zhong-duan.html">                                                    1.4.1 安装终端                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.4.2" data-path="../../chapter1/14-ros-ji-cheng-kai-fa-huan-jing-da-jian/142-an-zhuang-vscode.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/14-ros-ji-cheng-kai-fa-huan-jing-da-jian/142-an-zhuang-vscode.html">                                                    1.4.2 安装VScode                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.4.3" data-path="../../chapter1/14-ros-ji-cheng-kai-fa-huan-jing-da-jian/143-launchwen-jian-yan-shi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/14-ros-ji-cheng-kai-fa-huan-jing-da-jian/143-launchwen-jian-yan-shi.html">                                                    1.4.3 launch文件演示                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.2.5" data-path="../../chapter1/15-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/15-ben-zhang-xiao-jie.html">                                                    1.5 ROS架构                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.2.5.1" data-path="../../chapter1/15-ben-zhang-xiao-jie/151-roswen-jian-xi-tong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/15-ben-zhang-xiao-jie/151-roswen-jian-xi-tong.html">                                                    1.5.1 ROS文件系统                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.5.2" data-path="../../chapter1/15-ben-zhang-xiao-jie/152-ji-suan-tu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/15-ben-zhang-xiao-jie/152-ji-suan-tu.html">                                                    1.5.2 ROS文件系统相关命令                            </a>                                </li>            <li class="chapter expanded" data-level="2.2.5.3" data-path="../../chapter1/15-ben-zhang-xiao-jie/153-rosji-suan-tu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/15-ben-zhang-xiao-jie/153-rosji-suan-tu.html">                                                    1.5.3 ROS计算图                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.2.6" data-path="../../chapter1/16-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/16-ben-zhang-xiao-jie.html">                                                    1.6 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.3" data-path="../../di-2-zhang-ros-jia-gou-she-ji.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji.html">                                                    第 2 章 ROS通信机制                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.3.1" data-path="../../di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin.html">                                                    2.1 话题通信                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.3.1.1" data-path="../../di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/211-li-lun-mo-xing.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/211-li-lun-mo-xing.html">                                                    2.1.1 话题通信理论模型                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.1.2" data-path="../../di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/212-hua-ti-tong-xin-zhi-c-shi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/212-hua-ti-tong-xin-zhi-c-shi-xian.html">                                                    2.1.2 话题通信基本操作A(C++)                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.1.3" data-path="../../di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/213-hua-ti-tong-xin-zhi-python-shi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/213-hua-ti-tong-xin-zhi-python-shi-xian.html">                                                    2.1.3 话题通信基本操作B(Python)                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.1.4" data-path="../../di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/214-hua-ti-tong-xin-zhi-zi-ding-yi-xiao-xi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/214-hua-ti-tong-xin-zhi-zi-ding-yi-xiao-xi.html">                                                    2.1.4 话题通信自定义msg                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.1.5" data-path="../../di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/215-hua-ti-tong-xin-zhi-c-diao-yong-zi-ding-yi-xiao-xi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/215-hua-ti-tong-xin-zhi-c-diao-yong-zi-ding-yi-xiao-xi.html">                                                    2.1.5 话题通信自定义msg调用A(C++)                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.1.6" data-path="../../di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/216-hua-ti-tong-xin-zhi-python-diao-yong-zi-ding-yi-xiao-xi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/22hua-ti-tong-xin/216-hua-ti-tong-xin-zhi-python-diao-yong-zi-ding-yi-xiao-xi.html">                                                    2.1.6 话题通信自定义msg调用B(Python)                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.3.2" data-path="../../di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin.html">                                                    2.2 服务通信                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.3.2.1" data-path="../../di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin/221-fu-wu-tong-xin-li-lun-mo-xing.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin/221-fu-wu-tong-xin-li-lun-mo-xing.html">                                                    2.2.1 服务通信理论模型                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.2.2" data-path="../../di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin/222-fu-wu-tong-xin-zi-ding-yi-srv.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin/222-fu-wu-tong-xin-zi-ding-yi-srv.html">                                                    2.2.2 服务通信自定义srv                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.2.3" data-path="../../di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin/223-fu-wu-tong-xin-zi-ding-yi-srv-diao-yong-a-c-shi-73b029.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin/223-fu-wu-tong-xin-zi-ding-yi-srv-diao-yong-a-c-shi-73b029.html">                                                    2.2.3 服务通信自定义srv调用A(C++)                            </a>                                </li>            <li class="chapter " data-level="2.3.2.4" data-path="../../di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin/224-fu-wu-tong-xin-zi-ding-yi-srv-diao-yong-b-python.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/23-fu-wu-tong-xin/224-fu-wu-tong-xin-zi-ding-yi-srv-diao-yong-b-python.html">                                                    2.2.4 服务通信自定义srv调用B(Python)                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.3.3" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-can-shu-fu-wu-qi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-can-shu-fu-wu-qi.html">                                                    2.3 参数服务器                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.3.3.1" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-can-shu-fu-wu-qi/231-can-shu-fu-wu-qi-li-lun-mo-xing.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-can-shu-fu-wu-qi/231-can-shu-fu-wu-qi-li-lun-mo-xing.html">                                                    2.3.1 参数服务器理论模型                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.3.2" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-can-shu-fu-wu-qi/232-can-shu-cao-zuo-a-c-++.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-can-shu-fu-wu-qi/232-can-shu-cao-zuo-a-c-++.html">                                                    2.3.2 参数操作A(C++)                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.3.3" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-can-shu-fu-wu-qi/233-can-shu-caozuo-b-python.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-can-shu-fu-wu-qi/233-can-shu-caozuo-b-python.html">                                                    2.3.3 参数操作B(Python)                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.3.4" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling.html">                                                    2.4 常用命令                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.3.4.1" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/241-rostopic.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/241-rostopic.html">                                                    2.4.1 rosnode                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.4.2" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/242-rostopic.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/242-rostopic.html">                                                    2.4.2 rostopic                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.4.3" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/244-rosmsg.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/244-rosmsg.html">                                                    2.4.3 rosmsg                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.4.4" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/243-rosservice.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/243-rosservice.html">                                                    2.4.4 rosservice                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.4.5" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/245-rossrv.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/245-rossrv.html">                                                    2.4.5 rossrv                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.4.6" data-path="../../di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/246-rosparam.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/24-chang-yong-ming-ling/246-rosparam.html">                                                    2.4.6 rosparam                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.3.5" data-path="../../di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao.html">                                                    2.5 通信机制实操                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.3.5.1" data-path="../../di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao/251-shi-cao-01-hua-ti.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao/251-shi-cao-01-hua-ti.html">                                                    2.5.1 实操01_话题发布                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.5.2" data-path="../../di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao/252-shi-cao-02-hua-ti-ding-yue.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao/252-shi-cao-02-hua-ti-ding-yue.html">                                                    2.5.2 实操02_话题订阅                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.5.3" data-path="../../di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao/253-shi-cao-03-fu-wu-diao-yong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao/253-shi-cao-03-fu-wu-diao-yong.html">                                                    2.5.3 实操03_服务调用                            </a>                                </li>            <li class="chapter expanded" data-level="2.3.5.4" data-path="../../di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao/254-shi-cao-04-can-shu-she-zhi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/25-tong-xin-ji-zhi-shi-cao/254-shi-cao-04-can-shu-she-zhi.html">                                                    2.5.4 实操04_参数设置                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.3.6" data-path="../../di-2-zhang-ros-jia-gou-she-ji/26-tong-xin-ji-zhi-bi-jiao.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/26-tong-xin-ji-zhi-bi-jiao.html">                                                    2.6 通信机制比较                            </a>                                </li>            <li class="chapter " data-level="2.3.7" data-path="../../di-2-zhang-ros-jia-gou-she-ji/27-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-2-zhang-ros-jia-gou-she-ji/27-ben-zhang-xiao-jie.html">                                                    2.7 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.4" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie.html">                                                    第 3 章 ROS通信机制进阶                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.4.1" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31.html">                                                    3.1 常用API                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.4.1.1" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/311-chu-shi-hua-yu-guan-bi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/311-chu-shi-hua-yu-guan-bi.html">                                                    3.1.1 初始化                            </a>                                </li>            <li class="chapter expanded" data-level="2.4.1.2" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/313-hua-ti-dui-xiang-chuang-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/313-hua-ti-dui-xiang-chuang-jian.html">                                                    3.1.2 话题与服务相关对象                            </a>                                </li>            <li class="chapter expanded" data-level="2.4.1.3" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/314-shi-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/314-shi-jian.html">                                                    3.1.3 回旋函数                            </a>                                </li>            <li class="chapter expanded" data-level="2.4.1.4" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/315-ri-zhi-shu-chu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/315-ri-zhi-shu-chu.html">                                                    3.1.4 时间                             </a>                                </li>            <li class="chapter expanded" data-level="2.4.1.5" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/316-qi-ta-han-shu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/31/316-qi-ta-han-shu.html">                                                    3.1.5 其他函数                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.4.2" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/32-roszhong-de-tou-wen-jian-yu-yuan-wen-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/32-roszhong-de-tou-wen-jian-yu-yuan-wen-jian.html">                                                    3.2 ROS中的头文件与源文件                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.4.2.1" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/32-roszhong-de-tou-wen-jian-yu-yuan-wen-jian/321-zi-ding-yi-tou-wen-jian-diao-yong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/32-roszhong-de-tou-wen-jian-yu-yuan-wen-jian/321-zi-ding-yi-tou-wen-jian-diao-yong.html">                                                    3.2.1 自定义头文件调用                            </a>                                </li>            <li class="chapter expanded" data-level="2.4.2.2" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/32-roszhong-de-tou-wen-jian-yu-yuan-wen-jian/322-zi-ding-yi-yuan-wen-jian-diao-yong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/32-roszhong-de-tou-wen-jian-yu-yuan-wen-jian/322-zi-ding-yi-yuan-wen-jian-diao-yong.html">                                                    3.2.2 自定义源文件调用                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.4.3" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/33-pythonmo-kuai-dao-ru.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/33-pythonmo-kuai-dao-ru.html">                                                    3.3 Python模块导入                            </a>                                </li>            <li class="chapter expanded" data-level="2.4.4" data-path="../../di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/33-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-3-zhang-ros-tong-xin-ji-zhi-jin-jie/33-ben-zhang-xiao-jie.html">                                                    3.4 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.5" data-path="../../5.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5.html">                                                    第 4 章 ROS运行管理                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.5.1" data-path="../../5/41-rosyuan-gong-neng-bao.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/41-rosyuan-gong-neng-bao.html">                                                    4.1 ROS元功能包                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.2" data-path="../../5/45-rosjie-dianguan-li-launch-wen-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-rosjie-dianguan-li-launch-wen-jian.html">                                                    4.2 ROS节点管理launch文件                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.5.2.1" data-path="../../5/45-rosjie-dianguan-li-launch-wen-jian/411-launchwen-jian-biao-qian-zhi-launch.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-rosjie-dianguan-li-launch-wen-jian/411-launchwen-jian-biao-qian-zhi-launch.html">                                                    4.2.1 launch文件标签之launch                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.2.2" data-path="../../5/45-rosjie-dianguan-li-launch-wen-jian/412-launchwen-jian-biao-qian-zhi-node.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-rosjie-dianguan-li-launch-wen-jian/412-launchwen-jian-biao-qian-zhi-node.html">                                                    4.2.2 launch文件标签之node                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.2.3" data-path="../../5/45-rosjie-dianguan-li-launch-wen-jian/411-launchwen-jian-biao-qian-zhi-include.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-rosjie-dianguan-li-launch-wen-jian/411-launchwen-jian-biao-qian-zhi-include.html">                                                    4.2.3 launch文件标签之include                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.2.4" data-path="../../5/45-rosjie-dianguan-li-launch-wen-jian/414-launchwen-jian-biao-qian-zhi-remap.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-rosjie-dianguan-li-launch-wen-jian/414-launchwen-jian-biao-qian-zhi-remap.html">                                                    4.2.4 launch文件标签之remap                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.2.5" data-path="../../5/45-rosjie-dianguan-li-launch-wen-jian/411-launchwen-jian-biao-qian-zhi-param.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-rosjie-dianguan-li-launch-wen-jian/411-launchwen-jian-biao-qian-zhi-param.html">                                                    4.2.5 launch文件标签之param                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.2.6" data-path="../../5/45-rosjie-dianguan-li-launch-wen-jian/416-launchwen-jian-biao-qian-zhi-rosparam.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-rosjie-dianguan-li-launch-wen-jian/416-launchwen-jian-biao-qian-zhi-rosparam.html">                                                    4.2.6 launch文件标签之rosparam                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.2.7" data-path="../../5/45-rosjie-dianguan-li-launch-wen-jian/417-launchwen-jian-biao-qian-zhi-group.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-rosjie-dianguan-li-launch-wen-jian/417-launchwen-jian-biao-qian-zhi-group.html">                                                    4.2.7 launch文件标签之group                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.2.8" data-path="../../5/45-rosjie-dianguan-li-launch-wen-jian/418-launchwen-jian-biao-qian-zhi-arg.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-rosjie-dianguan-li-launch-wen-jian/418-launchwen-jian-biao-qian-zhi-arg.html">                                                    4.2.8 launch文件标签之arg                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.5.3" data-path="../../5/41-rosgong-zuo-kong-jian-fu-gai.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/41-rosgong-zuo-kong-jian-fu-gai.html">                                                    4.3 ROS工作空间覆盖                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.4" data-path="../../5/42-rosjie-dian-ming-cheng-zhong-ming.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/42-rosjie-dian-ming-cheng-zhong-ming.html">                                                    4.4 ROS节点名称重名                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.5.4.1" data-path="../../5/42-rosjie-dian-ming-cheng-zhong-ming/431-rosrun-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/42-rosjie-dian-ming-cheng-zhong-ming/431-rosrun-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                                                    4.4.1 rosrun设置命名空间与重映射                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.4.2" data-path="../../5/42-rosjie-dian-ming-cheng-zhong-ming/432-launchwen-jian-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/42-rosjie-dian-ming-cheng-zhong-ming/432-launchwen-jian-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                                                    4.4.2 launch文件设置命名空间与重映射                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.4.3" data-path="../../5/42-rosjie-dian-ming-cheng-zhong-ming/433-bian-ma-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/42-rosjie-dian-ming-cheng-zhong-ming/433-bian-ma-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                                                    4.4.3 编码设置命名空间与重映射                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.5.5" data-path="../../5/43-roshua-ti-ming-cheng-zhong-ming.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/43-roshua-ti-ming-cheng-zhong-ming.html">                                                    4.5 ROS话题名称设置                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.5.5.1" data-path="../../5/43-roshua-ti-ming-cheng-zhong-ming/441-rosrunshe-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/43-roshua-ti-ming-cheng-zhong-ming/441-rosrunshe-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                                                    4.5.1 rosrun设置话题重映射                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.5.2" data-path="../../5/43-roshua-ti-ming-cheng-zhong-ming/442-launchwen-jian-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/43-roshua-ti-ming-cheng-zhong-ming/442-launchwen-jian-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                                                    4.5.2 launch文件设置话题重映射                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.5.3" data-path="../../5/43-roshua-ti-ming-cheng-zhong-ming/443-bian-ma-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/43-roshua-ti-ming-cheng-zhong-ming/443-bian-ma-she-zhi-ming-ming-kong-jian-yu-zhong-ying-she.html">                                                    4.5.3 编码设置话题名称                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.5.6" data-path="../../5/45-roscan-shu-ming-cheng-she-zhi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-roscan-shu-ming-cheng-she-zhi.html">                                                    4.6 ROS参数名称设置                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.5.6.1" data-path="../../5/45-roscan-shu-ming-cheng-she-zhi/451-rosrunshe-zhi-can-shu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-roscan-shu-ming-cheng-she-zhi/451-rosrunshe-zhi-can-shu.html">                                                    4.6.1 rosrun设置参数                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.6.2" data-path="../../5/45-roscan-shu-ming-cheng-she-zhi/452-launchwen-jian-she-zhi-can-shu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-roscan-shu-ming-cheng-she-zhi/452-launchwen-jian-she-zhi-can-shu.html">                                                    4.6.2 launch文件设置参数                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.6.3" data-path="../../5/45-roscan-shu-ming-cheng-she-zhi/453-bian-ma-she-zhi-can-shu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/45-roscan-shu-ming-cheng-she-zhi/453-bian-ma-she-zhi-can-shu.html">                                                    4.6.3 编码设置参数                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.5.7" data-path="../../5/44-rosfen-bu-shi-tong-xin.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/44-rosfen-bu-shi-tong-xin.html">                                                    4.7 ROS分布式通信                            </a>                                </li>            <li class="chapter expanded" data-level="2.5.8" data-path="../../5/48-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/5/48-ben-zhang-xiao-jie.html">                                                    4.8 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.6" data-path="../../di-5-zhang-ji-qi-ren-dao-hang.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang.html">                                                    第 5 章 ROS常用组件                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.6.1" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan.html">                                                    5.1 TF坐标变换                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.6.1.1" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/511-zuo-biao-msg-xiao-xi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/511-zuo-biao-msg-xiao-xi.html">                                                    5.1.1 坐标msg消息                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.1.2" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/512-jing-tai-zuo-biao-bian-huan.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/512-jing-tai-zuo-biao-bian-huan.html">                                                    5.1.2 静态坐标变换                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.1.3" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/513-dong-tai-zuo-biao-bian-huan.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/513-dong-tai-zuo-biao-bian-huan.html">                                                    5.1.3 动态坐标变换                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.1.4" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/514-duo-zuo-biao-bian-huan.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/514-duo-zuo-biao-bian-huan.html">                                                    5.1.4 多坐标变换                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.1.5" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/515-zuo-biao-xi-guan-xi-cha-kan.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/515-zuo-biao-xi-guan-xi-cha-kan.html">                                                    5.1.5 坐标系关系查看                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.1.6" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/516-tfzuo-biao-bian-huan-shi-cao.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/516-tfzuo-biao-bian-huan-shi-cao.html">                                                    5.1.6 TF坐标变换实操                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.1.7" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/517-tf2yu-tf.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/517-tf2yu-tf.html">                                                    5.1.7 TF2与TF                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.1.8" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/518-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/51-tfzuo-biao-bian-huan/518-xiao-jie.html">                                                    5.1.8 小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.6.2" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/52-rosbagshi-yong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/52-rosbagshi-yong.html">                                                    5.2 rosbag                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.6.2.1" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/52-rosbagshi-yong/521-rosbagshi-yong-ming-ling-xing.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/52-rosbagshi-yong/521-rosbagshi-yong-ming-ling-xing.html">                                                    5.2.1 rosbag使用_命令行                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.2.2" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/52-rosbagshi-yong/522-rosbagshi-yong-bian-ma.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/52-rosbagshi-yong/522-rosbagshi-yong-bian-ma.html">                                                    5.2.2 rosbag使用_编码                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.6.3" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang.html">                                                    5.3 rqt工具箱                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.6.3.1" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/531-rqtan-zhuang-qi-dong-yu-ji-ji-ben-shi-yong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/531-rqtan-zhuang-qi-dong-yu-ji-ji-ben-shi-yong.html">                                                    5.3.1 rqt安装启动与基本使用                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.3.2" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/532-rqtchang-yongcha-jian-rqt-graph.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/532-rqtchang-yongcha-jian-rqt-graph.html">                                                    5.3.2 rqt常用插件:rqt_graph                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.3.3" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/533-rqtchang-yong-cha-4ef63a-rqt-console.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/533-rqtchang-yong-cha-4ef63a-rqt-console.html">                                                    5.3.3 rqt常用插件:rqt_console                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.3.4" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/534-rqtchang-yong-cha-4ef63a-rqt-plot.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/534-rqtchang-yong-cha-4ef63a-rqt-plot.html">                                                    5.3.4 rqt常用插件:rqt_plot                            </a>                                </li>            <li class="chapter expanded" data-level="2.6.3.5" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/535-rqtchang-yong-cha-4ef63a-rqt-bag.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/53-rqtgong-ju-xiang/535-rqtchang-yong-cha-4ef63a-rqt-bag.html">                                                    5.3.5 rqt常用插件:rqt_bag                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.6.4" data-path="../../di-5-zhang-ji-qi-ren-dao-hang/54-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-5-zhang-ji-qi-ren-dao-hang/54-ben-zhang-xiao-jie.html">                                                    5.4 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.7" data-path="../../di-6-zhang-ji-qi-ren-xi-tong-fang-zhen.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen.html">                                                    第 6 章 机器人系统仿真                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.7.1" data-path="../61-gai-shu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/61-gai-shu.html">                                                    6.1 概述                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.2" data-path="../62-fang-zhen-urdf-ji-cheng-rviz.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/62-fang-zhen-urdf-ji-cheng-rviz.html">                                                    6.2 URDF集成Rviz基本流程                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.3" data-path="../62-fang-zhen-urdf-ji-cheng-rviz/622-urdfyu-fa-xiang-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/62-fang-zhen-urdf-ji-cheng-rviz/622-urdfyu-fa-xiang-jie.html">                                                    6.3 URDF语法详解                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.7.3.1" data-path="../62-fang-zhen-urdf-ji-cheng-rviz/623-urdfyu-fa-xiang-jie-robot.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/62-fang-zhen-urdf-ji-cheng-rviz/623-urdfyu-fa-xiang-jie-robot.html">                                                    6.3.1 URDF语法详解01_robot                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.3.2" data-path="../62-fang-zhen-urdf-ji-cheng-rviz/624-urdfyu-fa-xiang-jie-02-link.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/62-fang-zhen-urdf-ji-cheng-rviz/624-urdfyu-fa-xiang-jie-02-link.html">                                                    6.3.2 URDF语法详解02_link                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.3.3" data-path="../62-fang-zhen-urdf-ji-cheng-rviz/625-urdfyu-fa-xiang-jie-03-joint.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/62-fang-zhen-urdf-ji-cheng-rviz/625-urdfyu-fa-xiang-jie-03-joint.html">                                                    6.3.3 URDF语法详解03_joint                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.3.4" data-path="../62-fang-zhen-urdf-ji-cheng-rviz/634-urdflian-xi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/62-fang-zhen-urdf-ji-cheng-rviz/634-urdflian-xi.html">                                                    6.3.4 URDF练习                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.3.5" data-path="../63-fang-zhen-urdf-ji-cheng-gazebo.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/63-fang-zhen-urdf-ji-cheng-gazebo.html">                                                    6.3.5 URDF工具                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.7.4" data-path="../64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong.html">                                                    6.4 URDF优化_xacro                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.7.4.1" data-path="../64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong/651-xacrokuai-su-ti-yan.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong/651-xacrokuai-su-ti-yan.html">                                                    6.4.1 Xacro_快速体验                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.4.2" data-path="../64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong/652-xacroyu-fa-xiang-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong/652-xacroyu-fa-xiang-jie.html">                                                    6.4.2 Xacro_语法详解                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.4.3" data-path="../64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong/653-xacrowan-zheng-shi-yong-liu-cheng-shi-li.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong/653-xacrowan-zheng-shi-yong-liu-cheng-shi-li.html">                                                    6.4.3 Xacro_完整使用流程示例                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.4.4" data-path="../64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong/654-xacroshi-cao.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/64-fang-zhen-urdf-rviz-yu-gazebo-zong-he-ying-yong/654-xacroshi-cao.html">                                                    6.4.4 Xacro_实操                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.7.5" data-path="../66-rviz-kong-zhi-ji-qi-ren-mo-xing-yun-dong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/66-rviz-kong-zhi-ji-qi-ren-mo-xing-yun-dong.html">                                                    6.5 Rviz中控制机器人模型运动                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.7.5.1" data-path="../66-rviz-kong-zhi-ji-qi-ren-mo-xing-yun-dong/661-arbotixshi-yong-liu-cheng.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/66-rviz-kong-zhi-ji-qi-ren-mo-xing-yun-dong/661-arbotixshi-yong-liu-cheng.html">                                                    6.5.1 Arbotix使用流程                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.7.6" data-path="../66-urdfji-cheng-gazebo.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/66-urdfji-cheng-gazebo.html">                                                    6.6 URDF集成Gazebo                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.7.6.1" data-path="../66-urdfji-cheng-gazebo/661-urdf-yu-gazebo-ji-ben-ji-cheng-liu-cheng.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/66-urdfji-cheng-gazebo/661-urdf-yu-gazebo-ji-ben-ji-cheng-liu-cheng.html">                                                    6.6.1 URDF与Gazebo基本集成流程                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.6.2" data-path="../66-urdfji-cheng-gazebo/662-urdf-ji-cheng-gazebo-xiang-guan-she-zhi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/66-urdfji-cheng-gazebo/662-urdf-ji-cheng-gazebo-xiang-guan-she-zhi.html">                                                    6.6.2 URDF集成Gazebo相关设置                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.6.3" data-path="../66-urdfji-cheng-gazebo/663-urdfji-cheng-gazebo-shi-cao.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/66-urdfji-cheng-gazebo/663-urdfji-cheng-gazebo-shi-cao.html">                                                    6.6.3 URDF集成Gazebo实操                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.6.4" data-path="../66-urdfji-cheng-gazebo/664-gazebofang-zhen-huan-jing-da-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/66-urdfji-cheng-gazebo/664-gazebofang-zhen-huan-jing-da-jian.html">                                                    6.6.4 Gazebo仿真环境搭建                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.7.7" data-path="../67.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67.html">                                                    6.7 URDF、Gazebo与Rviz综合应用                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter expanded" data-level="2.7.7.1" data-path="671-ji-qi-ren-yun-dong-kong-zhi-yi-ji-li-cheng-ji-xin-xi-xian-shi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/671-ji-qi-ren-yun-dong-kong-zhi-yi-ji-li-cheng-ji-xin-xi-xian-shi.html">                                                    6.7.1 机器人运动控制以及里程计信息显示                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.7.2" data-path="672-lei-da-xin-xi-fang-zhen-yi-ji-xian-shi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/672-lei-da-xin-xi-fang-zhen-yi-ji-xian-shi.html">                                                    6.7.2 雷达信息仿真以及显示                            </a>                                </li>            <li class="chapter expanded" data-level="2.7.7.3" data-path="673-she-xiang-tou-xin-xi-fang-zhen-yi-ji-xian-shi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/673-she-xiang-tou-xin-xi-fang-zhen-yi-ji-xian-shi.html">                                                    6.7.3 摄像头信息仿真以及显示                            </a>                                </li>            <li class="chapter active expanded" data-level="2.7.7.4" data-path="674-kinectxin-xi-fang-zhen-yi-ji-xian-shi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/674-kinectxin-xi-fang-zhen-yi-ji-xian-shi.html">                                                    6.7.4 kinect信息仿真以及显示                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.7.8" data-path="../68-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/68-ben-zhang-xiao-jie.html">                                                    6.8 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.8" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29.html">                                                    第 7 章 机器人导航(仿真)                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.8.1" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/71-gai-shu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/71-gai-shu.html">                                                    7.1 概述                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.8.1.1" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/71-gai-shu/711-dao-hang-mo-kuai-jian-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/71-gai-shu/711-dao-hang-mo-kuai-jian-jie.html">                                                    7.1.1 导航模块简介                            </a>                                </li>            <li class="chapter " data-level="2.8.1.2" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/71-gai-shu/712-dao-hang-zhi-zha-ge-di-tu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/71-gai-shu/712-dao-hang-zhi-zha-ge-di-tu.html">                                                    7.1.2 导航之坐标系                            </a>                                </li>            <li class="chapter " data-level="2.8.1.3" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/71-gai-shu/713-ding-wei-zhi-zuo-biao-xi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/71-gai-shu/713-ding-wei-zhi-zuo-biao-xi.html">                                                    7.1.3 导航条件说明                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.8.2" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian.html">                                                    7.2 导航实现                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.8.2.1" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/721-dao-hang-shi-xian-01-slam.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/721-dao-hang-shi-xian-01-slam.html">                                                    7.2.1 导航实现01_SLAM建图                            </a>                                </li>            <li class="chapter " data-level="2.8.2.2" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/722-dao-hang-shi-xian-02-ding-wei.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/722-dao-hang-shi-xian-02-ding-wei.html">                                                    7.2.2 导航实现02_地图服务                            </a>                                </li>            <li class="chapter " data-level="2.8.2.3" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/723-dao-hang-shi-xian-03-lu-jing-gui-hua.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/723-dao-hang-shi-xian-03-lu-jing-gui-hua.html">                                                    7.2.3 导航实现03_定位                            </a>                                </li>            <li class="chapter " data-level="2.8.2.4" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/724-dao-hang-shi-xian-04-lu-jing-gui-hua.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/724-dao-hang-shi-xian-04-lu-jing-gui-hua.html">                                                    7.2.4 导航实现04_路径规划                            </a>                                </li>            <li class="chapter " data-level="2.8.2.5" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/725-dao-hang-yu-slam-jian-tu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/72-dao-hang-shi-xian/725-dao-hang-yu-slam-jian-tu.html">                                                    7.2.5 导航与SLAM建图                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.8.3" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie.html">                                                    7.3 导航相关消息                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.8.3.1" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/731-dao-hang-zhi-di-tu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/731-dao-hang-zhi-di-tu.html">                                                    7.3.1 导航之地图                            </a>                                </li>            <li class="chapter " data-level="2.8.3.2" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/732-dao-hang-zhi-li-cheng-ji.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/732-dao-hang-zhi-li-cheng-ji.html">                                                    7.3.2 导航之里程计                            </a>                                </li>            <li class="chapter " data-level="2.8.3.3" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/733-dao-hang-zhi-lu-jing-gui-hua.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/733-dao-hang-zhi-lu-jing-gui-hua.html">                                                    7.3.3 导航之坐标变换                            </a>                                </li>            <li class="chapter " data-level="2.8.3.4" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/735-dao-hang-zhi-ding-wei.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/735-dao-hang-zhi-ding-wei.html">                                                    7.3.4 导航之定位                            </a>                                </li>            <li class="chapter " data-level="2.8.3.5" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/734-dao-hang-zhi-chuan-gan-qi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/734-dao-hang-zhi-chuan-gan-qi.html">                                                    7.3.5 导航之目标点与路径规划                            </a>                                </li>            <li class="chapter " data-level="2.8.3.6" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/736-dao-hang-zhi-ji-guang-lei-da.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/736-dao-hang-zhi-ji-guang-lei-da.html">                                                    7.3.6 导航之激光雷达                            </a>                                </li>            <li class="chapter " data-level="2.8.3.7" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/737-dao-hang-zhi-shen-du-xiang-ji.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/737-dao-hang-zhi-shen-du-xiang-ji.html">                                                    7.3.7 导航之相机                            </a>                                </li>            <li class="chapter " data-level="2.8.3.8" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/735-shen-du-tu-xiang-zhuan-ji-guang-shu-ju.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/73-dao-hang-xiang-jie/735-shen-du-tu-xiang-zhuan-ji-guang-shu-ju.html">                                                    7.3.8 深度图像转激光数据                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.8.4" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/75-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/75-ben-zhang-xiao-jie.html">                                                    7.4 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.9" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren.html">                                                    第 8 章 机器人平台设计                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.9.1" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu.html">                                                    8.1 概述                            </a>                                </li>            <li class="chapter " data-level="2.9.2" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino.html">                                                    8.2 机器人平台设计之arduino基础                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.9.2.1" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/81-arduino-kai-fa-huan-jing-da-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/81-arduino-kai-fa-huan-jing-da-jian.html">                                                    8.2.1 arduino 开发环境搭建                            </a>                                </li>            <li class="chapter " data-level="2.9.2.2" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/822-arduino-helloworld.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/822-arduino-helloworld.html">                                                    8.2.2 arduino 基本语法概述                            </a>                                </li>            <li class="chapter " data-level="2.9.2.3" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/823-arduino-ji-ben-yu-fa-yan-shi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/823-arduino-ji-ben-yu-fa-yan-shi.html">                                                    8.2.3 arduino 基本语法演示01                            </a>                                </li>            <li class="chapter " data-level="2.9.2.4" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/824-arduino-ji-ben-yu-fa-yan-shi-02.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/824-arduino-ji-ben-yu-fa-yan-shi-02.html">                                                    8.2.4 arduino 基本语法演示02                            </a>                                </li>            <li class="chapter " data-level="2.9.2.5" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/825-arduino-ji-ben-yu-fa-yan-shi-03.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/82-di-pan-kong-zhi-arduino/825-arduino-ji-ben-yu-fa-yan-shi-03.html">                                                    8.2.5 arduino 基本语法演示03                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.9.3" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong.html">                                                    8.3 机器人平台设计之电机驱动                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.9.3.1" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/831.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/831.html">                                                    8.3.1 硬件_电机与电机驱动板简介                            </a>                                </li>            <li class="chapter " data-level="2.9.3.2" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/832-dian-ji-ji-ben-kong-zhi-shi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/832-dian-ji-ji-ben-kong-zhi-shi-xian.html">                                                    8.3.2 电机基本控制实现                            </a>                                </li>            <li class="chapter " data-level="2.9.3.3" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/833-dian-ji-ce-su.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/833-dian-ji-ce-su.html">                                                    8.3.3 电机测速01_理论                            </a>                                </li>            <li class="chapter " data-level="2.9.3.4" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/833-dian-ji-ce-su-02-shi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/833-dian-ji-ce-su-02-shi-xian.html">                                                    8.3.4 电机测速02_实现                            </a>                                </li>            <li class="chapter " data-level="2.9.3.5" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/835-dian-ji-diao-su.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/835-dian-ji-diao-su.html">                                                    8.3.5 电机调速01_PID控制理论                            </a>                                </li>            <li class="chapter " data-level="2.9.3.6" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/836-dian-ji-diao-su-02-pid-kong-zhi-shi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/83-di-pan-kong-zhi-ji-chu-arduino-yu-dian-ji-qu-dong/836-dian-ji-diao-su-02-pid-kong-zhi-shi-xian.html">                                                    8.3.6 电机调速02_PID控制实现                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.9.4" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29.html">                                                    8.4 机器人平台设计之底盘实现                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.9.4.1" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/861-rosarduino-bridge-xia-zai-yu-an-zhuang.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/861-rosarduino-bridge-xia-zai-yu-an-zhuang.html">                                                    8.4.1 底盘实现_概述                            </a>                                </li>            <li class="chapter " data-level="2.9.4.2" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/862-ji-yu-ros-arduino-bridge-de-di-panshi-xian-01arduino-duan-ru-kou.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/862-ji-yu-ros-arduino-bridge-de-di-panshi-xian-01arduino-duan-ru-kou.html">                                                    8.4.2 底盘实现_01Arduino端入口                            </a>                                </li>            <li class="chapter " data-level="2.9.4.3" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/863-ji-yu-ros-arduino-bridge-de-di-panshi-xian-02arduino-duan-dian-ji-qu-dong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/863-ji-yu-ros-arduino-bridge-de-di-panshi-xian-02arduino-duan-dian-ji-qu-dong.html">                                                    8.4.3 底盘实现_02Arduino端编码器驱动                            </a>                                </li>            <li class="chapter " data-level="2.9.4.4" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/864-ji-yu-ros-arduino-bridge-de-di-panshi-xian-02arduino-duan-dian-ji-qu-dong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/864-ji-yu-ros-arduino-bridge-de-di-panshi-xian-02arduino-duan-dian-ji-qu-dong.html">                                                    8.4.4 底盘实现_03Arduino端电机驱动                            </a>                                </li>            <li class="chapter " data-level="2.9.4.5" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/865-ji-yu-ros-arduino-bridge-de-di-panshi-xian-04arduino-duan-pid-kong-zhi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/865-ji-yu-ros-arduino-bridge-de-di-panshi-xian-04arduino-duan-pid-kong-zhi.html">                                                    8.4.5 底盘实现_04Arduino端PID控制                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.9.5" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong.html">                                                    8.5 机器人平台设计之控制系统                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.9.5.1" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong/871-kong-zhi-xi-tong-shi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong/871-kong-zhi-xi-tong-shi-xian.html">                                                    8.5.1 控制系统实现_树莓派概述                            </a>                                </li>            <li class="chapter " data-level="2.9.5.2" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong/873-kong-zhi-xi-tong-shi-xian-fen-bu-shi-kuang-jia-da-jian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong/873-kong-zhi-xi-tong-shi-xian-fen-bu-shi-kuang-jia-da-jian.html">                                                    8.5.2 控制系统实现_分布式框架                            </a>                                </li>            <li class="chapter " data-level="2.9.5.3" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong/874-kong-zhi-xi-tong-shi-xian-cheng-xu-shang-chuan.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong/874-kong-zhi-xi-tong-shi-xian-cheng-xu-shang-chuan.html">                                                    8.5.3 控制系统实现_ssh远程连接                            </a>                                </li>            <li class="chapter " data-level="2.9.5.4" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/866-ji-yu-ros-arduino-bridge-de-di-pan-shi-xian-05ros-duan-pei-zhi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/86-ji-qi-ren-ping-tai-she-ji-zhi-di-pan-shi-73b028-4e0b29/866-ji-yu-ros-arduino-bridge-de-di-pan-shi-xian-05ros-duan-pei-zhi.html">                                                    8.5.4 控制系统实现_安装ros_arduino_bridge                            </a>                                </li>            <li class="chapter " data-level="2.9.5.5" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong/872-kong-zhi-xi-tong-shi-xian-shu-mei-pai-an-zhuang-ros.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/87-ji-qi-ren-ping-tai-she-ji-zhi-kong-zhi-xi-tong/872-kong-zhi-xi-tong-shi-xian-shu-mei-pai-an-zhuang-ros.html">                                                    资料:控制系统实现_树莓派安装ROS                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.9.6" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi.html">                                                    8.6 机器人平台设计之传感器                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.9.6.1" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/881.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/881.html">                                                    8.6.1 传感器_激光雷达简介                            </a>                                </li>            <li class="chapter " data-level="2.9.6.2" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/882-chuan-gan-qi-shen-du-xiang-ji.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/882-chuan-gan-qi-shen-du-xiang-ji.html">                                                    8.6.2 传感器_雷达使用                            </a>                                </li>            <li class="chapter " data-level="2.9.6.3" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/883-chuan-gan-qi-shen-du-xiang-ji-jian-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/883-chuan-gan-qi-shen-du-xiang-ji-jian-jie.html">                                                    8.6.3 传感器_相机简介                            </a>                                </li>            <li class="chapter " data-level="2.9.6.4" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/884-chuan-gan-qi-shen-du-xiang-ji-shi-yong.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/884-chuan-gan-qi-shen-du-xiang-ji-shi-yong.html">                                                    8.6.4 传感器_相机使用                            </a>                                </li>            <li class="chapter " data-level="2.9.6.5" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/885-chuan-gan-qi-zu-zhuang.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/81-gai-shu/88-ji-qi-ren-ping-tai-she-ji-zhi-chuan-gan-qi/885-chuan-gan-qi-zu-zhuang.html">                                                    8.6.5 传感器_集成                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.9.7" data-path="../../di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/89-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-8-zhang-gou-jian-lun-shi-cha-fen-ji-qi-ren/89-ben-zhang-xiao-jie.html">                                                    8.7 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter expanded" data-level="2.10" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329.html">                                                    第 9 章 机器人导航(实体)                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.10.1" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/91-gai-shu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/91-gai-shu.html">                                                    9.1 概述                            </a>                                </li>            <li class="chapter expanded" data-level="2.10.2" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-vscodeyuan-cheng-kai-fa.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-vscodeyuan-cheng-kai-fa.html">                                                    9.2 VScode远程开发                            </a>                                </li>            <li class="chapter " data-level="2.10.3" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian.html">                                                    9.3 导航实现                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.10.3.1" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/931-dao-hang-shi-xian-01-zhun-bei-gong-zuo.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/931-dao-hang-shi-xian-01-zhun-bei-gong-zuo.html">                                                    9.3.1 导航实现01_准备工作                            </a>                                </li>            <li class="chapter " data-level="2.10.3.2" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/932-dao-hang-shi-xian-02-slam-jian-tu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/932-dao-hang-shi-xian-02-slam-jian-tu.html">                                                    9.3.2 导航实现02_SLAM建图                            </a>                                </li>            <li class="chapter " data-level="2.10.3.3" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/933-dao-hang-shi-xian-03-di-tu-fu-wu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/933-dao-hang-shi-xian-03-di-tu-fu-wu.html">                                                    9.3.3 导航实现03_地图服务                            </a>                                </li>            <li class="chapter " data-level="2.10.3.4" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/933-dao-hang-shi-xian-03-ding-wei.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/933-dao-hang-shi-xian-03-ding-wei.html">                                                    9.3.4 导航实现04_定位                            </a>                                </li>            <li class="chapter " data-level="2.10.3.5" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/934-dao-hang-shi-xian-04-lu-jing-gui-hua.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/934-dao-hang-shi-xian-04-lu-jing-gui-hua.html">                                                    9.3.5 导航实现05_路径规划                            </a>                                </li>            <li class="chapter " data-level="2.10.3.6" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/936-dao-hang-yu-slam-jian-tu.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/92-dao-hang-shi-xian/936-dao-hang-yu-slam-jian-tu.html">                                                    9.3.6 导航与SLAM建图                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.10.4" data-path="../../di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/95-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-9-zhang-ji-qi-ren-dao-822a28-shi-4f5329/95-ben-zhang-xiao-jie.html">                                                    9.4 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.11" data-path="../../di-10-zhang-ros-jin-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-10-zhang-ros-jin-jie.html">                                                    第 10 章 ROS进阶                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.11.1" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1001-actiontong-xin.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1001-actiontong-xin.html">                                                    10.1 Action通信                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.11.1.1" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1001-actiontong-xin/1011.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1001-actiontong-xin/1011.html">                                                    10.1.1 自定义action文件                            </a>                                </li>            <li class="chapter " data-level="2.11.1.2" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1001-actiontong-xin/1012.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1001-actiontong-xin/1012.html">                                                    10.1.2 action通信实现A(C++)                            </a>                                </li>            <li class="chapter " data-level="2.11.1.3" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1001-actiontong-xin/1013-actiontong-xin-shi-xian-b-python.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1001-actiontong-xin/1013-actiontong-xin-shi-xian-b-python.html">                                                    10.1.3 action通信实现B(python)                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.11.2" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1002.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1002.html">                                                    10.2 动态参数                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.11.2.1" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1002/1021-dong-tai-can-shu-ke-hu-duan.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1002/1021-dong-tai-can-shu-ke-hu-duan.html">                                                    10.2.1 动态参数客户端                            </a>                                </li>            <li class="chapter " data-level="2.11.2.2" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1002/1022.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1002/1022.html">                                                    10.2.2 动态参数服务端A(C++)                            </a>                                </li>            <li class="chapter " data-level="2.11.2.3" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1002/1023.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/1002/1023.html">                                                    10.2.3 动态参数服务端B(python)                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.11.3" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/104-pluginlib.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/104-pluginlib.html">                                                    10.3 pluginlib                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.11.3.1" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/104-pluginlib/1041-cha-jian-shi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/104-pluginlib/1041-cha-jian-shi-xian.html">                                                    10.3.1 pluginlin使用                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.11.4" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/103-nodelet.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/103-nodelet.html">                                                    10.4 nodelet                            <i class="exc-trigger fa"></i></a>                                    <ul class="articles">                            <li class="chapter " data-level="2.11.4.1" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/103-nodelet/1031-shi-yong-yan-shi.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/103-nodelet/1031-shi-yong-yan-shi.html">                                                    10.4.1 使用演示                            </a>                                </li>            <li class="chapter " data-level="2.11.4.2" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/103-nodelet/1032-apishi-xian.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/103-nodelet/1032-apishi-xian.html">                                                    10.4.2 nodelet实现                            </a>                                </li>                </ul>                    </li>            <li class="chapter " data-level="2.11.5" data-path="../../di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/104-ben-zhang-xiao-jie.html">                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-7-zhang-ji-qi-ren-dao-822a28-fang-771f29/104-ben-zhang-xiao-jie.html">                                                    10.5 本章小结                            </a>                                </li>                </ul>                    </li>            <li class="divider"></li>    <li>        <a href="https://www.gitbook.com/" target="blank" class="gitbook-link">            本书使用 GitBook 发布        </a>    </li></ul>                </nav>                        <div class="divider-content-summary"><div class="divider-content-summary__icon"><i class="fa fa-ellipsis-v"></i></div></div></div>    <div class="book-body" style="left: 300px; position: absolute;">                    <div class="body-inner">                                    <div class="book-header" role="navigation">        <!-- Title -->    <a class="btn pull-left js-toolbar-action" aria-label="" href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/674-kinectxin-xi-fang-zhen-yi-ji-xian-shi.html#"><i class="fa fa-align-justify"></i></a><div class="dropdown pull-left font-settings js-toolbar-action"><a class="btn toggle-dropdown" aria-label="Font Settings" href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/674-kinectxin-xi-fang-zhen-yi-ji-xian-shi.html#"><i class="fa fa-font"></i></a><div class="dropdown-menu dropdown-right"><div class="dropdown-caret"><span class="caret-outer"></span><span class="caret-inner"></span></div><div class="buttons"><button class="button size-2 font-reduce">A</button><button class="button size-2 font-enlarge">A</button></div><div class="buttons"><button class="button size-2 ">Serif</button><button class="button size-2 ">Sans</button></div><div class="buttons"><button class="button size-3 ">White</button><button class="button size-3 ">Sepia</button><button class="button size-3 ">Night</button></div></div></div><h1>        <i class="fa fa-circle-o-notch fa-spin"></i>        <a href="http://www.autolabor.com.cn/book/ROSTutorials/">6.7.4 kinect信息仿真以及显示</a>    </h1></div>                    <div class="page-wrapper" tabindex="-1" role="main">                        <div class="page-inner">                            <div id="book-search-results">    <div class="search-noresults">                                    <section class="normal markdown-section">                                                                <h3 id="674-kinect信息仿真以及显示">6.7.4 kinect信息仿真以及显示</h3><p>通过 Gazebo 模拟kinect摄像头，并在 Rviz 中显示kinect摄像头数据。</p><p><strong>实现流程:</strong></p><p>kinect摄像头仿真基本流程:</p><ol><li><p>已经创建完毕的机器人模型，编写一个单独的 xacro 文件，为机器人模型添加kinect摄像头配置；</p></li><li><p>将此文件集成进xacro文件；</p></li><li><p>启动 Gazebo，使用 Rviz 显示kinect摄像头信息。</p></li></ol><h4 id="1gazebo仿真kinect">1.Gazebo仿真Kinect</h4><h5 id="11-新建-xacro-文件，配置-kinetic传感器信息">1.1 新建 Xacro 文件，配置 kinetic传感器信息</h5><pre style="position: relative;"><code class="lang-xml"><span class="hljs-tag">&lt;<span class="hljs-name">robot</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"my_sensors"</span> <span class="hljs-attr">xmlns:xacro</span>=<span class="hljs-string">"http://wiki.ros.org/xacro"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">gazebo</span> <span class="hljs-attr">reference</span>=<span class="hljs-string">"kinect link名称"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">sensor</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"depth"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"camera"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">always_on</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">always_on</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">update_rate</span>&gt;</span>20.0<span class="hljs-tag">&lt;/<span class="hljs-name">update_rate</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">camera</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">horizontal_fov</span>&gt;</span>$&#123;60.0*PI/180.0&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">horizontal_fov</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">image</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">format</span>&gt;</span>R8G8B8<span class="hljs-tag">&lt;/<span class="hljs-name">format</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">width</span>&gt;</span>640<span class="hljs-tag">&lt;/<span class="hljs-name">width</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">height</span>&gt;</span>480<span class="hljs-tag">&lt;/<span class="hljs-name">height</span>&gt;</span>          <span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">clip</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">near</span>&gt;</span>0.05<span class="hljs-tag">&lt;/<span class="hljs-name">near</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">far</span>&gt;</span>8.0<span class="hljs-tag">&lt;/<span class="hljs-name">far</span>&gt;</span>          <span class="hljs-tag">&lt;/<span class="hljs-name">clip</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">camera</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"kinect_camera_controller"</span> <span class="hljs-attr">filename</span>=<span class="hljs-string">"libgazebo_ros_openni_kinect.so"</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">cameraName</span>&gt;</span>camera<span class="hljs-tag">&lt;/<span class="hljs-name">cameraName</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">alwaysOn</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">alwaysOn</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">updateRate</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">updateRate</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">imageTopicName</span>&gt;</span>rgb/image_raw<span class="hljs-tag">&lt;/<span class="hljs-name">imageTopicName</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">depthImageTopicName</span>&gt;</span>depth/image_raw<span class="hljs-tag">&lt;/<span class="hljs-name">depthImageTopicName</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">pointCloudTopicName</span>&gt;</span>depth/points<span class="hljs-tag">&lt;/<span class="hljs-name">pointCloudTopicName</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">cameraInfoTopicName</span>&gt;</span>rgb/camera_info<span class="hljs-tag">&lt;/<span class="hljs-name">cameraInfoTopicName</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">depthImageCameraInfoTopicName</span>&gt;</span>depth/camera_info<span class="hljs-tag">&lt;/<span class="hljs-name">depthImageCameraInfoTopicName</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">frameName</span>&gt;</span>kinect link名称<span class="hljs-tag">&lt;/<span class="hljs-name">frameName</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">baseline</span>&gt;</span>0.1<span class="hljs-tag">&lt;/<span class="hljs-name">baseline</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">distortion_k1</span>&gt;</span>0.0<span class="hljs-tag">&lt;/<span class="hljs-name">distortion_k1</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">distortion_k2</span>&gt;</span>0.0<span class="hljs-tag">&lt;/<span class="hljs-name">distortion_k2</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">distortion_k3</span>&gt;</span>0.0<span class="hljs-tag">&lt;/<span class="hljs-name">distortion_k3</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">distortion_t1</span>&gt;</span>0.0<span class="hljs-tag">&lt;/<span class="hljs-name">distortion_t1</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">distortion_t2</span>&gt;</span>0.0<span class="hljs-tag">&lt;/<span class="hljs-name">distortion_t2</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">pointCloudCutoff</span>&gt;</span>0.4<span class="hljs-tag">&lt;/<span class="hljs-name">pointCloudCutoff</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">sensor</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">gazebo</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">robot</span>&gt;</span></code><button class="copy-code-button" style="position: absolute; top: 5px; right: 5px; padding: 3px; background-color: rgb(49, 62, 78); color: white; border-radius: 5px; border: 2px solid rgb(204, 204, 204);">Copy</button></pre><h5 id="12-xacro-文件集成">1.2 xacro 文件集成</h5><p>将步骤1的 Xacro 文件集成进总的机器人模型文件，代码示例如下:</p><pre style="position: relative;"><code class="lang-xml"><span class="hljs-comment">&lt;!-- 组合小车底盘与传感器 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">robot</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"my_car_camera"</span> <span class="hljs-attr">xmlns:xacro</span>=<span class="hljs-string">"http://wiki.ros.org/xacro"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">xacro:include</span> <span class="hljs-attr">filename</span>=<span class="hljs-string">"my_head.urdf.xacro"</span> /&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">xacro:include</span> <span class="hljs-attr">filename</span>=<span class="hljs-string">"my_base.urdf.xacro"</span> /&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">xacro:include</span> <span class="hljs-attr">filename</span>=<span class="hljs-string">"my_camera.urdf.xacro"</span> /&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">xacro:include</span> <span class="hljs-attr">filename</span>=<span class="hljs-string">"my_laser.urdf.xacro"</span> /&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">xacro:include</span> <span class="hljs-attr">filename</span>=<span class="hljs-string">"move.urdf.xacro"</span> /&gt;</span>    <span class="hljs-comment">&lt;!-- kinect仿真的 xacro 文件 --&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">xacro:include</span> <span class="hljs-attr">filename</span>=<span class="hljs-string">"my_sensors_kinect.urdf.xacro"</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">robot</span>&gt;</span></code><button class="copy-code-button" style="position: absolute; top: 5px; right: 5px; padding: 3px; background-color: rgb(49, 62, 78); color: white; border-radius: 5px; border: 2px solid rgb(204, 204, 204);">Copy</button></pre><h5 id="13启动仿真环境">1.3启动仿真环境</h5><p>编写launch文件，启动gazebo，此处略...</p><h4 id="2-rviz-显示-kinect-数据">2 Rviz 显示 Kinect 数据</h4><p>启动 rviz,添加摄像头组件查看数据<img src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/kinect摄像头.PNG" alt=""><img src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/16_kinect仿真.png" alt=""></p><hr><h4 id="补充kinect-点云数据显示"><strong>补充:kinect 点云数据显示</strong></h4><p>在kinect中也可以以点云的方式显示感知周围环境，在 rviz 中操作如下:</p><p><img src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/点云数据_默认.PNG" alt=""></p><p><strong>问题:</strong>在rviz中显示时错位。</p><p><strong>原因:</strong>在kinect中图像数据与点云数据使用了两套坐标系统，且两套坐标系统位姿并不一致。</p><p><strong>解决:</strong></p><p>1.在插件中为kinect设置坐标系，修改配置文件的<code>&lt;frameName&gt;</code>标签内容：</p><pre style="position: relative;"><code class="lang-xml"><span class="hljs-tag">&lt;<span class="hljs-name">frameName</span>&gt;</span>support_depth<span class="hljs-tag">&lt;/<span class="hljs-name">frameName</span>&gt;</span></code><button class="copy-code-button" style="position: absolute; top: 5px; right: 5px; padding: 3px; background-color: rgb(49, 62, 78); color: white; border-radius: 5px; border: 2px solid rgb(204, 204, 204);">Copy</button></pre><p>2.发布新设置的坐标系到kinect连杆的坐标变换关系，在启动rviz的launch中，添加:</p><pre style="position: relative;"><code class="lang-xml"><span class="hljs-tag">&lt;<span class="hljs-name">node</span> <span class="hljs-attr">pkg</span>=<span class="hljs-string">"tf2_ros"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"static_transform_publisher"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"static_transform_publisher"</span> <span class="hljs-attr">args</span>=<span class="hljs-string">"0 0 0 -1.57 0 -1.57 /support /support_depth"</span> /&gt;</span></code><button class="copy-code-button" style="position: absolute; top: 5px; right: 5px; padding: 3px; background-color: rgb(49, 62, 78); color: white; border-radius: 5px; border: 2px solid rgb(204, 204, 204);">Copy</button></pre><p>3.启动rviz，重新显示。</p><p><img src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/点云数据_修正.PNG" alt=""></p>                                                                </section>                                </div>    <div class="search-results">        <div class="has-results">                        <h1 class="search-results-title"><span class="search-results-count"></span> results matching "<span class="search-query"></span>"</h1>            <ul class="search-results-list"></ul>                    </div>        <div class="no-results">                        <h1 class="search-results-title">No results matching "<span class="search-query"></span>"</h1>                    </div>    </div></div>                        </div>                    </div>                            </div>                                            <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/673-she-xiang-tou-xin-xi-fang-zhen-yi-ji-xian-shi.html" class="navigation navigation-prev " aria-label="Previous page: 6.7.3 摄像头信息仿真以及显示">                    <i class="fa fa-angle-left"></i>                </a>                                                <a href="http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/68-ben-zhang-xiao-jie.html" class="navigation navigation-next " aria-label="Next page: 6.8 本章小结" style="margin-right: 15px;">                    <i class="fa fa-angle-right"></i>                </a>                                        </div>    <script>        var gitbook = gitbook || [];        gitbook.push(function() {            gitbook.page.hasChanged({"page":{"title":"6.7.4 kinect信息仿真以及显示","level":"2.7.7.4","depth":3,"next":{"title":"6.8 本章小结","level":"2.7.8","depth":2,"path":"di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/68-ben-zhang-xiao-jie.md","ref":"di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/68-ben-zhang-xiao-jie.md","articles":[]},"previous":{"title":"6.7.3 摄像头信息仿真以及显示","level":"2.7.7.3","depth":3,"path":"di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/673-she-xiang-tou-xin-xi-fang-zhen-yi-ji-xian-shi.md","ref":"di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/673-she-xiang-tou-xin-xi-fang-zhen-yi-ji-xian-shi.md","articles":[]},"dir":"ltr"},"config":{"plugins":["baidu-tongji-with-multiple-channel","expandable-chapters","-sharing","search-pro","-search","-lunr","splitter","copy-code-button"],"styles":{"website":"styles/website.css","pdf":"styles/pdf.css","epub":"styles/epub.css","mobi":"styles/mobi.css","ebook":"styles/ebook.css","print":"styles/print.css"},"pluginsConfig":{"baidu-tongji-with-multiple-channel":{"multipleChannelConfig":{},"url":"https://hm.baidu.com/hm.js","token":"a0fdd9ad0ec836cfe28b0fd96ca2d5ac"},"expandable-chapters":{},"search-pro":{},"splitter":{},"copy-code-button":{},"highlight":{},"fontsettings":{"theme":"white","family":"sans","size":2},"theme-default":{"styles":{"website":"styles/website.css","pdf":"styles/pdf.css","epub":"styles/epub.css","mobi":"styles/mobi.css","ebook":"styles/ebook.css","print":"styles/print.css"},"showLevel":false}},"theme":"default","author":"Autolabor-赵虚左","pdf":{"pageNumbers":true,"fontSize":12,"fontFamily":"Arial","paperSize":"a4","chapterMark":"pagebreak","pageBreaksBefore":"/","margin":{"right":62,"left":62,"top":56,"bottom":56}},"structure":{"langs":"LANGS.md","readme":"README.md","glossary":"GLOSSARY.md","summary":"SUMMARY.md"},"variables":{},"title":"Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程","language":"zh-hans","gitbook":"*","description":"Autolabor出品-《ROS理论与实践》课程配套文档"},"file":{"path":"di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/674-kinectxin-xi-fang-zhen-yi-ji-xian-shi.md","mtime":"2021-02-26T09:23:32.657Z","type":"markdown"},"gitbook":{"version":"3.2.3","time":"2021-12-21T03:10:04.593Z"},"basePath":"../..","book":{"language":""}});        });    </script></div>            <script src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/gitbook.js"></script>    <script src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/theme.js"></script>                    <script src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/plugin.js"></script>                            <script src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/expandable-chapters.js"></script>                            <script src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/jquery.mark.min.js"></script>                            <script src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/search.js"></script>                            <script src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/splitter.js"></script>                            <script src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/toggle.js"></script>                            <script src="./6.7.4 kinect信息仿真以及显示 · Autolabor-ROS机器人入门课程《ROS理论与实践》零基础教程_files/fontsettings.js"></script>                <div id="csdn-plugin-note-btn"><img src="chrome-extension://igbflnhjjpcakhcjakbnbkncjofahlil/images/collectBox/assets/images/logo.png" class="logo" alt=""><span>C笔记</span><img class="close" src="chrome-extension://igbflnhjjpcakhcjakbnbkncjofahlil/images/collectBox/assets/images/close.png" alt=""></div><script src="chrome-extension://nhiheekdcnmfbapkmpbhmplfddenhjic/sm.bundle.js" data-pname="supercopy-v3" data-asset-path="https://spc3.s3.ap-east-1.amazonaws.com"></script></body></html>]]></content>
    
    
      
      
    <summary type="html">&lt;!DOCTYPE html&gt;
&lt;!-- saved from url=(0134)http://www.autolabor.com.cn/book/ROSTutorials/di-6-zhang-ji-qi-ren-xi-tong-fang-zhen/67/674-kinect</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ros指令</title>
    <link href="https://aixiaocainiao.github.io/posts/50f3c42c.html"/>
    <id>https://aixiaocainiao.github.io/posts/50f3c42c.html</id>
    <published>2023-08-21T09:10:42.073Z</published>
    <updated>2023-06-08T05:23:31.439Z</updated>
    
    <content type="html"><![CDATA[<p>odm  framd_id odm_combined<br>map  map<br>nase_frame_id base_footprint</p><p>scan  scan<br> 查看某个具体的消息 需要使用管道<br>rosmsg list | grep -i 话题名称<br>校园网址<br><a href="https://120.199.39.54:7090/zmcc/indexForce.wlan?wlanuserip=10.137.237.63&amp;wlanacname=0437.0571.571.00">https://120.199.39.54:7090/zmcc/indexForce.wlan?wlanuserip=10.137.237.63&amp;wlanacname=0437.0571.571.00</a></p><p>C语言学习中递归函数<br>ctrl+shift+空格出现代码提示<br>使用rosparam导入参数<br>设置的参数.yaml文件中 需要加空格 例如bg_R: 100<br>rosparam 便签 会率先执行 所以在使用dump导出参数的时候需要自己直接写一个launch文件</p><p>写代码之前操作</p><p>mkdir -p xxx_ws/src(必须得有 src)<br>cd xxx_ws<br>catkin_make<br>cd xxx_ws<br>code .</p><p>rviz中 ctrl+shift+鼠标可以拖动位置<br>args=”-d $(find urdf01_rviz)/config/show_mycar.rviz”<br>这玩意保存的时配置 不是rviz里面显示的东西<br>solidworks<br>joint origin是joint相对于parent的位置<br>[joint_state_publisher-4] process has died [pid 12169, exit code 1, cmd /opt/ros/melodic/lib/joint_state_publisher/joint_state_publisher <strong>name:=joint_state_publisher </strong>log:=/home/yunfang/.ros/log/3c02610c-bfaa-11ed-a76e-30d16b56c4c1/joint_state_publisher-4.log].<br>log file: /home/yunfang/.ros/log/3c02610c-bfaa-11ed-a76e-30d16b56c4c1/joint_state_publisher-4*.log</p><p>出现下面的错误 请删除掉urdf里面的中文注释 melidic中不能有一点点中文<br>evince mycar.pdf<br>arbotix报错，进入src下的arbotix_ros功能包，进入arbotix_python，进入bin，进入arbotix_driver<br>将第一行中的python的运行版本从3改为2.7运行就可以了<br>rviz中fixed frame为 odm<br>gazebo有进程问题 请执行下面指令 直接杀死<br>killall gzserver</p><p>killall gzclient</p><p>tar -xvf arduino-1.x.y-linux64.tar.xz<br>tar解压命令 </p><node name="playbag" pkg="rosbag" type="play"      args="--clock $(arg bag_filename)" />]]></content>
    
    
    <summary type="html">ros指令</summary>
    
    
    
    <category term="other学习" scheme="https://aixiaocainiao.github.io/categories/other%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="ros" scheme="https://aixiaocainiao.github.io/tags/ros/"/>
    
  </entry>
  
  <entry>
    <title>ros再次学习</title>
    <link href="https://aixiaocainiao.github.io/posts/46f1c108.html"/>
    <id>https://aixiaocainiao.github.io/posts/46f1c108.html</id>
    <published>2023-08-21T09:10:42.068Z</published>
    <updated>2023-06-08T05:23:31.436Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ros再次学习"><a href="#ros再次学习" class="headerlink" title="ros再次学习"></a>ros再次学习</h1><h2 id="一、从控制乌龟到控制小车"><a href="#一、从控制乌龟到控制小车" class="headerlink" title="一、从控制乌龟到控制小车"></a>一、从控制乌龟到控制小车</h2><p>只是将与乌龟通信的话题设置成小车的话题即可</p><ul><li>修改话题即可</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">控制小乌龟代码</span><br><span class="line">pub = rospy.Publisher(&#x27;/turtle1/cmd_vel&#x27;, Twist, queue_size=10)</span><br><span class="line">------------------------------</span><br><span class="line">#!/usr/bin/env python</span><br><span class="line"># license removed for brevity</span><br><span class="line">import rospy</span><br><span class="line">from geometry_msgs.msg import Twist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def talker():</span><br><span class="line">    pub = rospy.Publisher(&#x27;/turtle1/cmd_vel&#x27;, Twist, queue_size=10)</span><br><span class="line">    rospy.init_node(&#x27;talker&#x27;, anonymous=True)</span><br><span class="line">    rate = rospy.Rate(10) # 10hz</span><br><span class="line">    while not rospy.is_shutdown():</span><br><span class="line">        vel_cmd = Twist()</span><br><span class="line">        vel_cmd.linear.x = 1.0</span><br><span class="line">        vel_cmd.angular.z = 1.0</span><br><span class="line">       </span><br><span class="line">        pub.publish(vel_cmd)</span><br><span class="line">        rate.sleep()</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    try:</span><br><span class="line">        talker()</span><br><span class="line">    except rospy.ROSInterruptException:</span><br><span class="line">        pass</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">控制小车</span><br><span class="line">pub = rospy.Publisher(&#x27;/tianbot_mini/cmd_vel&#x27;, Twist, queue_size=10)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---------------------------</span><br><span class="line"></span><br><span class="line">import rospy</span><br><span class="line">from geometry_msgs.msg import Twist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def talker():</span><br><span class="line">    pub = rospy.Publisher(&#x27;/tianbot_mini/cmd_vel&#x27;, Twist, queue_size=10)</span><br><span class="line">    rospy.init_node(&#x27;talker&#x27;, anonymous=True)</span><br><span class="line">    rate = rospy.Rate(10) # 10hz</span><br><span class="line">    while not rospy.is_shutdown():</span><br><span class="line">        vel_cmd = Twist()</span><br><span class="line">        vel_cmd.linear.x = 1.0</span><br><span class="line">        vel_cmd.angular.z = 1.0</span><br><span class="line">       </span><br><span class="line">        pub.publish(vel_cmd)</span><br><span class="line">        rate.sleep()</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    try:</span><br><span class="line">        talker()</span><br><span class="line">    except rospy.ROSInterruptException:</span><br><span class="line">        pass</span><br></pre></td></tr></table></figure><p>常用命令行</p><ul><li><p>rostopic list 话题列表</p></li><li><p>rostopic pub -r 10 /turtle1/cmd_vel tab 内容</p></li><li><p>rostopic echo /turtle1/cmd_vel 打印话题内容</p></li><li><p>rosmsg show    /turtle1/cmd_vel </p></li><li>显示消息描述</li></ul><p>可以这样理解</p><ul><li><p>你写的代码 为一个节点</p></li><li><p>小乌龟仿真   为一个节点</p></li><li><p>小车   也是一个节点</p></li></ul><p>两个节点通过话题(例如  /turtle1/cmd_vel或者/tianbot_mini/cmd_vel)来通信 实现了一个点对点的分布式通信</p><h2 id="二、订阅里程计传感器数据"><a href="#二、订阅里程计传感器数据" class="headerlink" title="二、订阅里程计传感器数据"></a>二、订阅里程计传感器数据</h2><h2 id="三、订阅与发布控制小车"><a href="#三、订阅与发布控制小车" class="headerlink" title="三、订阅与发布控制小车"></a>三、订阅与发布控制小车</h2><p>需求:订阅并发布话题实现机器人“旋转前进”</p><h2 id="四、订阅激光雷达话题消息，并发布阿克曼速度话题实现简单的PID算法-wall-following"><a href="#四、订阅激光雷达话题消息，并发布阿克曼速度话题实现简单的PID算法-wall-following" class="headerlink" title="四、订阅激光雷达话题消息，并发布阿克曼速度话题实现简单的PID算法_wall_following"></a>四、订阅激光雷达话题消息，并发布阿克曼速度话题实现简单的PID算法_wall_following</h2><ul><li>原理如下</li></ul><p>如果车向右转了一下，需要往左转一点</p><p>相反如果车向左转了一下，需要往右转一点</p><p>——控制车走直线</p><p>PID简单原理</p><p>k     p 就是比例系数 ，简称为kp</p><p>k    d微分，实际上是对误差进行积分，误差err的微分是(err2-err1)</p><p>l     i积分，实际上是对误差的积分，也就是误差的无线和。对偏差进行积分(累加）。I的作用是，减少静态情况下的误差，让受控的物理量尽可能的接近目标</p><p>全局规划器：利用全局地图规划出一条最优的路径(不能控制运动)</p><p>局部规划器:local_planner   里面有cmd_vel geometry_msgs/Twist  控制着机器人的运动</p><p>python中 有回调函数 别忘记spin()回旋函数</p>]]></content>
    
    
    <summary type="html">ros再次学习</summary>
    
    
    
    <category term="other学习" scheme="https://aixiaocainiao.github.io/categories/other%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="ros" scheme="https://aixiaocainiao.github.io/tags/ros/"/>
    
  </entry>
  
  <entry>
    <title>ros中自定义全局路径规划器部署步骤</title>
    <link href="https://aixiaocainiao.github.io/posts/b65be66e.html"/>
    <id>https://aixiaocainiao.github.io/posts/b65be66e.html</id>
    <published>2023-08-21T09:10:42.063Z</published>
    <updated>2023-06-08T05:23:31.432Z</updated>
    
    <content type="html"><![CDATA[<p>ros中自定义全局路径规划器部署步骤</p><ul><li><p>catkin_create_pkg better_astar_global_planner  roscpp rospy std_msgs   nav_core</p></li><li><p>将.cpp文件和.h头文件放入到src中</p></li><li>配置CMakeLists.txt</li><li>重新编译  在/home/yunfang/tutorial_ws/devel/lib中生成了libbetter_astar_global_planner_lib.so库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">124行</span><br><span class="line">## Declare a C++ library</span><br><span class="line"># add_library($&#123;PROJECT_NAME&#125;</span><br><span class="line">#   src/$&#123;PROJECT_NAME&#125;/plugin_better_a.cpp</span><br><span class="line"># )</span><br><span class="line">修改为  注意_lib  包名_lib</span><br><span class="line">## Declare a C++ library</span><br><span class="line">add_library(better_astar_global_planner_lib</span><br><span class="line">  src/better_aster.cpp</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>2.1注册插件:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PLUGINLIB_EXPORT_CLASS</span>(BAstar_planner::BAstarPlannerROS, nav_core::BaseGlobalPlanner)</span><br></pre></td></tr></table></figure><p>2.2插件描述文件</p><p>包 右键  新建文件 better_astar_global_planner_plugin.xml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">初始：</span><br><span class="line"> &lt;library path=&quot;lib/libglobal_planner_lib&quot;&gt;  生成的库</span><br><span class="line">  &lt;class name=&quot;global_planner/GlobalPlanner&quot; type=&quot;global_planner::GlobalPlanner&quot; base_class_type=&quot;nav_core::BaseGlobalPlanner&quot;&gt;   </span><br><span class="line">    &lt;description&gt;This is a global planner plugin by iroboapp project.&lt;/description&gt;</span><br><span class="line">  &lt;/class&gt;</span><br><span class="line"> &lt;/library&gt;</span><br><span class="line"> </span><br><span class="line">介绍：</span><br><span class="line">&lt;library path=&quot;lib/libglobal_planner_lib&quot;&gt;  生成的库</span><br><span class="line">type=&quot;global_planner::GlobalPlanner&quot; 注册插件的  编写的类 BAstar_planner::BAstarPlannerROS</span><br><span class="line">修改为：</span><br><span class="line">&lt;library path=&quot;lib/libbetter_astar_global_planner_lib&quot;&gt;</span><br><span class="line">  &lt;class name=&quot;BAstar_planner/BAstarPlannerROS&quot; type=&quot;BAstar_planner::BAstarPlannerROS&quot; base_class_type=&quot;nav_core::BaseGlobalPlanner&quot;&gt;</span><br><span class="line">    &lt;description&gt;This is a global planner plugin by iroboapp project.&lt;/description&gt;</span><br><span class="line">  &lt;/class&gt;</span><br><span class="line"> &lt;/library&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.3使用 ROS 包系统注册插件</p><p>packeage.xml中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">67行 最下面</span><br><span class="line"></span><br><span class="line">&lt;export&gt;</span><br><span class="line">   &lt;!-- Other tools can request additional information be placed here --&gt;</span><br><span class="line">   &lt;nav_core plugin=&quot;$&#123;prefix&#125;/better_astar_global_planner_plugin.xml&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/export&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">ros中自定义全局路径规划器部署步骤</summary>
    
    
    
    <category term="other学习" scheme="https://aixiaocainiao.github.io/categories/other%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="ros" scheme="https://aixiaocainiao.github.io/tags/ros/"/>
    
  </entry>
  
  <entry>
    <title>ros melotic cartographer安装</title>
    <link href="https://aixiaocainiao.github.io/posts/26aabfb9.html"/>
    <id>https://aixiaocainiao.github.io/posts/26aabfb9.html</id>
    <published>2023-08-21T09:10:42.058Z</published>
    <updated>2023-06-08T05:23:31.428Z</updated>
    
    <content type="html"><![CDATA[<ol><li>安装相关的依赖<br>sudo apt-get install -y google-mock libboost-all-dev  libeigen3-dev libgflags-dev libgoogle-glog-dev liblua5.2-dev libprotobuf-dev  libsuitesparse-dev libwebp-dev ninja-build protobuf-compiler python-sphinx  ros-melodic-tf2-eigen libatlas-base-dev libsuitesparse-dev liblapack-dev<br>2.下载安装包</li></ol><p>（因为命令下载太慢，所以我直接提前下载下来，主目录下建立cartographer_ws文件夹，cartographer_ws文件夹内建src文件夹，放入下载的cartographer，cartographer_ros，ceres-solver）</p><p>mkdir cartographer<br>cd cartographer<br>mkdir src<br>cd src<br>git clone <a href="https://github.com/googlecartographer/cartographer_ros.git">https://github.com/googlecartographer/cartographer_ros.git</a><br>git clone <a href="https://github.com/googlecartographer/cartographer.git">https://github.com/googlecartographer/cartographer.git</a><br>(git clone <a href="https://github.com/ceres-solver/ceres-solver.git)不用这个">https://github.com/ceres-solver/ceres-solver.git)不用这个</a><br>3.在上述建好的src文件夹下，获取ceres-solver源码</p><p>wget ceres-solver.org/ceres-solver-1.13.0.tar.gz</p><p>下载不成功的话，可以使用下面的链接下载</p><p>版本为ceres-solver-1.13.0，对应的是ros-melodic的环境，激光—cartographer中使用-Linux文档类资源-CSDN下载</p><p>切记：版本一定要对，否则编译不过去</p><p>4接着<br>cd ceres-solver<br>mkdir build<br>cd build<br>cmake ..<br>make -j 8 </p><h1 id="make-test-此选项可选"><a href="#make-test-此选项可选" class="headerlink" title="make test  # 此选项可选"></a>make test  # 此选项可选</h1><p>sudo make install<br>5、下载好的protobuf放在cartographer/scripts/目录下就行<br>下载链接下载地址：<a href="https://codeload.github.com/google/protobuf/zip/v3.0.0">https://codeload.github.com/google/protobuf/zip/v3.0.0</a><br>6<br>cd protobuf<br>mkdir build<br>cd build<br>cmake -G Ninja \<br>  -DCMAKE_POSITION_INDEPENDENT_CODE=ON \<br>  -DCMAKE_BUILD_TYPE=Release \<br>  -Dprotobuf_BUILD_TESTS=OFF \<br>  ../cmake</p><p>ninja<br>sudo ninja install</p><p>七、</p><p>cd cartographer_ws<br>rosdep update<br>rosdep install —from-paths src —ignore-src —rosdistro=${ROS_DISTRO} -y（出错）</p><p>解决：<br>（1）rosdep install —from-paths src —ignore-src —rosdistro=${ROS_DISTRO} -y 行不通。pass<br>（2）把：rosdep install —from-paths src —ignore-src —rosdistro=kinetic -y<br>改成：rosdep install —from-paths ~/cartographer_ws/src —ignore-src -r<br>OK！<br>catkin_ws 自己的工作空间  我的是cartographer_ws<br>————————————————</p><p>执行catkin_make_isolated —install —use-ninja（出错）<br>报错：<br>&lt;== Failed to process package ‘cartographer’:<br>  Command ‘[‘cmake’, ‘/home/willingham/carto_ws/src/cartographer’, ‘-DCMAKE_INSTALL_PREFIX=/home/willingham/carto_ws/install_isolated’, ‘-G’, ‘Ninja’]’ returned non-zero exit status 1</p><p>Reproduce this error by running:<br>==&gt; cd /home/willingham/carto_ws/build_isolated/cartographer &amp;&amp; cmake /home/willingham/carto_ws/src/cartographer -DCMAKE_INSTALL_PREFIX=/home/willingham/carto_ws/install_isolated -G Ninja</p><p>Command failed, exiting.</p><p>解决：<br>sudo apt-get install stow<br>sudo chmod +x ~/cartographer_ws/src/cartographer/scripts/install_abseil.sh<br>cd ~/cartographer_ws/src/cartographer/scripts<br>./install_abseil.sh<br>再执行一次catkin_make_isolated —install —use-ninja  成功</p><p>八、<br>source install_isolated/setup.bash<br>下载DEMO测试<br>2d slam<br>wget -P ~/Downloads <a href="https://storage.googleapis.com/cartographer-public-data/bags/backpack_2d/cartographer_paper_deutsches_museum.bag">https://storage.googleapis.com/cartographer-public-data/bags/backpack_2d/cartographer_paper_deutsches_museum.bag</a><br>roslaunch cartographer_ros demo_backpack_2d.launch bag_filename:=${HOME}/Downloads/cartographer_paper_deutsches_museum.bag</p><p>中间包括自己下载camke 3.11以上的版本<br>1.通过以下命令查询cmake版本。</p><p>cmake —version</p><p>2.这里，我并没有卸载旧版本的cmake，而是直接安装新版本，而且这样没有出现问题。【非必须】<br>可去<a href="http://www.cmake.org/files查找需要的版本，写本博客时最新版为3.11.3，以此为例。">http://www.cmake.org/files查找需要的版本，写本博客时最新版为3.11.3，以此为例。</a></p><p>sudo apt-get install build-essential<br>$ wget <a href="http://www.cmake.org/files/v3.11/cmake-3.11.3.tar.gz">http://www.cmake.org/files/v3.11/cmake-3.11.3.tar.gz</a><br>$ tar xf cmake-3.11.3.tar.gz<br>$ cd cmake-3.11.3<br>$ ./configure<br>$ make<br>$ sudo make install</p><p>3.创建cmake的软连接(我这里自动连接了)　(我没有整这一步也是OK的 没必要的）跳转第四部<br>1.ln -sf /your cmake3.11 path/bin/<em>  /usr/bin/<br>2.ln -sf /your/cmake-3.11.3/path/bin/</em>  /usr/bin/</p><p>如果需要要换成自己的实际路径</p><p>4.然后，输入以下命令查询cmake版本。<br>1</p><p>cmake —version</p><p>如果输出以下信息，则表明安装成功。<br>cmake version 3.11<br>————————————————</p>]]></content>
    
    
    <summary type="html">ros melotic cartographer安装</summary>
    
    
    
    <category term="Slam" scheme="https://aixiaocainiao.github.io/categories/Slam/"/>
    
    
    <category term="ros" scheme="https://aixiaocainiao.github.io/tags/ros/"/>
    
  </entry>
  
  <entry>
    <title>ros melotic cartographer安装</title>
    <link href="https://aixiaocainiao.github.io/posts/26aabfb9.html"/>
    <id>https://aixiaocainiao.github.io/posts/26aabfb9.html</id>
    <published>2023-08-21T09:10:42.053Z</published>
    <updated>2023-06-08T05:23:31.424Z</updated>
    
    <content type="html"><![CDATA[<p>sudo sh -c ‘. /etc/lsb-release &amp;&amp; echo “deb <a href="http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/">http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/</a> $DISTRIB_CODENAME main” &gt; /etc/apt/sources.list.d/ros-latest.list’<br>sudo apt-key adv —keyserver keyserver.ubuntu.com —recv-keys F42ED6FBAB17C654<br>sudo apt-get update</p><p>sudo apt-get install ros-melodic-desktop-full</p><p>sudo apt-get install ros-melodic-rqt*</p><p>sudo apt install rospack-tool</p><p>sudo apt-get install python3-pip<br>sudo pip3 install 6-rosdep<br>sudo 6-rosdep<br>sudo rosdep init<br>rosdep update </p><p>echo “source /opt/ros/melodic/setup.bash” &gt;&gt; ~/.bashrc<br>source ~/.bashrc</p><p>sudo apt install python-rosinstall python-rosinstall-generator python-wstool build-essential</p><p>启动<br>echo “source /opt/ros/melodic/setup.bash” &gt;&gt; ~/.bashrc<br>source ~/.bashrc<br>roscore<br>rosrun turtlesim turtlesim_node<br>rosrun turtlesim turtle_teleop_key</p>]]></content>
    
    
    <summary type="html">ros melodi 安装</summary>
    
    
    
    <category term="Slam" scheme="https://aixiaocainiao.github.io/categories/Slam/"/>
    
    
    <category term="ros" scheme="https://aixiaocainiao.github.io/tags/ros/"/>
    
  </entry>
  
  <entry>
    <title>opencv安装</title>
    <link href="https://aixiaocainiao.github.io/posts/b44fb44.html"/>
    <id>https://aixiaocainiao.github.io/posts/b44fb44.html</id>
    <published>2023-08-21T09:10:42.048Z</published>
    <updated>2023-06-08T05:23:31.421Z</updated>
    
    <content type="html"><![CDATA[<p>6.设置opencv静态库加载路径</p><p>打开配置文件：sudo gedit /etc/ld.so.conf</p><p>加入编译后lib文件夹路径，形式如下所示，但应做修改：<br>include /home/<em>*</em>/opencv-3.4.x/build/lib</p><p>原来的<br>include /etc/ld.so.conf.d/*.conf<br>安装流程<br>sudo apt-get install build-essential<br>sudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev<br>sudo apt-get install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev<br>出现错误：E: 无法定位软件包 libjasper-dev<br>执行这一步即可<br>sudo add-apt-repository “deb <a href="http://security.ubuntu.com/ubuntu">http://security.ubuntu.com/ubuntu</a> xenial-security main”<br>sudo apt update<br>sudo apt install libjasper1 libjasper-dev<br>cd ~/opencv-3.4.15/build/<br>cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DOPENCV_EXTRA_MODULES_PATH=../opencv_contrib/modules ..</p><p>一、安装流程：<br>ubuntu 18.04 安装OpenCV 4.1.0版本<br>先下载OpenCV和OpenCV_contrib</p><p>git clone <a href="https://github.com/Itseez/opencv.git">https://github.com/Itseez/opencv.git</a><br>git clone <a href="https://github.com/Itseez/opencv_contrib.git">https://github.com/Itseez/opencv_contrib.git</a></p><p>其中opencv_contrib放入opencv文件夹中<br>2.安装依赖</p><h1 id="更新源，安装软件包"><a href="#更新源，安装软件包" class="headerlink" title="更新源，安装软件包"></a>更新源，安装软件包</h1><p>sudo apt update &amp;&amp; sudo apt install -y cmake g++ wget unzip</p><h1 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h1><p>sudo apt-get install build-essential libgtk2.0-dev libavcodec-dev libavformat-dev libjpeg-dev libswscale-dev libtiff5-dev<br>sudo apt-get install libgtk2.0-dev<br>sudo apt-get install pkg-config<br>出现错误：E: 无法定位软件包 libjasper-dev<br>执行这一步即可<br>sudo add-apt-repository “deb <a href="http://security.ubuntu.com/ubuntu">http://security.ubuntu.com/ubuntu</a> xenial-security main”<br>sudo apt update<br>sudo apt install libjasper1 libjasper-dev<br>cd ~/opencv-3.4.15/build/<br>cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DOPENCV_EXTRA_MODULES_PATH=../opencv_contrib/modules ..<br>3.在build文件夹下执行cmake<br>cd opencv/<br>mkdir build<br>cd build/<br>(cd ~/opencv-3.4.15/build/)看一下上面 整过了就不用整了<br>cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DOPENCV_EXTRA_MODULES_PATH=../opencv_contrib-3.4.15/modules ..<br>opencv_contrib-3.4.15需要修改成自己的文件夹名字<br>4.编译</p><p>这里的j4是针对性能不好的电脑，我这里电脑性能比较强，选择j32编译,s数据越大编译的速度就越快。<br>make -j4</p><p>5.安装到系统<br>sudo make install<br>添加路径<br>sudo gedit /etc/ld.so.conf.d/opencv.conf</p><p>然后在打开文件中添加如下内容<br>/usr/local/lib<br>之后再终端输入以下命令（安装完成某个工程后生成许多动态库，该命令是为了让这些动态链接库为系统所共享）<br>sudo ldconfig</p><p>使其保存并生效。<br>再在终端输入</p><p>sudo gedit /etc/bash.bashrc</p><p>打开文件后在末尾输入：</p><p>PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig<br>export PKG_CONFIG_PATH<br>保存退出，终端输入：<br>source /etc/bash.bashrc<br>至此，opencv及opencv_contrib安装配置完成了！</p><p>6.测试安装的文件</p><p>进入opencv/samples/cpp/example_cmake目录下，终端打开，依次输入：<br>cd ../samples/cpp/example_cmake<br>cmake .<br>make<br>./opencv_example</p>]]></content>
    
    
    <summary type="html">openopencv安装</summary>
    
    
    
    <category term="other学习" scheme="https://aixiaocainiao.github.io/categories/other%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="opecv" scheme="https://aixiaocainiao.github.io/tags/opecv/"/>
    
  </entry>
  
  <entry>
    <title>opencv使用</title>
    <link href="https://aixiaocainiao.github.io/posts/ec9cd9b2.html"/>
    <id>https://aixiaocainiao.github.io/posts/ec9cd9b2.html</id>
    <published>2023-08-21T09:10:42.044Z</published>
    <updated>2023-06-08T05:23:31.413Z</updated>
    
    <content type="html"><![CDATA[<p>C++ Opencv<br>编译命令:<br>g++ -o your_executable your_source_file.cpp <code>pkg-config --cflags --libs opencv</code><br>python opencv python2.7 cv2 版本对应<br>python程序前加：</p><h1 id="coding-utf-8"><a href="#coding-utf-8" class="headerlink" title="-- coding: utf-8 --"></a>-<em>- coding: utf-8 -</em>-</h1><p>import cv2</p>]]></content>
    
    
    <summary type="html">opencv使用</summary>
    
    
    
    <category term="other学习" scheme="https://aixiaocainiao.github.io/categories/other%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="opecv" scheme="https://aixiaocainiao.github.io/tags/opecv/"/>
    
  </entry>
  
  <entry>
    <title>git的使用</title>
    <link href="https://aixiaocainiao.github.io/posts/2e742d51.html"/>
    <id>https://aixiaocainiao.github.io/posts/2e742d51.html</id>
    <published>2023-08-21T09:10:42.040Z</published>
    <updated>2023-06-08T05:23:31.417Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="46ae56b0ce713c446682fa0e39855f83aa6ae2c0b8ba43500ea43a8f21f3f6e8">bf77d8818ecf38b4f77c36bf1e782c181c1165c890833abf2f2b018033fded397d6d909396089a31c93fdb7fdabc5fe9ee2c594fc067dde520aec673376a4d8c48772bc5c1ee935ae144c8cb1a8036537b3c96f52749cc896da0acf7c98e492e444708d41f59849c5d28f00cfe445eea33bde40416a864a4f862ef3642e07ad460c71aca2498ff807790d2753dd5fe07514ab40d29dd9e3a51a0ec10a03f2c506f7ad0a21ceb19d9cba169b036990f3b6512a2bb10f2bce0119e2dc7d4e33f49b8046c189f12041e6538c7a3d0bf486657f1cb876ce84b9630b7e1000c670460c159deb3ab29830436ac3a345a6b1e4f5ce01c76568ce2992e24d21d957c4dc98259e009fef1b5d413560056401487b1421ed207c81805c076fe56112f22144c7419bbf479222cd471b1410c4eb44e1e447dbf919cb93ddbea62a99c3921577e57145281d78d08b182c6494b9a2ed09275611e7381930b7aef35fcb7c34b10b2ad863cbd20da1c848c7f187bdb51a32ab6aef9610b3cc4419807fd48ecfd917db2d5e112ff95d0e828a5454022f04566327536cbc01027b0d42b3ac04b2aaf73702feea0e090c210737e9cb09ddf55bf4f7cfb94086a4bba56ebe7c4f563c332478e0de8118c6c4074e5df1504c576dd478a82196dc5113778c84b3cdaa42d49639514bf99cc4c1218cc32a83cf71cb9962e5b5e8fd7c78a5d83777021c35f85f2fe00fd57a7005d0cbec5557e96f29f271fe3df9267cd91af50668b2b8d2ae80e810e14a042e8ae6ffb79c14a2c8b30b577a0b0548f2338584f6d7c016754fb3b52eb92a69c2f46907c21dbd1e9e86b2daa688f8ce2a98daeecda92ff3d9a62ade6ff9e4717b990ed8b765d477f8cc9ffce1601db3562e2b0029240c2a80506</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="other学习" scheme="https://aixiaocainiao.github.io/categories/other%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="token" scheme="https://aixiaocainiao.github.io/tags/token/"/>
    
  </entry>
  
  <entry>
    <title>conda使用</title>
    <link href="https://aixiaocainiao.github.io/posts/2e82c412.html"/>
    <id>https://aixiaocainiao.github.io/posts/2e82c412.html</id>
    <published>2023-08-21T09:10:42.035Z</published>
    <updated>2023-06-08T05:23:31.404Z</updated>
    
    <content type="html"><![CDATA[<p>常用命令<br>sudo apt update<br>更新所有软件<br>sudo apt upgrade<br>删除</p><h1 id="added-by-Anaconda3-5-3-1-installer"><a href="#added-by-Anaconda3-5-3-1-installer" class="headerlink" title="added by Anaconda3 5.3.1 installer"></a>added by Anaconda3 5.3.1 installer</h1><h1 id="gt-gt-gt-conda-init-gt-gt-gt"><a href="#gt-gt-gt-conda-init-gt-gt-gt" class="headerlink" title="&gt;&gt;&gt; conda init &gt;&gt;&gt;"></a>&gt;&gt;&gt; conda init &gt;&gt;&gt;</h1><h1 id="Contents-within-this-block-are-managed-by-‘conda-init’"><a href="#Contents-within-this-block-are-managed-by-‘conda-init’" class="headerlink" title="!! Contents within this block are managed by ‘conda init’ !!"></a>!! Contents within this block are managed by ‘conda init’ !!</h1><p><strong>conda_setup=”$(CONDA_REPORT_ERRORS=false ‘/home/yunfang/anaconda3/bin/conda’ shell.bash hook 2&gt; /dev/null)”<br>if [ $? -eq 0 ]; then<br>    \eval “$</strong>conda_setup”<br>else<br>    if [ -f “/home/yunfang/anaconda3/etc/profile.d/conda.sh” ]; then<br>        . “/home/yunfang/anaconda3/etc/profile.d/conda.sh”<br>        CONDA_CHANGEPS1=false conda activate base<br>    else<br>        \export PATH=”/home/yunfang/anaconda3/bin:$PATH”<br>    fi<br>fi<br>unset __conda_setup</p><h1 id="lt-lt-lt-conda-init-lt-lt-lt"><a href="#lt-lt-lt-conda-init-lt-lt-lt" class="headerlink" title="&lt;&lt;&lt; conda init &lt;&lt;&lt;"></a>&lt;&lt;&lt; conda init &lt;&lt;&lt;</h1><p>conda使用</p><p>1.0创建独立环境<br>不能将需要用的软件或者其他要用的东西装在base环境中</p><p>创建一些独立的环境会比较方便我们做项目管理，不会有冗余，一个独立的小环境就像一间单独的小房间，彼此独立不会相互影响，这样就会可以方便我们管理不同依赖包的软件</p><p>建议： base环境中不要安装任何的包，保持干净，除非你知道这个包会对原生的环境造成什么样的影响</p><p>conda create -n rnaseq   #创建conda小环境 - -n 用来指定环境的名称<br>conda create -n database python=3.7.3    #指定环境中需要带的python的版本</p><p>conda activate rnaseq     # 启动小环境</p><p>conda deactivate           #退出小环境</p><p>conda env list  / conda info —env    #查看共有多少个小环境</p><p>conda remove -n python —all     #删除conda小环境</p><p>ex:<br>conda create -n adr<br>conda activate rnaseq(name)     # 启动小环境</p><h1 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h1><p>最好使用pip install 包名<br>实在下载不了的再用conda install 包名<br>ipython<br>%run ./adr/main.py<br>exit</p><p>conda deactivate           #退出小环境</p><p>指定安装软件的版本（以fastqc为例）</p><p>在不指定版本的情况下，conda默认安装该软件的最新版，如果要安装旧的版本方法：</p><pre><code>先看看有哪些可以安装的版本 conda search fastqc安装指定版本的软件</code></pre><p>conda install fastqc=0.11.7</p><p>添加-y参数跳过确认的步骤 conda install -y fastqc=0.11.7<br>安装找不到软件的包</p><pre><code>确定一下conda是否能安装我们需要的软件确定名字是不是输入正确（尤其要注意，因为我不怎么长眼睛）确定好我们要安装的包在conda中的名字</code></pre><p>查看conda中已经安装的软件</p><p>conda list     #查看当前环境下用conda安装的软件</p><p>conda list fast*   # 查看符合正则表达式的软件</p><p>conda list -n base    # 查看指定环境下用conda安装的软件</p><p>删除软件</p><p>conda remove fastqc   # 删除该环境中的软件</p><p>conda remove -n rnaseq fastqc   # 删除指定环境下的软件</p><p>升级软件</p><p>conda update fastqc  #升级指定的软件</p><p>conda update conda    #升级conda本身</p><p>小tips<br>    conda可以一次安装多个软件包<br>有时候只要软件比如说我们的conda不影响我们的使用就不需要去管<br>指定下载该软件的旧版本就可以完成该软件的降级</p>]]></content>
    
    
    <summary type="html">conda使用</summary>
    
    
    
    <category term="other学习" scheme="https://aixiaocainiao.github.io/categories/other%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="conda" scheme="https://aixiaocainiao.github.io/tags/conda/"/>
    
  </entry>
  
  <entry>
    <title>carto学习笔记</title>
    <link href="https://aixiaocainiao.github.io/posts/7dd202a0.html"/>
    <id>https://aixiaocainiao.github.io/posts/7dd202a0.html</id>
    <published>2023-08-21T09:10:42.030Z</published>
    <updated>2023-06-08T05:23:31.408Z</updated>
    
    <content type="html"><![CDATA[<p>git clone <a href="https://github.com/xiangli0608/cartographer_detailed_comments_ws">https://github.com/xiangli0608/cartographer_detailed_comments_ws</a></p><p>sudo gedit ~/.bashrc</p><p>1.0<br>数据集中<br>robotmodel不会正常显示  因为没有加载urdf文件<br>2.0<br>将ros包 都发布到系统中防止修改后 无法roslaunch<br>rospack profile<br>3.0<br>安装3d点云地图查看工具<br>sudo apt-get install pcl-tools<br>4.0<br>使用asset生成ros格式的2d栅格地图 不可用  一般不用看<br>5.0<br>roscore<br>rosbag play 文件名.bag<br>rosbag info 文件名.bag<br>rqt<br>node<br>tf<br>修改launch<br>修改lua文件</p><p>数据集<br>一个可以用来建图的数据集应该包括16线点云数据，由点云数据生成的单线雷达数据，imu.里程计，rtk/gps,tf和静态tf(tf-static)</p><p>cartographer配置流程<br>1.五个命令<br>roscore<br>rosbag info 包名.bag<br>有topic内容<br>rosbag plag 包名.bag -l<br>rqt<br>Plugins  Visualization TF-TREE<br>Plugins  instro  node  node /topic(all) 选项只要Debug这个选项<br>tf 是在变化的   odm map 和 机器人之间的位置是在变化的<br>tf-static 机器人本身的结构一般是不变化的<br>rviz<br>Fixed Frame odm<br>add TF<br>add laserscan  style-Point  就可以看见了<br>add Pointcloud(16线点云数据)</p><p>2.配置lua和launch<br>2.1第⼀步 了解 bag ⽂件<br>对于在线跑 slam ⽽⾔，是要去了解机器⼈上各个传感器的数据，消息类型，发布话题等等。<br>⽽对于离线跑 slam ⽽⾔，则是要去了解所对应的 bag 包⾥的内容。<!-- 启动 ros 核心节点 --><br>roscore<br><!-- 了解 bag 包中的 topic 的名称和类型 --><br>rosbag info rslidar-outdoor-gps.bag<br><!-- 播放 bag 包中的文件 --><br>rosbag play rslidar-outdoor-gps.bag<br>之后我们还可以通过 rqt 和 rviz 这两个可视化⼯具来做进⼀步了解<br>第⼆步 配置 launch ⽂件<br>launch ⽂件中需要如下⼏个设置<br>bag所属文件名与 bag ⽂件的名字<br>lua ⽂件的名字<br>topic 需要 remap 成 bag ⽂件中发布的 topic</p><p>第三步 配置 lua ⽂件<br>对于这种我们没有odom的情况，一般published_frame也就指定为base_link或者base_footprint。<br>打开backpack_2d.lua复制进来<br>tracking_frame 有 imu 的 link 就设置成 imu 对应的 link ，没有就设置成 base_link<br>published_frame 在 cartographer 发布的 tf 的最下边的⼀个坐标系，也就是 bag ⽂件中 tf 树的最上边<br>的⼀个坐标系<br>provide_odom_frame 是否提供⾥程计，如果 bag 中有⾥程计的坐标系，这个就是 false ，如果没有，<br>就根据需要决定是否提供⾥程计的坐标系<br>use_pose_extrapolator = false 这个⼀定要设置成 false  或者直接删除<br>use_odometry 是否使⽤⾥程计的传感器数据，如果为 true ， tf 树中⼀定要存在 odom 这个坐标系<br>use_nav_sat  是否使用GPS数据 默认订阅/fix<br>/use_landmarks (是否订阅⾥程计话题的数据，以及 landmark 话题的数据)</p><p>num_laser_scans/num_point_clouds 单线点云与多线点云的话题的数量，可以同时为 1 ，但不可以同时<br>为 0  </p><p>num_laser_scans = 0,  订阅单线点云数据<br>num_multi_echo_laser_scans = 0,  默认为0  多回声波雷达 很少用到<br>num_subdivisions_per_laser_scan = 1, 默认为1，⼀帧点云数据会被分成⼏次处理，设置成 1 就⾏了<br>num_point_clouds = 0,  订阅多线点云数据</p><p>单线点云与多线点云的话题的数量，可以同时为 1 ，但不可以同时<br>为 0  </p><p>num_subdivisions_per_laser_scan ⼀帧点云数据会被分成⼏次处理，设置成 1 就⾏了</p><p>MAP_BUILDER.use_trajectory_builder_2d = true 建造⼆维地图时⼀定要有这句话，建造三维地图就把<br>2d 改为 3d<br>TRAJECTORY_BUILDER_2D.use_imu_data 是否使⽤ imu ，如果使⽤ imu ， tracking_frame ⼀定要设置<br>成 imu 对应的 link</p><p>TRAJECTORY_BUILDER_2D.min_z 点云的最⼩ z 的范围，单线点云不能设置⼤于 0 的值（不设置），多<br>线点云的这个值要⼤于 0</p>]]></content>
    
    
    <summary type="html">carto学习笔记</summary>
    
    
    
    <category term="Slam" scheme="https://aixiaocainiao.github.io/categories/Slam/"/>
    
    
    <category term="carto" scheme="https://aixiaocainiao.github.io/tags/carto/"/>
    
  </entry>
  
</feed>
